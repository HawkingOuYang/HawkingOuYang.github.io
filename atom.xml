<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tech. Memo</title>
  <subtitle>stay hungry, stay foolish.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://HawkingOuYang.github.io/"/>
  <updated>2019-01-17T03:35:18.000Z</updated>
  <id>https://HawkingOuYang.github.io/</id>
  
  <author>
    <name>HawkingOuYang</name>
    <email>Hawking.HK@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>React Native, Flutter, Wepy</title>
    <link href="https://HawkingOuYang.github.io/2018/09/15/43_react_native_flutter_wepy/"/>
    <id>https://HawkingOuYang.github.io/2018/09/15/43_react_native_flutter_wepy/</id>
    <published>2018-09-14T16:00:00.000Z</published>
    <updated>2019-01-17T03:35:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章出处，原创于 <a href="https://HawkingOuYang.github.io/">https://HawkingOuYang.github.io/</a></p>
<p><a href="https://github.com/HawkingOuYang/" target="_blank" rel="external">我的GitHub</a></p>
<hr>
<p>React Native vs. Flutter 评测 (2018-06-27)<br><a href="https://zhuanlan.zhihu.com/p/38015960" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/38015960</a></p>
<p>Flutter React编程范式实践(2018-07-17)<br><a href="https://yq.aliyun.com/articles/613395" target="_blank" rel="external">https://yq.aliyun.com/articles/613395</a></p>
<p>流言终结者- Flutter和RN谁才是更好的跨端开发方案？(2018-09-10)<br><a href="https://yq.aliyun.com/articles/637499" target="_blank" rel="external">https://yq.aliyun.com/articles/637499</a></p>
<p>入坑Flutter ,弃坑React-Native(简单体验)(2018/08/15)<br><a href="https://my.oschina.net/roycehe/blog/1928163" target="_blank" rel="external">https://my.oschina.net/roycehe/blog/1928163</a></p>
<p>Airbnb 弃用之后，我们还应该用 React Native 吗？( 2018年06月27日)<br><a href="https://www.oschina.net/news/97466/should-we-use-react-native?p=2" target="_blank" rel="external">https://www.oschina.net/news/97466/should-we-use-react-native?p=2</a></p>
<p>flutter初探,从零开始搭建一个app (2018-08-11)<br><a href="http://dopro.io/flutter.html" target="_blank" rel="external">http://dopro.io/flutter.html</a></p>
<p>React Native (InfoQ)<br><a href="http://www.infoq.com/cn/react-native-explore" target="_blank" rel="external">http://www.infoq.com/cn/react-native-explore</a></p>
<p>Flutter (software)  (wikipedia)<br><a href="https://en.wikipedia.org/wiki/Flutter_(software" target="_blank" rel="external">https://en.wikipedia.org/wiki/Flutter_(software</a>)</p>
<p>React Navigation 简介 (官方)<br><a href="https://reactnavigation.org/docs/zh-Hans/navigating.html" target="_blank" rel="external">https://reactnavigation.org/docs/zh-Hans/navigating.html</a></p>
<p>React Native 中文网 (官方)<br><a href="https://reactnative.cn/docs/props/" target="_blank" rel="external">https://reactnative.cn/docs/props/</a></p>
<p>推荐react-navigation的使用<br><a href="https://blog.csdn.net/sinat_17775997/article/details/70861065" target="_blank" rel="external">https://blog.csdn.net/sinat_17775997/article/details/70861065</a></p>
<p>React Native导航器之react-navigation使用 (腾讯)<br><a href="https://cloud.tencent.com/developer/article/1038523" target="_blank" rel="external">https://cloud.tencent.com/developer/article/1038523</a></p>
<p>reactNative开发中react-navigation三种使用情况案例<br><a href="https://blog.csdn.net/kuangshp128/article/details/78573860" target="_blank" rel="external">https://blog.csdn.net/kuangshp128/article/details/78573860</a></p>
<p>React Native未来导航者：react-navigation 使用详解（基础篇）<br><a href="https://blog.csdn.net/u013718120/article/details/72357698" target="_blank" rel="external">https://blog.csdn.net/u013718120/article/details/72357698</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文章出处，原创于 &lt;a href=&quot;https://HawkingOuYang.github.io/&quot;&gt;https://HawkingOuYang.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/HawkingOuYang
    
    </summary>
    
      <category term="前端" scheme="https://HawkingOuYang.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="https://HawkingOuYang.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>小程序</title>
    <link href="https://HawkingOuYang.github.io/2018/04/15/42_wechat_weapp_how/"/>
    <id>https://HawkingOuYang.github.io/2018/04/15/42_wechat_weapp_how/</id>
    <published>2018-04-14T16:00:00.000Z</published>
    <updated>2019-01-17T03:35:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章出处，原创于 <a href="https://HawkingOuYang.github.io/">https://HawkingOuYang.github.io/</a></p>
<p><a href="https://github.com/HawkingOuYang/" target="_blank" rel="external">我的GitHub</a></p>
<hr>
<p>小程序裸奔教程<br><a href="https://zhuanlan.zhihu.com/p/37667537?utm_source=qq&amp;utm_medium=social&amp;utm_oi=800678243513569280" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/37667537?utm_source=qq&amp;utm_medium=social&amp;utm_oi=800678243513569280</a></p>
<p>wepy<br><a href="https://tencent.github.io/wepy/index.html" target="_blank" rel="external">https://tencent.github.io/wepy/index.html</a><br><a href="https://tencent.github.io/wepy/document.html#/" target="_blank" rel="external">https://tencent.github.io/wepy/document.html#/</a></p>
<p><img src="http://7xpc28.com1.z0.glb.clouddn.com/wechat_weapp_this.$apply.png" alt="wepy this.$apply()"></p>
<p>二维码B接口<br><a href="https://developers.weixin.qq.com/blogdetail?action=get_post_info&amp;lang=zh_CN&amp;token=&amp;docid=6a5dc8758ab1a33f6c6bd1a823a45617" target="_blank" rel="external">https://developers.weixin.qq.com/blogdetail?action=get_post_info&amp;lang=zh_CN&amp;token=&amp;docid=6a5dc8758ab1a33f6c6bd1a823a45617</a></p>
<p>小程序 资料 (good)<br><a href="https://www.w3cschool.cn/weixinapp/" target="_blank" rel="external">https://www.w3cschool.cn/weixinapp/</a></p>
<p>flex 浏览器 支持 ?  兼容查询<br><a href="https://caniuse.com/#search=flex" target="_blank" rel="external">https://caniuse.com/#search=flex</a></p>
<p>小程序开发过程中常见问题 (good)<br><a href="https://www.cnblogs.com/fastmover/p/9321504.html" target="_blank" rel="external">https://www.cnblogs.com/fastmover/p/9321504.html</a></p>
<p>谷歌也玩小程序了，2.8亿日活背后的新流量生态迁徙如何抓住新机会 |【经纬低调出品】<br><a href="https://mp.weixin.qq.com/s?src=11&amp;timestamp=1532783483&amp;ver=1026&amp;signature=lgZRk2W1YbYMxsxDRgP3C9j0yPxTPccDc4zdHW0BRMOhIhHb7f*FpRuaau5GJitWpZmqmnZOtzZtHc0w-ofanhp7cMK566wLSIEbFSb3p15QsP8Lql5c6en8bclJ0c7v&amp;new=1" target="_blank" rel="external">https://mp.weixin.qq.com/s?src=11&amp;timestamp=1532783483&amp;ver=1026&amp;signature=lgZRk2W1YbYMxsxDRgP3C9j0yPxTPccDc4zdHW0BRMOhIhHb7f*FpRuaau5GJitWpZmqmnZOtzZtHc0w-ofanhp7cMK566wLSIEbFSb3p15QsP8Lql5c6en8bclJ0c7v&amp;new=1</a></p>
<p>JDReact小程序双向转换工具介绍<br><a href="https://mp.weixin.qq.com/s?src=11&amp;timestamp=1532783083&amp;ver=1026&amp;signature=g34sKdG3u2PuzE81NLCfpznPi2Wxl4A6PDUQ5ZAhhkRvAChT9aUIQcRdDE7edd79XVxSpCRM9Yz7HdwmkOEmigfRH9cMUckRsCrCcXwN8Z9V5j3J*vcBzlbshm7f-IRF&amp;new=1" target="_blank" rel="external">https://mp.weixin.qq.com/s?src=11&amp;timestamp=1532783083&amp;ver=1026&amp;signature=g34sKdG3u2PuzE81NLCfpznPi2Wxl4A6PDUQ5ZAhhkRvAChT9aUIQcRdDE7edd79XVxSpCRM9Yz7HdwmkOEmigfRH9cMUckRsCrCcXwN8Z9V5j3J*vcBzlbshm7f-IRF&amp;new=1</a></p>
<hr>
<p>小程序开发入门记录</p>
<p>一、先通读一遍小程序官方文档（<a href="https://developers.weixin.qq.com/miniprogram/introduction/index.html），了解小程序及小程序的组成，体验官方提供的DEMO，然后读一下示例或者写HelloWorld，之后大概就想知道wxml和wxss要怎么编写，因为小程序官方不会介绍这两个具体的规则和规范，所以出门左转去看HTML和CSS（http://www.runoob.com），WEB和小程序有相似有区别，比如没有WINDOW、DOM，DIV和VIEW的相似和区别等，其中FLEX布局（相对布局）相是主要运用的，之后会结合浮动定位布局（绝对布局）。CSS的前世今生了解一下（https://zh.wikibooks.org/wiki/CSS）另外这两篇文章讲的FLEX布局非常好（http://www.ruanyifeng.com/blog/2015/07/flex-examples.html）（http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html）" target="_blank" rel="external">https://developers.weixin.qq.com/miniprogram/introduction/index.html），了解小程序及小程序的组成，体验官方提供的DEMO，然后读一下示例或者写HelloWorld，之后大概就想知道wxml和wxss要怎么编写，因为小程序官方不会介绍这两个具体的规则和规范，所以出门左转去看HTML和CSS（http://www.runoob.com），WEB和小程序有相似有区别，比如没有WINDOW、DOM，DIV和VIEW的相似和区别等，其中FLEX布局（相对布局）相是主要运用的，之后会结合浮动定位布局（绝对布局）。CSS的前世今生了解一下（https://zh.wikibooks.org/wiki/CSS）另外这两篇文章讲的FLEX布局非常好（http://www.ruanyifeng.com/blog/2015/07/flex-examples.html）（http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html）</a></p>
<p>二、接下来作为很多年客户端开发的老司机，肯定会想了解小程序的底层架构和原理，如何写出性能更好的小程序，利用小程序天然的异步和延迟能做哪些勾当，这个官方文档会详细讲解（<a href="https://developers.weixin.qq.com/ebook?action=get_post_info&amp;token=935589521&amp;volumn=1&amp;lang=zh_CN&amp;book=miniprogram&amp;docid=0008aeea9a8978ab0086a685851c0a）" target="_blank" rel="external">https://developers.weixin.qq.com/ebook?action=get_post_info&amp;token=935589521&amp;volumn=1&amp;lang=zh_CN&amp;book=miniprogram&amp;docid=0008aeea9a8978ab0086a685851c0a）</a></p>
<p>三、至于JS，会纠结一下面向对象，忍一忍，边写边看文档就OK了</p>
<hr>
<p>前端技术  <a href="http://www.runoob.com/" target="_blank" rel="external">http://www.runoob.com/</a></p>
<p>CSS维基百科  <a href="https://zh.wikibooks.org/wiki/CSS" target="_blank" rel="external">https://zh.wikibooks.org/wiki/CSS</a></p>
<p>Flex 布局教程：实例篇  <a href="http://www.ruanyifeng.com/blog/2015/07/flex-examples.html" target="_blank" rel="external">http://www.ruanyifeng.com/blog/2015/07/flex-examples.html</a></p>
<p>Flex 布局教程：语法篇  <a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html" target="_blank" rel="external">http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html</a></p>
<p>JavaScript教程  <a href="https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000" target="_blank" rel="external">https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000</a></p>
<p>onfire.js<br><a href="https://github.com/hustcc/onfire.js/blob/master/README_zh.md" target="_blank" rel="external">https://github.com/hustcc/onfire.js/blob/master/README_zh.md</a></p>
<p>开发 | 小程序跨页传值的的问题，这个 JS 库就能解决（内附项目地址）<br><a href="https://www.ifanr.com/minapp/878030" target="_blank" rel="external">https://www.ifanr.com/minapp/878030</a></p>
<p>Flex 布局语法教程<br><a href="http://www.runoob.com/w3cnote/flex-grammar.html" target="_blank" rel="external">http://www.runoob.com/w3cnote/flex-grammar.html</a></p>
<hr>
<p>微信小程序组件化开发框架文档</p>
<p><a href="http://www.hishop.com.cn/xiaocx/show_35435.html" target="_blank" rel="external">http://www.hishop.com.cn/xiaocx/show_35435.html</a></p>
<p>运行环境差异<br><a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/details.html" target="_blank" rel="external">https://developers.weixin.qq.com/miniprogram/dev/devtools/details.html</a></p>
<hr>
<p>博客:</p>
<p>CSS中的浮动和清除浮动，梳理一下！<br><a href="https://www.jianshu.com/p/09bd5873bed4" target="_blank" rel="external">https://www.jianshu.com/p/09bd5873bed4</a></p>
<p>CSS布局–浮动与定位<br><a href="https://www.jianshu.com/p/2d286904fbce" target="_blank" rel="external">https://www.jianshu.com/p/2d286904fbce</a></p>
<p>文档流，浮动，定位及造成的影响文档流的知识点 (good)<br><a href="https://www.cnblogs.com/tongtian17/p/6255777.html" target="_blank" rel="external">https://www.cnblogs.com/tongtian17/p/6255777.html</a></p>
<p>1.浮动元素会从文档正常流中删除，但它仍会影响布局<br>2.浮动非替换元素必须为其指定width，否则元素的width会趋于0而导致浮动元素不能完整显示<br>3.一旦元素具有了浮动属性，它便成为了一个块级元素。<br>4.浮动元素的左右外边界不能超出包含块的左右内边界<br>5.浮动元素永不会重叠<br>6.浮动元素不会超过容器的上padding<br>7.后浮动的元素永不会超过先浮动元素的顶端<br>8.浮动元素会尽可能高地放置，便这个高受限于规则6和规则7<br>9.浮动元素的下边界没有要求，因此当容器不足以容下浮动元素时，浮动元素会向下延伸。但部分浏览器会采取增大容器高度以容下浮动元素，而对于符合CSS2.1规范的浏览器要想让容器容下浮动元素的一个可行方法是：让容器也浮动<br>10.浮动元素向下延伸时，不会影响正常文本的显示，文本会相对于浮动元素进行偏移。但部分文本背景会被浮动元素遮住<br>11.如果浮动元素设置了负的外边距、这将破坏规则4、6、7<br>12.当浮动元素的width&gt;容器的width时，这会使得浮动元素超出容器的左右边界(超左超右依浮动方向而定)<br>13.浮动重叠规则：行内框(如strong)与浮动元素重叠时，其边框、背景、内容均位于浮动元素之上；块框与浮动元素重叠时，其边框、背景在浮动元素之下，而内容在浮动元素之上。<br>14.对某个元素应用clear:left，意味着这个元素的左边不能有浮动元素。<br>15.clear不能用于非块级元素，比如<br>，在大多数浏览器看来它是一个非块级元素，因此如果对br应用clear来清除浮动不会有任何效果，除非改变br的display:block。<br>16.如果某元素应用clear清除浮动，则此元素设置的上外边距值会被忽略，但会有一个重新计算的上外边距值(甚至可能为0).如果希望此元素与浮动元素之间有一个明确的间隔，可以在浮动元素上设置下外边距。</p>
<p>清除浮动的方法</p>
<p>　　如果一个父盒子中有一个子盒子，并且父盒子没有设置高，子盒子在父盒子中进行了浮动，那么将来父盒子的高度为0.由于将来父盒子的高度为0，下面的元素会自动补位，所以这个时候要进行浮动的清除。clear:both</p>
<p>　　1.使用额外标签法：</p>
<p>　　在浮动的盒子之下再放一个标签，在这个标签中使用clear:both,来清除浮动对页面的影响。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">　　<span class="selector-class">.clearfix</span> &#123;<span class="attribute">clear</span>:both;&#125;</div><div class="line"></div><div class="line">　　&lt;<span class="selector-tag">div</span> class=<span class="string">"clearfix"</span>&gt;&lt;/div&gt;</div></pre></td></tr></table></figure></p>
<p>　　a.内部标签：会将这个浮动盒子的父盒子高度重新撑开</p>
<p>　　b.外部标签：会将这个浮动盒子的影响清除，但是不会撑开盒子。</p>
<p>　　注意：一般情况下不会使用这一种方式来清除浮动。因为这个清除浮动的方式会增加页面的标签。</p>
<p>　　2.使用overflow属性来清除浮动：</p>
<p>　　先找到浮动盒子的父元素，再在父元素中添加一个属性，就是清除这个父元素中的子元素浮动对页面的影响。</p>
<p>　　overflow：hidden；</p>
<p>　　3.使用伪元素(给父元素)来清除浮动：<br>　　<br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">// <span class="built_in">fix</span>: Object.<span class="built_in">values</span> 在 iOS9 或者 其他机型 中 undefined</div><div class="line">objectValues(mapObj) &#123;</div><div class="line">  <span class="built_in">var</span> <span class="built_in">values</span> = []</div><div class="line">  <span class="built_in">var</span> keys = Object.keys(mapObj)</div><div class="line">  keys.forEach(k =&gt; &#123;</div><div class="line">    <span class="built_in">var</span> v = mapObj[k]</div><div class="line">    <span class="built_in">values</span>.<span class="built_in">push</span>(v)</div><div class="line">  &#125;)</div><div class="line">  <span class="built_in">return</span> <span class="built_in">values</span></div><div class="line">&#125;,</div></pre></td></tr></table></figure></p>
<figure class="highlight scss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.clearfix</span>::after &#123;</div><div class="line">　　<span class="attribute">content</span>: <span class="string">""</span>;<span class="comment">//添加内容为空</span></div><div class="line"></div><div class="line">    <span class="attribute">height</span>: <span class="number">0</span>;<span class="comment">//内容高度为0</span></div><div class="line"></div><div class="line">    <span class="attribute">line-height</span>: <span class="number">0</span>;<span class="comment">//内容文本的高度为0</span></div><div class="line"></div><div class="line">    <span class="attribute">display</span>: block;<span class="comment">//将文本设置为块级元素</span></div><div class="line"></div><div class="line">    <span class="attribute">clear</span>: both;<span class="comment">//清除浮动</span></div><div class="line"></div><div class="line">    <span class="attribute">visibility</span>: hidden;<span class="comment">//将元素隐藏</span></div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.clearfix</span> &#123;</div><div class="line"></div><div class="line">    zoom: <span class="number">1</span>;<span class="comment">/*为了兼容ie6*/</span></div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>
<p>像VUE一样写微信小程序-深入研究wepy框架<br><a href="https://mp.weixin.qq.com/s/R2IlOzlA9Mb_XevDXAITdw" target="_blank" rel="external">https://mp.weixin.qq.com/s/R2IlOzlA9Mb_XevDXAITdw</a></p>
<p>小程序wepy.js框架总结<br><a href="http://www.cnblogs.com/cczlovexw/p/8461722.html" target="_blank" rel="external">http://www.cnblogs.com/cczlovexw/p/8461722.html</a></p>
<p>微信小程序详解——小程序的生命周期和页面的生命周期<br><a href="https://blog.csdn.net/qq_26585943/article/details/54407202" target="_blank" rel="external">https://blog.csdn.net/qq_26585943/article/details/54407202</a></p>
<hr>
<p>微信小程序学习用demo：计算器；使用rpn.js实现eval函数功能<br><a href="http://www.wxapp-union.com/forum.php?mod=viewthread&amp;tid=1513" target="_blank" rel="external">http://www.wxapp-union.com/forum.php?mod=viewthread&amp;tid=1513</a></p>
<p>微信小程序使用第三方库（第三方js）问题<br><a href="https://blog.csdn.net/u012421719/article/details/56676801" target="_blank" rel="external">https://blog.csdn.net/u012421719/article/details/56676801</a></p>
<p>javascript/微信小程序中将String进行Base64编码并UTF-8格式输出<br><a href="https://blog.csdn.net/huangmeimao/article/details/74905749" target="_blank" rel="external">https://blog.csdn.net/huangmeimao/article/details/74905749</a></p>
<p>探索javascript中null和undefined的深渊 译<br><a href="https://www.cnblogs.com/yiliweichinasoft/p/3700342.html" target="_blank" rel="external">https://www.cnblogs.com/yiliweichinasoft/p/3700342.html</a></p>
<p>CSS3圆角详解<br><a href="http://www.ruanyifeng.com/blog/2010/12/detailed_explanation_of_css3_rounded_corners.html" target="_blank" rel="external">http://www.ruanyifeng.com/blog/2010/12/detailed_explanation_of_css3_rounded_corners.html</a></p>
<p>CSS 属性 will-change<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/will-change" target="_blank" rel="external">https://developer.mozilla.org/zh-CN/docs/Web/CSS/will-change</a></p>
<p>使用CSS3 will-change提高页面滚动、动画等渲染性能<br><a href="https://www.zhangxinxu.com/wordpress/2015/11/css3-will-change-improve-paint/" target="_blank" rel="external">https://www.zhangxinxu.com/wordpress/2015/11/css3-will-change-improve-paint/</a></p>
<p>CSS中position的absolute和relative用法<br><a href="https://www.cnblogs.com/cdgxa/p/4600242.html" target="_blank" rel="external">https://www.cnblogs.com/cdgxa/p/4600242.html</a> (good)</p>
<p>overflow: hidden用法，不仅仅是隐藏溢出<br><a href="https://www.cnblogs.com/Likebard/p/5899512.html" target="_blank" rel="external">https://www.cnblogs.com/Likebard/p/5899512.html</a></p>
<p>对象拷贝 与 深拷贝 Object.assign()<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/assign" target="_blank" rel="external">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/assign</a></p>
<hr>
<p>通过$navigate跳转同一页面，点击back按钮造成页面的data与页面显示不一致 #1728<br><a href="https://github.com/Tencent/wepy/issues/1728" target="_blank" rel="external">https://github.com/Tencent/wepy/issues/1728</a></p>
<p>两级页面为同一路由时，后者数据覆盖前者 #322<br><a href="https://github.com/Tencent/wepy/issues/322" target="_blank" rel="external">https://github.com/Tencent/wepy/issues/322</a></p>
<p>解决方案: onLoad(options) { this.loadWithOptions(options) }<br>loadWithOptions(options) {<br>    // 一些代码<br>}</p>
<p><a href="https://developers.weixin.qq.com/community/develop/doc/00086eae518d70f88ea7557fb56c00?highLine=%25E8%2583%25B6%25E5%259B%258A%25E4%25BD%258D%25E7%25BD%25AE" target="_blank" rel="external">https://developers.weixin.qq.com/community/develop/doc/00086eae518d70f88ea7557fb56c00?highLine=%25E8%2583%25B6%25E5%259B%258A%25E4%25BD%258D%25E7%25BD%25AE</a></p>
<p>高适应性的自定义导航栏开发思路<br><a href="https://developers.weixin.qq.com/community/develop/doc/0006c012dc8028f04b070dd0551004" target="_blank" rel="external">https://developers.weixin.qq.com/community/develop/doc/0006c012dc8028f04b070dd0551004</a></p>
<p>小程序设置 navigationStyle 是 custom 的时候，胶囊定位<br><a href="https://developers.weixin.qq.com/community/develop/doc/000a22e2510bb814e8278fbfb5b004?highLine=%25E8%2583%25B6%25E5%259B%258A%25E4%25BD%258D%25E7%25BD%25AE" target="_blank" rel="external">https://developers.weixin.qq.com/community/develop/doc/000a22e2510bb814e8278fbfb5b004?highLine=%25E8%2583%25B6%25E5%259B%258A%25E4%25BD%258D%25E7%25BD%25AE</a></p>
<p>胶囊按钮的大小和位置与官方描述不符，求教真实尺寸<br><a href="https://developers.weixin.qq.com/community/develop/doc/000a2a589ccec861de677fba651000?highLine=%25E8%2583%25B6%25E5%259B%258A%25E4%25BD%258D%25E7%25BD%25AE" target="_blank" rel="external">https://developers.weixin.qq.com/community/develop/doc/000a2a589ccec861de677fba651000?highLine=%25E8%2583%25B6%25E5%259B%258A%25E4%25BD%258D%25E7%25BD%25AE</a></p>
<hr>
<p>小程序 埋点(即 表单提交formSubmit)<br>小程序 + 服务端, 联调 经验证:<br>1、登入 绑定 button, 表单提交 绑定 button<br>2、冒泡事件, 用户一个点击, 可以同时触发 ‘登入’(获取code, userid、token) 和 ‘表单提交’(获取表单id)<br>3、时序: 一个点击 同时 触发 ‘登入’和‘表单提交’ –&gt; 弹窗授权登入 —&gt; 登入之后 token userid openid —&gt; 给 服务器上报 表单id</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 收藏</span></div><div class="line">&lt;view <span class="class"><span class="keyword">class</span></span>=<span class="string">"unLogin-collect"</span> wx:<span class="keyword">if</span>=<span class="string">"&#123;&#123;!isLogin&#125;&#125;"</span> <span class="meta">@tap</span>.stop=<span class="symbol">'unLoginCollectActio</span>n'&gt;</div><div class="line">    &lt;form bindsubmit=<span class="string">"formSubmit"</span> report-submit=<span class="string">"true"</span>&gt;</div><div class="line">        &lt;button formType=<span class="string">"submit"</span> wx:<span class="keyword">if</span>=<span class="string">"&#123;&#123;shareShowFormSubmit&#125;&#125;"</span>  id=<span class="string">"&#123;&#123;item.id&#125;&#125;"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"formSubmitBtn"</span> <span class="meta">@tap</span>=<span class="string">"formSubmitBtnAction"</span>&gt;</div><div class="line">            &lt;button id=<span class="string">"&#123;&#123;item.id&#125;&#125;"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"button"</span> open-<span class="class"><span class="keyword">type</span></span>=<span class="string">"getUserInfo"</span> bindgetuserinfo=<span class="string">"bindgetuserinfo"</span>&gt;</div><div class="line">            &lt;/button&gt;</div><div class="line">        &lt;/button&gt;</div><div class="line">    &lt;/form&gt;</div><div class="line">&lt;/view&gt;</div></pre></td></tr></table></figure>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">formSubmitBtnAction _class &#123;<span class="string">active:</span> <span class="literal">true</span>, <span class="string">name:</span> <span class="string">"system"</span>, <span class="string">source:</span> e, <span class="string">type:</span> <span class="string">"tap"</span>, <span class="string">timeStamp:</span> <span class="number">12667</span>, …&#125;</div><div class="line">post-item-share.<span class="string">js:</span><span class="number">271</span> unLoginCollectAction _class &#123;<span class="string">active:</span> <span class="literal">true</span>, <span class="string">name:</span> <span class="string">"system"</span>, <span class="string">source:</span> e, <span class="string">type:</span> <span class="string">"tap"</span>, <span class="string">timeStamp:</span> <span class="number">12667</span>, …&#125;</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 嵌套: 外层button</span></div><div class="line"></div><div class="line"><span class="comment">// 收藏</span></div><div class="line">&lt;view <span class="class"><span class="keyword">class</span></span>=<span class="string">"unLogin-collect"</span> wx:<span class="keyword">if</span>=<span class="string">"&#123;&#123;!isLogin&#125;&#125;"</span> @tap.stop=<span class="string">'unLoginCollectAction'</span>&gt;</div><div class="line">    <span class="xml"><span class="comment">&lt;!-- &lt;form bindsubmit="formSubmit" report-submit="true"&gt; --&gt;</span></span></div><div class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"&#123;&#123;item.id&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"button"</span> <span class="attr">open-type</span>=<span class="string">"getUserInfo"</span> <span class="attr">bindgetuserinfo</span>=<span class="string">"bindgetuserinfo"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">formType</span>=<span class="string">"submit"</span> <span class="attr">wx:if</span>=<span class="string">"&#123;&#123;shareShowFormSubmit&#125;&#125;"</span>  <span class="attr">id</span>=<span class="string">"&#123;&#123;item.id&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"formSubmitBtn"</span> @<span class="attr">tap</span>=<span class="string">"formSubmitBtnAction"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- &lt;/form&gt; --&gt;</span>  </div><div class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 微信弹窗授权登入</span></div><div class="line">unLoginCollectAction _class &#123;<span class="string">active:</span> <span class="literal">true</span>, <span class="string">name:</span> <span class="string">"system"</span>, <span class="string">source:</span> e, <span class="string">type:</span> <span class="string">"tap"</span>, <span class="string">timeStamp:</span> <span class="number">5959</span>, …&#125;</div></pre></td></tr></table></figure>
<figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="xml">// 嵌套: 外层button</span></div><div class="line"></div><div class="line">// 收藏</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"unLogin-collect"</span> <span class="attr">wx:if</span>=<span class="string">"</span></span><span class="template-variable">&#123;&#123;!isLogin&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> @<span class="attr">tap.stop</span>=<span class="string">'unLoginCollectAction'</span>&gt;</span></span></div><div class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">bindsubmit</span>=<span class="string">"formSubmit"</span> <span class="attr">report-submit</span>=<span class="string">"true"</span>&gt;</span></div><div class="line">      <span class="comment">&lt;!-- &lt;button id="</span><span class="template-variable">&#123;&#123;item.id&#125;&#125;</span><span class="xml"><span class="comment">" class="button" open-type="getUserInfo" bindgetuserinfo="bindgetuserinfo"&gt; --&gt;</span></span></div><div class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">formType</span>=<span class="string">"submit"</span> <span class="attr">wx:if</span>=<span class="string">"</span></span><span class="template-variable">&#123;&#123;shareShowFormSubmit&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>  <span class="attr">id</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;item.id&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">class</span>=<span class="string">"formSubmitBtn"</span> @<span class="attr">tap</span>=<span class="string">"formSubmitBtnAction"</span>&gt;</span></span></div><div class="line">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">      <span class="comment">&lt;!-- &lt;/button&gt; --&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span>  </div><div class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">form发生了submit事件，携带数据为： &#123;<span class="string">value:</span> &#123;…&#125;, <span class="string">formId:</span> <span class="string">"the formId is a mock one"</span>, <span class="string">target:</span> &#123;…&#125;&#125;</div><div class="line">app.<span class="string">js:</span><span class="number">139</span> <span class="keyword">this</span>.globalData.token.accessToken <span class="literal">null</span></div><div class="line">post-item-share.<span class="string">js:</span><span class="number">206</span> formSubmitBtnAction _class &#123;<span class="string">active:</span> <span class="literal">true</span>, <span class="string">name:</span> <span class="string">"system"</span>, <span class="string">source:</span> e, <span class="string">type:</span> <span class="string">"tap"</span>, <span class="string">timeStamp:</span> <span class="number">5894</span>, …&#125;</div><div class="line">post-item-share.<span class="string">js:</span><span class="number">271</span> unLoginCollectAction _class &#123;<span class="string">active:</span> <span class="literal">true</span>, <span class="string">name:</span> <span class="string">"system"</span>, <span class="string">source:</span> e, <span class="string">type:</span> <span class="string">"tap"</span>, <span class="string">timeStamp:</span> <span class="number">5894</span>, …&#125;</div></pre></td></tr></table></figure>
<figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="xml">// 收藏</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"unLogin-collect"</span> <span class="attr">wx:if</span>=<span class="string">"</span></span><span class="template-variable">&#123;&#123;!isLogin&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> @<span class="attr">tap.stop</span>=<span class="string">'unLoginCollectAction'</span>&gt;</span></span></div><div class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">bindsubmit</span>=<span class="string">"formSubmit"</span> <span class="attr">report-submit</span>=<span class="string">"true"</span>&gt;</span></div><div class="line">      <span class="comment">&lt;!-- &lt;button id="</span><span class="template-variable">&#123;&#123;item.id&#125;&#125;</span><span class="xml"><span class="comment">" class="button" open-type="getUserInfo" bindgetuserinfo="bindgetuserinfo"&gt; --&gt;</span></span></div><div class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">formType</span>=<span class="string">" "</span> <span class="attr">wx:if</span>=<span class="string">"</span></span><span class="template-variable">&#123;&#123;shareShowFormSubmit&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>  <span class="attr">id</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;item.id&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">class</span>=<span class="string">"formSubmitBtn"</span> @<span class="attr">tap</span>=<span class="string">"formSubmitBtnAction"</span>&gt;</span></span></div><div class="line">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">      <span class="comment">&lt;!-- &lt;/button&gt; --&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span>  </div><div class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">formSubmitBtnAction _class &#123;<span class="string">active:</span> <span class="literal">true</span>, <span class="string">name:</span> <span class="string">"system"</span>, <span class="string">source:</span> e, <span class="string">type:</span> <span class="string">"tap"</span>, <span class="string">timeStamp:</span> <span class="number">4467</span>, …&#125;</div><div class="line">post-item-share.<span class="string">js:</span><span class="number">271</span> unLoginCollectAction _class &#123;<span class="string">active:</span> <span class="literal">true</span>, <span class="string">name:</span> <span class="string">"system"</span>, <span class="string">source:</span> e, <span class="string">type:</span> <span class="string">"tap"</span>, <span class="string">timeStamp:</span> <span class="number">4467</span>, …&#125;</div></pre></td></tr></table></figure>
<figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="xml">// 收藏</span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"unLogin-collect"</span> <span class="attr">wx:if</span>=<span class="string">"</span></span><span class="template-variable">&#123;&#123;!isLogin&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> @<span class="attr">tap.stop</span>=<span class="string">'unLoginCollectAction'</span>&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">bindsubmit</span>=<span class="string">"formSubmit"</span> <span class="attr">report-submit</span>=<span class="string">"true"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"</span></span><span class="template-variable">&#123;&#123;item.id&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">class</span>=<span class="string">"button"</span> <span class="attr">open-type</span>=<span class="string">"getUserInfo"</span> <span class="attr">bindgetuserinfo</span>=<span class="string">"bindgetuserinfo"</span> <span class="attr">formType</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;shareShowFormSubmit ? 'submit' : ''&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> @<span class="attr">tap</span>=<span class="string">"formSubmitBtnAction"</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></div><div class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span>  </div><div class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line">  <span class="comment">&lt;!-- 收藏 --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">bindsubmit</span>=<span class="string">"formSubmit"</span> <span class="attr">report-submit</span>=<span class="string">"true"</span> <span class="attr">wx:if</span>=<span class="string">"</span></span><span class="template-variable">&#123;&#123;isLogin&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">formType</span>=<span class="string">"submit"</span> <span class="attr">wx:if</span>=<span class="string">"</span></span><span class="template-variable">&#123;&#123;shareShowFormSubmit&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>  <span class="attr">id</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;item.id&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">class</span>=<span class="string">"formSubmitBtn"</span> @<span class="attr">tap</span>=<span class="string">"formSubmitBtnAction"</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">授权登入 | 提交表单 | 收藏</div><div class="line">form发生了submit事件，携带数据为： &#123;<span class="string">value:</span> &#123;…&#125;, <span class="string">formId:</span> <span class="string">"the formId is a mock one"</span>, <span class="string">target:</span> &#123;…&#125;&#125;</div><div class="line">app.<span class="string">js:</span><span class="number">139</span> <span class="keyword">this</span>.globalData.token.accessToken <span class="literal">null</span></div><div class="line">post-item-share.<span class="string">js:</span><span class="number">206</span> formSubmitBtnAction _class &#123;<span class="string">active:</span> <span class="literal">true</span>, <span class="string">name:</span> <span class="string">"system"</span>, <span class="string">source:</span> e, <span class="string">type:</span> <span class="string">"tap"</span>, <span class="string">timeStamp:</span> <span class="number">4666</span>, …&#125;</div><div class="line">post-item-share.<span class="string">js:</span><span class="number">271</span> unLoginCollectAction _class &#123;<span class="string">active:</span> <span class="literal">true</span>, <span class="string">name:</span> <span class="string">"system"</span>, <span class="string">source:</span> e, <span class="string">type:</span> <span class="string">"tap"</span>, <span class="string">timeStamp:</span> <span class="number">4666</span>, …&#125;</div></pre></td></tr></table></figure>
<figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">form</span> <span class="attr">bindsubmit</span>=<span class="string">"formSubmit"</span> <span class="attr">report-submit</span>=<span class="string">"true"</span>&gt;</span></span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">formType</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"followBtn"</span> <span class="attr">wx:if</span>=<span class="string">"</span></span><span class="template-variable">&#123;&#123;showFollowBtn&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">style</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;hasShare ? 'margin-right: 0;':''&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> @<span class="attr">tap</span>=<span class="string">'followAction'</span>&gt;</span></span></div><div class="line">    <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">'follow-img'</span> <span class="attr">src</span>=<span class="string">'../../assets/icon_plus_white.png'</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"follow-txt"</span>&gt;</span>关注<span class="tag">&lt;/<span class="name">text</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">formType</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"unFollowBtn"</span> <span class="attr">wx:if</span>=<span class="string">"</span></span><span class="template-variable">&#123;&#123;showUnFollowBtn&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">style</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;hasShare ? 'margin-right: 0;':''&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> @<span class="attr">tap</span>=<span class="string">'unFollowAction'</span>&gt;</span>取消关注<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">formType</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"mutualFollowBtn"</span> <span class="attr">wx:if</span>=<span class="string">"</span></span><span class="template-variable">&#123;&#123;showMutualFollowBtn&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">style</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;hasShare ? 'margin-right: 0;':''&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> @<span class="attr">tap</span>=<span class="string">'mutualFollowAction'</span>&gt;</span>互相关注<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="comment">&lt;!-- '关注/取消关注' 需要先登录 --&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"unLogin-follow"</span> <span class="attr">wx:if</span>=<span class="string">"</span></span><span class="template-variable">&#123;&#123;!isLogin&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> @<span class="attr">tap.stop</span>=<span class="string">'unLoginFollowAction'</span>&gt;</span></span></div><div class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">bindsubmit</span>=<span class="string">"formSubmit"</span> <span class="attr">report-submit</span>=<span class="string">"true"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button"</span> <span class="attr">open-type</span>=<span class="string">"getUserInfo"</span> <span class="attr">formType</span>=<span class="string">"submit"</span> <span class="attr">bindgetuserinfo</span>=<span class="string">"bindgetuserinfo"</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- '关注/取消关注' 需要先登录 --&gt;</span></div></pre></td></tr></table></figure>
<hr>
<figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">小程序</span> <span class="comment">埋点(即</span> <span class="comment">表单提交formSubmit)</span> <span class="comment">统计:</span> <span class="comment">在</span> <span class="comment">不改变</span> <span class="comment">原来逻辑的前提下</span><span class="string">,</span> <span class="comment">新增逻辑:</span></div><div class="line"><span class="comment">一、视频分享页:</span> </div><div class="line"><span class="comment">	1、广告X按钮</span>  <span class="literal">-</span><span class="literal">-</span> <span class="comment">ok</span> <span class="literal">-</span><span class="literal">-</span> <span class="comment">不强制登入;</span> <span class="comment">如果已登入</span><span class="string">,</span> <span class="comment">则</span> <span class="comment">提交表单;</span></div><div class="line"><span class="comment">	2、弹窗‘关注’的</span> <span class="comment">右边按钮</span> <span class="comment">‘关注Ta’</span> <span class="literal">-</span><span class="literal">-</span> <span class="comment">ok</span> <span class="literal">-</span><span class="literal">-</span> <span class="comment">强制登入</span><span class="string">,</span> <span class="comment">登入之后</span><span class="string">,</span> <span class="comment">自动</span> <span class="comment">提交表单;</span> <span class="comment">如果已登入</span><span class="string">,</span> <span class="comment">则</span> <span class="comment">提交表单;</span></div><div class="line"><span class="comment">	3、头像</span> <span class="comment">名字</span> <span class="literal">-</span><span class="literal">-</span> <span class="comment">ok</span> <span class="literal">-</span><span class="literal">-</span> <span class="comment">不强制登入;</span> <span class="comment">如果已登入</span><span class="string">,</span> <span class="comment">则</span> <span class="comment">提交表单;</span></div><div class="line"><span class="comment">	4、</span><span class="literal">+</span><span class="comment">关注</span> <span class="literal">-</span><span class="literal">-</span> <span class="comment">ok</span> <span class="literal">-</span><span class="literal">-</span> <span class="comment">强制登入</span><span class="string">,</span> <span class="comment">登入之后</span><span class="string">,</span> <span class="comment">自动</span> <span class="comment">提交表单;</span> <span class="comment">如果已登入</span><span class="string">,</span> <span class="comment">则</span> <span class="comment">提交表单;</span></div><div class="line"><span class="comment">	5、播放</span> <span class="literal">-</span><span class="literal">-</span> <span class="comment">ok</span> <span class="literal">-</span><span class="literal">-</span> <span class="comment">强制登入</span><span class="string">,</span> <span class="comment">登入之后</span><span class="string">,</span> <span class="comment">自动</span> <span class="comment">提交表单;</span> <span class="comment">如果已登入</span><span class="string">,</span> <span class="comment">则</span> <span class="comment">提交表单;</span></div><div class="line"><span class="comment">	6、分享至</span> <span class="comment">微信好友</span> <span class="literal">-</span><span class="literal">-</span> <span class="comment">ok</span> <span class="literal">-</span><span class="literal">-</span> <span class="comment">不强制登入;</span> <span class="comment">如果已登入</span><span class="string">,</span> <span class="comment">则</span> <span class="comment">提交表单;</span></div><div class="line"><span class="comment">	7、分享至</span> <span class="comment">朋友圈</span> <span class="literal">-</span><span class="literal">-</span> <span class="comment">ok</span> <span class="literal">-</span><span class="literal">-</span> <span class="comment">强制登入</span><span class="string">,</span> <span class="comment">登入之后</span><span class="string">,</span> <span class="comment">自动</span> <span class="comment">提交表单;</span> <span class="comment">如果已登入</span><span class="string">,</span> <span class="comment">则</span> <span class="comment">提交表单;</span></div><div class="line"><span class="comment">	8、重播</span> <span class="literal">-</span><span class="literal">-</span> <span class="comment">ok</span> <span class="literal">-</span><span class="literal">-</span> <span class="comment">强制登入</span><span class="string">,</span> <span class="comment">登入之后</span><span class="string">,</span> <span class="comment">自动</span> <span class="comment">提交表单;</span> <span class="comment">如果已登入</span><span class="string">,</span> <span class="comment">则</span> <span class="comment">提交表单;</span></div><div class="line"><span class="comment">	9、收藏</span> <span class="literal">-</span><span class="literal">-</span> <span class="comment">ok</span> <span class="literal">-</span><span class="literal">-</span> <span class="comment">强制登入</span><span class="string">,</span> <span class="comment">登入之后</span><span class="string">,</span> <span class="comment">自动</span> <span class="comment">提交表单;</span> <span class="comment">如果已登入</span><span class="string">,</span> <span class="comment">则</span> <span class="comment">提交表单;</span></div><div class="line"><span class="comment">	10、我也要上传长视频</span>  <span class="literal">-</span><span class="literal">-</span> <span class="comment">ok</span> <span class="literal">-</span><span class="literal">-</span> <span class="comment">不强制登入;</span> <span class="comment">如果已登入</span><span class="string">,</span> <span class="comment">则</span> <span class="comment">提交表单;</span></div><div class="line"><span class="comment">	11、进入我的关注</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">ok</span> <span class="literal">-</span><span class="literal">-</span> <span class="comment">不强制登入;</span> <span class="comment">如果已登入</span><span class="string">,</span> <span class="comment">则</span> <span class="comment">提交表单;</span></div><div class="line"><span class="comment">二、其他页面(非</span> <span class="comment">视频分享页)</span> <span class="comment">视频列表</span></div><div class="line"><span class="comment">	1、播放</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">ok</span> <span class="literal">-</span><span class="literal">-</span> <span class="comment">登入之后才能看到</span> <span class="comment">列表</span><span class="string">,</span> <span class="comment">才能播放</span><span class="string">,</span> <span class="comment">所以</span> <span class="comment">此处</span> <span class="comment">提交表单</span> <span class="comment">无需</span> <span class="comment">判断</span> <span class="comment">登入</span></div><div class="line"><span class="comment">三、个人主页</span></div><div class="line"><span class="comment">	1、关注</span> <span class="literal">-</span><span class="literal">-</span> <span class="comment">ok</span> <span class="literal">-</span><span class="literal">-</span> <span class="comment">强制登入</span><span class="string">,</span> <span class="comment">登入之后</span><span class="string">,</span> <span class="comment">自动</span> <span class="comment">提交表单;</span> <span class="comment">如果已登入</span><span class="string">,</span> <span class="comment">则</span> <span class="comment">提交表单;</span></div><div class="line"><span class="comment">	2、取消关注</span> <span class="literal">-</span><span class="literal">-</span> <span class="comment">ok</span> <span class="literal">-</span><span class="literal">-</span> <span class="comment">强制登入</span><span class="string">,</span> <span class="comment">登入之后</span><span class="string">,</span> <span class="comment">自动</span> <span class="comment">提交表单;</span> <span class="comment">如果已登入</span><span class="string">,</span> <span class="comment">则</span> <span class="comment">提交表单;</span></div></pre></td></tr></table></figure>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">检查方法: </div><div class="line">首先: 打开 调试</div><div class="line">然后: 点 上面各种按钮</div><div class="line">再: 看日志, 会出现: </div><div class="line"> form发生了submit事件，携带数据为： &#123;<span class="string">value:</span> &#123;…&#125;, <span class="string">formId:</span> <span class="string">"the formId is a mock one"</span>, <span class="string">target:</span> &#123;…&#125;&#125;</div><div class="line">app.<span class="string">js:</span><span class="number">139</span> <span class="keyword">this</span>.globalData.token.accessToken <span class="number">9</span>dd961964ec547e2bd5836712bdaaee91536829166758</div><div class="line">request.<span class="string">js:</span><span class="number">657</span> <span class="string">formID:</span>the formId is a mock one</div><div class="line">app.<span class="string">js:</span><span class="number">378</span> <span class="string">intercept:</span> &#123;<span class="string">url:</span> <span class="string">"https://域名/message/spot/save"</span>, <span class="string">method:</span> <span class="string">"POST"</span>, <span class="string">data:</span> &#123;…&#125;</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div><div class="line">413</div><div class="line">414</div><div class="line">415</div><div class="line">416</div><div class="line">417</div><div class="line">418</div><div class="line">419</div><div class="line">420</div><div class="line">421</div><div class="line">422</div><div class="line">423</div><div class="line">424</div><div class="line">425</div><div class="line">426</div><div class="line">427</div><div class="line">428</div><div class="line">429</div><div class="line">430</div><div class="line">431</div><div class="line">432</div><div class="line">433</div><div class="line">434</div><div class="line">435</div><div class="line">436</div><div class="line">437</div><div class="line">438</div><div class="line">439</div><div class="line">440</div><div class="line">441</div><div class="line">442</div><div class="line">443</div><div class="line">444</div><div class="line">445</div><div class="line">446</div><div class="line">447</div><div class="line">448</div><div class="line">449</div><div class="line">450</div><div class="line">451</div><div class="line">452</div><div class="line">453</div><div class="line">454</div><div class="line">455</div><div class="line">456</div><div class="line">457</div><div class="line">458</div><div class="line">459</div><div class="line">460</div><div class="line">461</div><div class="line">462</div><div class="line">463</div><div class="line">464</div><div class="line">465</div><div class="line">466</div><div class="line">467</div><div class="line">468</div><div class="line">469</div><div class="line">470</div><div class="line">471</div><div class="line">472</div><div class="line">473</div><div class="line">474</div><div class="line">475</div><div class="line">476</div><div class="line">477</div><div class="line">478</div><div class="line">479</div><div class="line">480</div><div class="line">481</div><div class="line">482</div><div class="line">483</div><div class="line">484</div><div class="line">485</div><div class="line">486</div><div class="line">487</div><div class="line">488</div><div class="line">489</div><div class="line">490</div><div class="line">491</div><div class="line">492</div><div class="line">493</div><div class="line">494</div><div class="line">495</div><div class="line">496</div><div class="line">497</div><div class="line">498</div><div class="line">499</div><div class="line">500</div><div class="line">501</div><div class="line">502</div><div class="line">503</div><div class="line">504</div><div class="line">505</div><div class="line">506</div><div class="line">507</div><div class="line">508</div><div class="line">509</div><div class="line">510</div><div class="line">511</div><div class="line">512</div><div class="line">513</div><div class="line">514</div><div class="line">515</div><div class="line">516</div><div class="line">517</div><div class="line">518</div><div class="line">519</div><div class="line">520</div><div class="line">521</div><div class="line">522</div><div class="line">523</div><div class="line">524</div><div class="line">525</div><div class="line">526</div><div class="line">527</div><div class="line">528</div><div class="line">529</div><div class="line">530</div><div class="line">531</div><div class="line">532</div><div class="line">533</div><div class="line">534</div><div class="line">535</div><div class="line">536</div><div class="line">537</div><div class="line">538</div><div class="line">539</div><div class="line">540</div><div class="line">541</div><div class="line">542</div><div class="line">543</div><div class="line">544</div><div class="line">545</div><div class="line">546</div><div class="line">547</div><div class="line">548</div><div class="line">549</div><div class="line">550</div><div class="line">551</div><div class="line">552</div><div class="line">553</div><div class="line">554</div><div class="line">555</div><div class="line">556</div><div class="line">557</div><div class="line">558</div><div class="line">559</div><div class="line">560</div><div class="line">561</div><div class="line">562</div><div class="line">563</div><div class="line">564</div><div class="line">565</div><div class="line">566</div><div class="line">567</div><div class="line">568</div><div class="line">569</div></pre></td><td class="code"><pre><div class="line">globalData = &#123;</div><div class="line">    userInfo: <span class="literal">null</span>,</div><div class="line">    loginInfo: <span class="literal">null</span>,</div><div class="line">    token: &#123;accessToken: <span class="literal">null</span>&#125;,</div><div class="line">    systemInfo: <span class="literal">null</span>,</div><div class="line"></div><div class="line">    screenWidth: <span class="number">0</span>,</div><div class="line">    screenHeight: <span class="number">0</span>,</div><div class="line">    platform: <span class="string">''</span>,</div><div class="line">    model: <span class="string">''</span>,</div><div class="line">    config: <span class="literal">null</span>,</div><div class="line">    versionInfo: <span class="literal">null</span>,</div><div class="line"></div><div class="line">    followUserIDs: <span class="keyword">new</span> <span class="built_in">Set</span>(),   <span class="comment">// 关注的用户, 用户id</span></div><div class="line">    collectVideoIDs: <span class="keyword">new</span> <span class="built_in">Set</span>(), <span class="comment">// 收藏的视频, 视频id</span></div><div class="line">    deleteVideoIDs: <span class="keyword">new</span> <span class="built_in">Set</span>(), <span class="comment">// 删除的视频, 视频id</span></div><div class="line">    editVideoItems: <span class="keyword">new</span> <span class="built_in">Set</span>(),   <span class="comment">// 修改的视频, 比如 修改 标题/封面/可见/视频集</span></div><div class="line">    videoFolderIDs: <span class="keyword">new</span> <span class="built_in">Set</span>(),    <span class="comment">// 视频集 id</span></div><div class="line">    favoriteFolderIDs: <span class="keyword">new</span> <span class="built_in">Set</span>(), <span class="comment">// 收藏夹 id</span></div><div class="line">    whoSeeArray: [], <span class="comment">// 可见</span></div><div class="line">    videoColletionArray: [], <span class="comment">// 视频集</span></div><div class="line">    videoFavoriteArray: [], <span class="comment">// 收藏夹</span></div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">wepy.$instance.globalData.favoriteFolderIDs.add(item.id)</div><div class="line">wepy.$instance.globalData.favoriteFolderIDs.delete(option.id)</div><div class="line"></div><div class="line"></div><div class="line">computed = &#123;</div><div class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.isLogin) &#123;</div><div class="line">          <span class="keyword">return</span> wepy.$instance.globalData.screenHeight - <span class="keyword">this</span>.topViewHeight - <span class="number">30</span></div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> wepy.$instance.globalData.screenHeight - <span class="keyword">this</span>.topViewHeight - <span class="number">30</span> - <span class="number">43</span></div><div class="line">      &#125;,</div><div class="line">      isLogin () &#123;</div><div class="line">        <span class="keyword">return</span> wepy.$instance.globalData.token.accessToken !== <span class="literal">null</span></div><div class="line">      &#125;,</div><div class="line">      userNickName () &#123;</div><div class="line">        <span class="keyword">if</span> (wepy.$instance.globalData.loginInfo) &#123;</div><div class="line">          <span class="keyword">return</span> wepy.$instance.globalData.loginInfo.nickName</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="literal">null</span></div><div class="line">      &#125;,</div><div class="line">      userAvatarUrl() &#123;</div><div class="line">        <span class="keyword">if</span> (wepy.$instance.globalData.loginInfo) &#123;</div><div class="line">          <span class="keyword">return</span> wepy.$instance.globalData.loginInfo.avatarUrl</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="literal">null</span></div><div class="line">      &#125;,</div><div class="line">      collectVideoIDs () &#123;</div><div class="line">        <span class="keyword">return</span> <span class="built_in">Array</span>.from(wepy.$instance.globalData.collectVideoIDs)</div><div class="line">      &#125;,</div><div class="line">      deleteVideoIDs () &#123;</div><div class="line">        <span class="keyword">return</span> <span class="built_in">Array</span>.from(wepy.$instance.globalData.deleteVideoIDs)</div><div class="line">      &#125;,</div><div class="line">      editVideoItems () &#123;</div><div class="line">        <span class="keyword">return</span> <span class="built_in">Array</span>.from(wepy.$instance.globalData.editVideoItems)</div><div class="line">      &#125;,</div><div class="line">      videoFolderIDs () &#123;</div><div class="line">        <span class="keyword">return</span> <span class="built_in">Array</span>.from(wepy.$instance.globalData.videoFolderIDs)</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line"></div><div class="line">watch = &#123;</div><div class="line">      isLogin (curVal, oldVal) &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">`旧值：<span class="subst">$&#123;oldVal&#125;</span>，新值：<span class="subst">$&#123;curVal&#125;</span>`</span>)</div><div class="line">        <span class="keyword">if</span> (oldVal === <span class="literal">false</span> &amp;&amp; curVal === <span class="literal">true</span>) &#123;</div><div class="line">          <span class="keyword">this</span>.$broadcast(<span class="string">'login-event'</span>)</div><div class="line">          <span class="keyword">this</span>.$apply()</div><div class="line">          <span class="keyword">this</span>.loadData()</div><div class="line">          <span class="keyword">this</span>.loadUserVideoCollections(<span class="literal">false</span>)</div><div class="line">        &#125;</div><div class="line">      &#125;,</div><div class="line">      userNickName (curVal, oldVal) &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">`旧值：<span class="subst">$&#123;oldVal&#125;</span>，新值：<span class="subst">$&#123;curVal&#125;</span>`</span>)</div><div class="line">        <span class="keyword">if</span> (curVal &amp;&amp; curVal.length &gt; <span class="number">0</span>) &#123;</div><div class="line">          <span class="keyword">this</span>.datalist.forEach(</div><div class="line">            item =&gt; &#123;</div><div class="line">              item.user.nickName = curVal</div><div class="line">            &#125;)</div><div class="line">          <span class="keyword">this</span>.$apply()</div><div class="line">        &#125;</div><div class="line">      &#125;,</div><div class="line">      userAvatarUrl (curVal, oldVal) &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">`旧值：<span class="subst">$&#123;oldVal&#125;</span>，新值：<span class="subst">$&#123;curVal&#125;</span>`</span>)</div><div class="line">        <span class="keyword">if</span> (curVal &amp;&amp; curVal.length &gt; <span class="number">0</span>) &#123;</div><div class="line">          <span class="keyword">this</span>.datalist.forEach(</div><div class="line">            item =&gt; &#123;</div><div class="line">              item.user.avatarUrl = curVal</div><div class="line">            &#125;)</div><div class="line">          <span class="keyword">this</span>.$apply()</div><div class="line">        &#125;</div><div class="line">      &#125;,</div><div class="line">      collectVideoIDs (curVal, oldVal) &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">`旧值：<span class="subst">$&#123;oldVal&#125;</span>，新值：<span class="subst">$&#123;curVal&#125;</span>`</span>)</div><div class="line">        <span class="keyword">var</span> tempOld = <span class="built_in">Object</span>.assign([], oldVal)</div><div class="line">        <span class="keyword">var</span> tempCur = <span class="built_in">Object</span>.assign([], curVal)</div><div class="line">        <span class="keyword">var</span> shouldUpdate = <span class="literal">false</span></div><div class="line">        <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(tempOld)) &#123;</div><div class="line">          curVal.forEach(</div><div class="line">            aID1 =&gt; &#123;</div><div class="line">              <span class="keyword">var</span> index1 = tempOld.indexOf(aID1)</div><div class="line">              <span class="keyword">if</span> (index1 &gt; <span class="number">-1</span>) &#123;</div><div class="line">                tempOld.splice(index1, <span class="number">1</span>)</div><div class="line">              &#125;</div><div class="line">            &#125;)</div><div class="line"></div><div class="line">          <span class="keyword">if</span> (tempOld.length &gt; <span class="number">0</span>) &#123;</div><div class="line">            <span class="comment">// 收藏的视频 已经变化</span></div><div class="line">            tempOld.forEach(</div><div class="line">              aID2 =&gt; &#123;</div><div class="line">                <span class="built_in">console</span>.log(<span class="string">'收藏的视频 已经变化: 删除 '</span>, aID2)</div><div class="line">                <span class="keyword">var</span> unCollects = <span class="keyword">this</span>.datalist.filter(item2 =&gt; item2.id == aID2)</div><div class="line">                unCollects.forEach(</div><div class="line">                  item22 =&gt; &#123;</div><div class="line">                    item22.favorited = <span class="literal">false</span>  <span class="comment">// 取消收藏</span></div><div class="line">                    shouldUpdate = <span class="literal">true</span></div><div class="line">                  &#125;)</div><div class="line">              &#125;)</div><div class="line">          &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(tempCur)) &#123;</div><div class="line">          oldVal.forEach(</div><div class="line">            aID3 =&gt; &#123;</div><div class="line">              <span class="keyword">var</span> index3 = tempCur.indexOf(aID3)</div><div class="line">              <span class="keyword">if</span> (index3 &gt; <span class="number">-1</span>) &#123;</div><div class="line">                tempCur.splice(index3, <span class="number">1</span>)</div><div class="line">              &#125;</div><div class="line">            &#125;)</div><div class="line"></div><div class="line">          <span class="keyword">if</span> (tempCur.length &gt; <span class="number">0</span>) &#123;</div><div class="line">            <span class="built_in">console</span>.log(<span class="string">'收藏的视频 已经变化: 新增 '</span>, tempCur)</div><div class="line">            <span class="comment">// 收藏的视频 已经变化</span></div><div class="line">            tempCur.forEach(</div><div class="line">              aID3 =&gt; &#123;</div><div class="line">                <span class="built_in">console</span>.log(<span class="string">'收藏的视频 已经变化: 新增 '</span>, aID3)</div><div class="line">                <span class="keyword">var</span> collects = <span class="keyword">this</span>.datalist.filter(item3 =&gt; item3.id == aID3)</div><div class="line">                collects.forEach(</div><div class="line">                  item33 =&gt; &#123;</div><div class="line">                    item33.favorited = <span class="literal">true</span>  <span class="comment">// 收藏</span></div><div class="line">                    shouldUpdate = <span class="literal">true</span></div><div class="line">                  &#125;)</div><div class="line">              &#125;)</div><div class="line">          &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(curVal) &amp;&amp; curVal.length === <span class="number">0</span>) &#123;</div><div class="line">          <span class="comment">// 收藏的视频 已经变化</span></div><div class="line">          <span class="keyword">this</span>.datalist.forEach(</div><div class="line">            item =&gt; &#123;</div><div class="line">              item.favorited = <span class="literal">false</span>  <span class="comment">// 取消收藏</span></div><div class="line">              shouldUpdate = <span class="literal">true</span></div><div class="line">            &#125;)</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (shouldUpdate === <span class="literal">true</span>) &#123;</div><div class="line">          <span class="keyword">this</span>.$apply()</div><div class="line">        &#125;</div><div class="line">      &#125;,</div><div class="line">      deleteVideoIDs (curVal, oldVal) &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">`旧值：<span class="subst">$&#123;oldVal&#125;</span>，新值：<span class="subst">$&#123;curVal&#125;</span>`</span>)</div><div class="line">        <span class="keyword">var</span> tempCur = <span class="built_in">Object</span>.assign([], curVal)</div><div class="line">        <span class="keyword">var</span> shouldUpdate = <span class="literal">false</span></div><div class="line">        <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(tempCur)) &#123;</div><div class="line">          <span class="keyword">var</span> dataCount1 = <span class="keyword">this</span>.datalist.length</div><div class="line">          tempCur.forEach(id =&gt; &#123;</div><div class="line">            <span class="keyword">this</span>.datalist = <span class="keyword">this</span>.datalist.filter(item =&gt; item.id != id)</div><div class="line">          &#125;)</div><div class="line">          <span class="keyword">if</span> (<span class="keyword">this</span>.datalist.length &gt; <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">this</span>.datalist[<span class="number">0</span>].isFirstItem = <span class="literal">true</span></div><div class="line">          &#125;</div><div class="line">          <span class="keyword">var</span> dataCount2 = <span class="keyword">this</span>.datalist.length</div><div class="line">          <span class="keyword">if</span> (dataCount1 - dataCount2 &gt; <span class="number">0</span>) &#123;</div><div class="line">            shouldUpdate = <span class="literal">true</span></div><div class="line">            <span class="keyword">this</span>.videoCount -= (dataCount1 - dataCount2)</div><div class="line">          &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (shouldUpdate === <span class="literal">true</span>) &#123;</div><div class="line">          <span class="keyword">this</span>.$apply()</div><div class="line"></div><div class="line">          <span class="keyword">this</span>.loadData()</div><div class="line">          <span class="keyword">this</span>.loadUserVideoCollections(<span class="literal">true</span>)</div><div class="line">        &#125;</div><div class="line">      &#125;,</div><div class="line">      editVideoItems (curVal, oldVal) &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">`旧值：<span class="subst">$&#123;oldVal&#125;</span>，新值：<span class="subst">$&#123;curVal&#125;</span>`</span>)</div><div class="line">        <span class="keyword">var</span> tempCur = <span class="built_in">Object</span>.assign([], curVal)</div><div class="line">        <span class="keyword">if</span> (tempCur &amp;&amp; tempCur.length &gt; <span class="number">0</span>) &#123;</div><div class="line">          <span class="keyword">var</span> find = <span class="literal">false</span></div><div class="line">          <span class="keyword">var</span> updateCover = <span class="literal">false</span></div><div class="line">          tempCur.forEach(video =&gt; &#123;</div><div class="line">            <span class="keyword">var</span> item = <span class="keyword">this</span>.getItemWithID(video.id)</div><div class="line">            <span class="keyword">if</span> (item &amp;&amp; (<span class="keyword">typeof</span> item.hasChanged == <span class="string">'undefined'</span> || item.hasChanged === <span class="literal">true</span>)) &#123;</div><div class="line">              find = <span class="literal">true</span></div><div class="line">              <span class="keyword">if</span> (item.hasChanged === <span class="literal">true</span>) &#123;</div><div class="line">                item.hasChanged = <span class="literal">false</span></div><div class="line">              &#125;</div><div class="line">              <span class="keyword">if</span> (<span class="keyword">typeof</span> video.coverImg.coverImgPath != <span class="string">'undefined'</span> &amp;&amp; item.coverImg.coverImgPath != video.coverImg.coverImgPath) &#123;</div><div class="line">                updateCover = <span class="literal">true</span></div><div class="line">                item.coverImg.coverImgPath = video.coverImg.coverImgPath <span class="comment">// 封面</span></div><div class="line">              &#125;</div><div class="line"></div><div class="line">              <span class="keyword">if</span> (<span class="keyword">typeof</span> video.title != <span class="string">'undefined'</span>) &#123;</div><div class="line">                item.title = video.title <span class="comment">// 标题</span></div><div class="line">              &#125;</div><div class="line">              <span class="keyword">if</span> (<span class="keyword">typeof</span> video.viewStatus != <span class="string">'undefined'</span>) &#123;</div><div class="line">                item.status = video.viewStatus <span class="comment">// 可见</span></div><div class="line">              &#125;</div><div class="line">              <span class="keyword">if</span> (<span class="keyword">typeof</span> video.videoCollectionIds != <span class="string">'undefined'</span>) &#123;</div><div class="line">                item.videoCollectionIds = video.videoCollectionIds <span class="comment">// 视频集</span></div><div class="line">              &#125;</div><div class="line">              <span class="keyword">if</span> (<span class="keyword">typeof</span> video.videoFavoriteIds != <span class="string">'undefined'</span>) &#123;</div><div class="line">                item.videoFavoriteIds = video.videoFavoriteIds <span class="comment">// 收藏夹</span></div><div class="line">              &#125;</div><div class="line">              <span class="keyword">if</span> (<span class="keyword">typeof</span> video.favorited != <span class="string">'undefined'</span>) &#123;</div><div class="line">                item.favorited = video.favorited <span class="comment">// 收藏</span></div><div class="line">              &#125;</div><div class="line">              <span class="keyword">if</span> (<span class="keyword">typeof</span> video.playCount != <span class="string">'undefined'</span>) &#123;</div><div class="line">                item.playCount = video.playCount <span class="comment">// 播放数</span></div><div class="line">              &#125;</div><div class="line">            &#125;</div><div class="line">          &#125;)</div><div class="line">          <span class="keyword">if</span> (find === <span class="literal">true</span>) &#123;</div><div class="line">            <span class="keyword">this</span>.$apply()</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (updateCover === <span class="literal">true</span>) &#123;</div><div class="line">              <span class="comment">// 刷新 视频集列表 (为了 更新 视频集的封面)</span></div><div class="line">              <span class="keyword">this</span>.loadUserVideoCollections(<span class="literal">false</span>)</div><div class="line">            &#125;</div><div class="line">          &#125;</div><div class="line">        &#125;</div><div class="line">      &#125;,</div><div class="line">      videoFolderIDs  (curVal, oldVal) &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">`旧值：<span class="subst">$&#123;oldVal&#125;</span>，新值：<span class="subst">$&#123;curVal&#125;</span>`</span>)</div><div class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.watchCollectionFolder_NoLoadData === <span class="literal">false</span>) &#123; <span class="comment">// 监听 视频集: 不加载数据 ?</span></div><div class="line">          <span class="keyword">this</span>.loadUserVideoCollections(<span class="literal">true</span>)</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line"></div><div class="line">computed = &#123;</div><div class="line">      isLogin () &#123;</div><div class="line">        <span class="keyword">return</span> wepy.$instance.globalData.token.accessToken !== <span class="literal">null</span></div><div class="line">      &#125;,</div><div class="line">      userNickName () &#123;</div><div class="line">        <span class="keyword">if</span> (wepy.$instance.globalData.loginInfo) &#123;</div><div class="line">          <span class="keyword">return</span> wepy.$instance.globalData.loginInfo.nickName</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="literal">null</span></div><div class="line">      &#125;,</div><div class="line">      userAvatarUrl() &#123;</div><div class="line">        <span class="keyword">if</span> (wepy.$instance.globalData.loginInfo) &#123;</div><div class="line">          <span class="keyword">return</span> wepy.$instance.globalData.loginInfo.avatarUrl</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="literal">null</span></div><div class="line">      &#125;,</div><div class="line">      collectVideoIDs () &#123;</div><div class="line">        <span class="keyword">return</span> <span class="built_in">Array</span>.from(wepy.$instance.globalData.collectVideoIDs)</div><div class="line">      &#125;,</div><div class="line">      deleteVideoIDs () &#123;</div><div class="line">        <span class="keyword">return</span> <span class="built_in">Array</span>.from(wepy.$instance.globalData.deleteVideoIDs)</div><div class="line">      &#125;,</div><div class="line">      editVideoItems () &#123;</div><div class="line">        <span class="keyword">return</span> <span class="built_in">Array</span>.from(wepy.$instance.globalData.editVideoItems)</div><div class="line">      &#125;,</div><div class="line">      favoriteFolderIDs () &#123;</div><div class="line">        <span class="keyword">return</span> <span class="built_in">Array</span>.from(wepy.$instance.globalData.favoriteFolderIDs)</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    watch = &#123;</div><div class="line">      isLogin (curVal, oldVal) &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">`旧值：<span class="subst">$&#123;oldVal&#125;</span>，新值：<span class="subst">$&#123;curVal&#125;</span>`</span>)</div><div class="line">        <span class="keyword">if</span> (oldVal === <span class="literal">false</span> &amp;&amp; curVal === <span class="literal">true</span>) &#123;</div><div class="line">          <span class="keyword">this</span>.$broadcast(<span class="string">'login-event'</span>)</div><div class="line">          <span class="keyword">this</span>.$apply()</div><div class="line">          <span class="keyword">this</span>.loadData()</div><div class="line">        &#125;</div><div class="line">      &#125;,</div><div class="line">      userNickName (curVal, oldVal) &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">`旧值：<span class="subst">$&#123;oldVal&#125;</span>，新值：<span class="subst">$&#123;curVal&#125;</span>`</span>)</div><div class="line">        <span class="keyword">if</span> (curVal &amp;&amp; curVal.length &gt; <span class="number">0</span>) &#123;</div><div class="line">          <span class="keyword">this</span>.datalist.forEach(</div><div class="line">            item1 =&gt; &#123;</div><div class="line">              <span class="keyword">if</span> (Util.isSelf(item1.user.uid)) &#123;</div><div class="line">                item1.user.nickName = curVal</div><div class="line">              &#125;</div><div class="line">            &#125;)</div><div class="line">          <span class="keyword">this</span>.datalistLeft.forEach(</div><div class="line">            item2 =&gt; &#123;</div><div class="line">              <span class="keyword">if</span> (Util.isSelf(item2.user.uid)) &#123;</div><div class="line">                item2.user.nickName = curVal</div><div class="line">              &#125;</div><div class="line">            &#125;)</div><div class="line">          <span class="keyword">this</span>.datalistRight.forEach(</div><div class="line">            item3 =&gt; &#123;</div><div class="line">              <span class="keyword">if</span> (Util.isSelf(item3.user.uid)) &#123;</div><div class="line">                item3.user.nickName = curVal</div><div class="line">              &#125;</div><div class="line">            &#125;)</div><div class="line">          <span class="keyword">this</span>.$apply()</div><div class="line">        &#125;</div><div class="line">      &#125;,</div><div class="line">      userAvatarUrl (curVal, oldVal) &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">`旧值：<span class="subst">$&#123;oldVal&#125;</span>，新值：<span class="subst">$&#123;curVal&#125;</span>`</span>)</div><div class="line">        <span class="keyword">if</span> (curVal &amp;&amp; curVal.length &gt; <span class="number">0</span>) &#123;</div><div class="line">          <span class="keyword">this</span>.datalist.forEach(</div><div class="line">            item1 =&gt; &#123;</div><div class="line">              <span class="keyword">if</span> (Util.isSelf(item1.user.uid)) &#123;</div><div class="line">                item1.user.avatarUrl = curVal</div><div class="line">              &#125;</div><div class="line">            &#125;)</div><div class="line">          <span class="keyword">this</span>.datalistLeft.forEach(</div><div class="line">            item2 =&gt; &#123;</div><div class="line">              <span class="keyword">if</span> (Util.isSelf(item2.user.uid)) &#123;</div><div class="line">                item2.user.avatarUrl = curVal</div><div class="line">              &#125;</div><div class="line">            &#125;)</div><div class="line">          <span class="keyword">this</span>.datalistRight.forEach(</div><div class="line">            item3 =&gt; &#123;</div><div class="line">              <span class="keyword">if</span> (Util.isSelf(item3.user.uid)) &#123;</div><div class="line">                item3.user.avatarUrl = curVal</div><div class="line">              &#125;</div><div class="line">            &#125;)</div><div class="line">          <span class="keyword">this</span>.$apply()</div><div class="line">        &#125;</div><div class="line">      &#125;,</div><div class="line">      collectVideoIDs (curVal, oldVal) &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">`旧值：<span class="subst">$&#123;oldVal&#125;</span>，新值：<span class="subst">$&#123;curVal&#125;</span>`</span>)</div><div class="line">        <span class="keyword">var</span> tempOld = <span class="built_in">Object</span>.assign([], oldVal)</div><div class="line">        <span class="keyword">var</span> tempCur = <span class="built_in">Object</span>.assign([], curVal)</div><div class="line">        <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(tempOld)) &#123;</div><div class="line">          curVal.forEach(</div><div class="line">            aID1 =&gt; &#123;</div><div class="line">              <span class="keyword">var</span> index1 = tempOld.indexOf(aID1)</div><div class="line">              <span class="keyword">if</span> (index1 &gt; <span class="number">-1</span>) &#123;</div><div class="line">                tempOld.splice(index1, <span class="number">1</span>)</div><div class="line">              &#125;</div><div class="line">            &#125;)</div><div class="line"></div><div class="line">          <span class="keyword">if</span> (tempOld.length &gt; <span class="number">0</span>) &#123;</div><div class="line">            <span class="comment">// 收藏的视频 已经变化</span></div><div class="line">            tempOld.forEach(</div><div class="line">              aID2 =&gt; &#123;</div><div class="line">                <span class="built_in">console</span>.log(<span class="string">'收藏的视频 已经变化: 删除 '</span>, aID2)</div><div class="line">                <span class="keyword">this</span>.removeUnCollectUserVideos(aID2)</div><div class="line">              &#125;)</div><div class="line"></div><div class="line">            <span class="comment">// 刷新 收藏夹列表 (为了 更新 收藏夹的封面)</span></div><div class="line">            <span class="keyword">this</span>.loadUserAllFavorites(<span class="literal">true</span>)</div><div class="line">          &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(tempCur)) &#123;</div><div class="line">          oldVal.forEach(</div><div class="line">            aID3 =&gt; &#123;</div><div class="line">              <span class="keyword">var</span> index3 = tempCur.indexOf(aID3)</div><div class="line">              <span class="keyword">if</span> (index3 &gt; <span class="number">-1</span>) &#123;</div><div class="line">                tempCur.splice(index3, <span class="number">1</span>)</div><div class="line">              &#125;</div><div class="line">            &#125;)</div><div class="line"></div><div class="line">          <span class="keyword">if</span> (<span class="keyword">this</span>.watchCollect_NoLoadData === <span class="literal">false</span> &amp;&amp; tempCur.length &gt; <span class="number">0</span>) &#123;</div><div class="line">            <span class="built_in">console</span>.log(<span class="string">'收藏的视频 已经变化: 新增 '</span>, tempCur)</div><div class="line">            <span class="comment">// 收藏的视频 已经变化</span></div><div class="line">            <span class="keyword">this</span>.loadData()</div><div class="line"></div><div class="line">            <span class="comment">// 刷新 收藏夹列表 (为了 更新 收藏夹的封面)</span></div><div class="line">            <span class="keyword">this</span>.loadUserAllFavorites(<span class="literal">true</span>)</div><div class="line">          &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.watchCollect_NoLoadData === <span class="literal">false</span> &amp;&amp; <span class="built_in">Array</span>.isArray(curVal) &amp;&amp; curVal.length === <span class="number">0</span>) &#123;</div><div class="line">          <span class="comment">// 收藏的视频 已经变化</span></div><div class="line">          <span class="keyword">this</span>.loadData()</div><div class="line">        &#125;</div><div class="line">      &#125;,</div><div class="line">      deleteVideoIDs (curVal, oldVal) &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">`旧值：<span class="subst">$&#123;oldVal&#125;</span>，新值：<span class="subst">$&#123;curVal&#125;</span>`</span>)</div><div class="line">        <span class="keyword">var</span> tempCur = <span class="built_in">Object</span>.assign([], curVal)</div><div class="line">        <span class="keyword">var</span> shouldUpdate = <span class="literal">false</span></div><div class="line">        <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(tempCur)) &#123;</div><div class="line">          <span class="keyword">var</span> dataCount1 = <span class="keyword">this</span>.datalist.length</div><div class="line">          tempCur.forEach(id =&gt; &#123;</div><div class="line">            <span class="keyword">this</span>.datalist = <span class="keyword">this</span>.datalist.filter(item =&gt; item.id != id)</div><div class="line">          &#125;)</div><div class="line">          <span class="keyword">var</span> dataCount2 = <span class="keyword">this</span>.datalist.length</div><div class="line">          <span class="keyword">if</span> (dataCount1 - dataCount2 &gt; <span class="number">0</span>) &#123; <span class="comment">// 数据源 有变化</span></div><div class="line">            shouldUpdate = <span class="literal">true</span></div><div class="line">            <span class="keyword">this</span>.clearListLeftRightData()</div><div class="line">            <span class="keyword">this</span>.handleGridDatalist(<span class="keyword">this</span>.datalist)</div><div class="line">          &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (shouldUpdate === <span class="literal">true</span>) &#123;</div><div class="line">          <span class="keyword">this</span>.$apply()</div><div class="line">        &#125;</div><div class="line">      &#125;,</div><div class="line">      editVideoItems (curVal, oldVal) &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">`旧值：<span class="subst">$&#123;oldVal&#125;</span>，新值：<span class="subst">$&#123;curVal&#125;</span>`</span>)</div><div class="line">        <span class="keyword">if</span> (curVal &amp;&amp; curVal.length &gt; <span class="number">0</span>) &#123;</div><div class="line">          <span class="keyword">var</span> find = <span class="literal">false</span></div><div class="line">          <span class="keyword">var</span> updateCover = <span class="literal">false</span></div><div class="line">          curVal.forEach(video =&gt; &#123;</div><div class="line">            <span class="keyword">var</span> item = <span class="keyword">this</span>.getItemWithID(video.id)</div><div class="line">            <span class="keyword">if</span> (item) &#123;</div><div class="line">              find = <span class="literal">true</span></div><div class="line">              item.title = video.title</div><div class="line">              <span class="keyword">if</span> (item.coverImg.coverImgPath != video.coverImg.coverImgPath) &#123;</div><div class="line">                updateCover = <span class="literal">true</span></div><div class="line">                item.coverImg.coverImgPath = video.coverImg.coverImgPath</div><div class="line">              &#125;</div><div class="line"></div><div class="line">              <span class="keyword">if</span> (<span class="keyword">typeof</span> video.favorited != <span class="string">'undefined'</span>) &#123;</div><div class="line">                item.favorited = video.favorited</div><div class="line">              &#125;</div><div class="line">              <span class="keyword">if</span> (<span class="keyword">typeof</span> video.playCount != <span class="string">'undefined'</span>) &#123;</div><div class="line">                item.playCount = video.playCount</div><div class="line">              &#125;</div><div class="line">            &#125;</div><div class="line">          &#125;)</div><div class="line">          <span class="keyword">if</span> (find === <span class="literal">true</span>) &#123;</div><div class="line">            <span class="keyword">this</span>.$apply()</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (updateCover === <span class="literal">true</span>) &#123;</div><div class="line">              <span class="comment">// 刷新 收藏夹列表 (为了 更新 收藏夹的封面)</span></div><div class="line">              <span class="keyword">this</span>.loadUserAllFavorites(<span class="literal">true</span>)</div><div class="line">            &#125;</div><div class="line">          &#125;</div><div class="line">        &#125;</div><div class="line">      &#125;,</div><div class="line">      favoriteFolderIDs (curVal, oldVal) &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">`旧值：<span class="subst">$&#123;oldVal&#125;</span>，新值：<span class="subst">$&#123;curVal&#125;</span>`</span>)</div><div class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.watchFavoriteFolder_NoLoadData === <span class="literal">false</span>) &#123; <span class="comment">// 监听 收藏夹: 不加载数据 ?</span></div><div class="line">          <span class="keyword">this</span>.loadUserAllFavorites(<span class="literal">true</span>)</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line"></div><div class="line">computed = &#123;</div><div class="line">      isLogin () &#123;</div><div class="line">        <span class="keyword">return</span> wepy.$instance.globalData.token.accessToken !== <span class="literal">null</span></div><div class="line">      &#125;,</div><div class="line">      followUserIDs () &#123;</div><div class="line">        <span class="keyword">return</span> <span class="built_in">Array</span>.from(wepy.$instance.globalData.followUserIDs)</div><div class="line">      &#125;,</div><div class="line">      collectVideoIDs () &#123;</div><div class="line">        <span class="keyword">return</span> <span class="built_in">Array</span>.from(wepy.$instance.globalData.collectVideoIDs)</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line"></div><div class="line">watch = &#123;</div><div class="line">      isLogin (curVal, oldVal) &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">`旧值：<span class="subst">$&#123;oldVal&#125;</span>，新值：<span class="subst">$&#123;curVal&#125;</span>`</span>)</div><div class="line">        <span class="keyword">if</span> (oldVal === <span class="literal">false</span> &amp;&amp; curVal === <span class="literal">true</span>) &#123;</div><div class="line">          <span class="keyword">this</span>.$broadcast(<span class="string">'login-event'</span>)</div><div class="line">          <span class="keyword">this</span>.setViewStateByFollow()</div><div class="line"></div><div class="line">          <span class="keyword">var</span> hasShowModalHitRecommend = wepy.getStorageSync(<span class="string">'hasShowModalHitRecommend'</span>)</div><div class="line">          <span class="keyword">this</span>.showModalHitRecommend = !hasShowModalHitRecommend</div><div class="line">          <span class="keyword">this</span>.$apply()</div><div class="line">        &#125;</div><div class="line">      &#125;,</div><div class="line">      followUserIDs (curVal, oldVal) &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">`旧值：<span class="subst">$&#123;oldVal&#125;</span>，新值：<span class="subst">$&#123;curVal&#125;</span>`</span>)</div><div class="line">        <span class="keyword">var</span> tempOld = <span class="built_in">Object</span>.assign([], oldVal)</div><div class="line">        <span class="keyword">var</span> tempCur = <span class="built_in">Object</span>.assign([], curVal)</div><div class="line">        <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(tempOld)) &#123;</div><div class="line">          curVal.forEach(</div><div class="line">            aID1 =&gt; &#123;</div><div class="line">              <span class="keyword">var</span> index1 = tempOld.indexOf(aID1)</div><div class="line">              <span class="keyword">if</span> (index1 &gt; <span class="number">-1</span>) &#123;</div><div class="line">                tempOld.splice(index1, <span class="number">1</span>)</div><div class="line">              &#125;</div><div class="line">            &#125;)</div><div class="line">          <span class="keyword">if</span> (tempOld.length &gt; <span class="number">0</span>) &#123;</div><div class="line">            <span class="comment">// 关注的用户 已经变化</span></div><div class="line">            tempOld.forEach(</div><div class="line">              aID2 =&gt; &#123;</div><div class="line">                <span class="built_in">console</span>.log(<span class="string">'关注的用户 已经变化: 删除 '</span>, aID2)</div><div class="line">                <span class="keyword">this</span>.removeUnFollowedUserID(aID2)</div><div class="line">              &#125;)</div><div class="line">          &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(tempCur)) &#123;</div><div class="line">          oldVal.forEach(</div><div class="line">            aID3 =&gt; &#123;</div><div class="line">              <span class="keyword">var</span> index3 = tempCur.indexOf(aID3)</div><div class="line">              <span class="keyword">if</span> (index3 &gt; <span class="number">-1</span>) &#123;</div><div class="line">                tempCur.splice(index3, <span class="number">1</span>)</div><div class="line">              &#125;</div><div class="line">            &#125;)</div><div class="line">          <span class="keyword">if</span> (<span class="keyword">this</span>.watchFollow_NoLoadData === <span class="literal">false</span> &amp;&amp; tempCur.length &gt; <span class="number">0</span>) &#123;</div><div class="line">            <span class="built_in">console</span>.log(<span class="string">'关注的用户 已经变化: 新增 '</span>, tempCur)</div><div class="line">            <span class="comment">// 关注的用户 已经变化</span></div><div class="line">            <span class="keyword">this</span>.loadData(<span class="literal">false</span>)</div><div class="line">          &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.watchFollow_NoLoadData === <span class="literal">false</span> &amp;&amp; <span class="built_in">Array</span>.isArray(curVal) &amp;&amp; curVal.length === <span class="number">0</span>) &#123;</div><div class="line">          <span class="comment">// 关注的用户 已经变化</span></div><div class="line">          <span class="keyword">this</span>.loadData(<span class="literal">false</span>)</div><div class="line">        &#125;</div><div class="line">      &#125;,</div><div class="line">      collectVideoIDs (curVal, oldVal) &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">`旧值：<span class="subst">$&#123;oldVal&#125;</span>，新值：<span class="subst">$&#123;curVal&#125;</span>`</span>)</div><div class="line">        <span class="keyword">var</span> tempOld = <span class="built_in">Object</span>.assign([], oldVal)</div><div class="line">        <span class="keyword">var</span> tempCur = <span class="built_in">Object</span>.assign([], curVal)</div><div class="line">        <span class="keyword">var</span> shouldUpdate = <span class="literal">false</span></div><div class="line">        <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(tempOld)) &#123;</div><div class="line">          curVal.forEach(</div><div class="line">            aID1 =&gt; &#123;</div><div class="line">              <span class="keyword">var</span> index1 = tempOld.indexOf(aID1)</div><div class="line">              <span class="keyword">if</span> (index1 &gt; <span class="number">-1</span>) &#123;</div><div class="line">                tempOld.splice(index1, <span class="number">1</span>)</div><div class="line">              &#125;</div><div class="line">            &#125;)</div><div class="line"></div><div class="line">          <span class="keyword">if</span> (tempOld.length &gt; <span class="number">0</span>) &#123;</div><div class="line">            <span class="comment">// 收藏的视频 已经变化</span></div><div class="line">            tempOld.forEach(</div><div class="line">              aID2 =&gt; &#123;</div><div class="line">                <span class="built_in">console</span>.log(<span class="string">'收藏的视频 已经变化: 删除 '</span>, aID2)</div><div class="line">                <span class="keyword">var</span> unCollects = <span class="keyword">this</span>.datalist.filter(item2 =&gt; item2.id == aID2)</div><div class="line">                unCollects.forEach(</div><div class="line">                  item22 =&gt; &#123;</div><div class="line">                    item22.favorited = <span class="literal">false</span>  <span class="comment">// 取消收藏</span></div><div class="line">                    shouldUpdate = <span class="literal">true</span></div><div class="line">                  &#125;)</div><div class="line">              &#125;)</div><div class="line">          &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(tempCur)) &#123;</div><div class="line">          oldVal.forEach(</div><div class="line">            aID3 =&gt; &#123;</div><div class="line">              <span class="keyword">var</span> index3 = tempCur.indexOf(aID3)</div><div class="line">              <span class="keyword">if</span> (index3 &gt; <span class="number">-1</span>) &#123;</div><div class="line">                tempCur.splice(index3, <span class="number">1</span>)</div><div class="line">              &#125;</div><div class="line">            &#125;)</div><div class="line"></div><div class="line">          <span class="keyword">if</span> (tempCur.length &gt; <span class="number">0</span>) &#123;</div><div class="line">            <span class="built_in">console</span>.log(<span class="string">'收藏的视频 已经变化: 新增 '</span>, tempCur)</div><div class="line">            <span class="comment">// 收藏的视频 已经变化</span></div><div class="line">            tempCur.forEach(</div><div class="line">              aID3 =&gt; &#123;</div><div class="line">                <span class="built_in">console</span>.log(<span class="string">'收藏的视频 已经变化: 新增 '</span>, aID3)</div><div class="line">                <span class="keyword">var</span> collects = <span class="keyword">this</span>.datalist.filter(item3 =&gt; item3.id == aID3)</div><div class="line">                collects.forEach(</div><div class="line">                  item33 =&gt; &#123;</div><div class="line">                    item33.favorited = <span class="literal">true</span>  <span class="comment">// 收藏</span></div><div class="line">                    shouldUpdate = <span class="literal">true</span></div><div class="line">                  &#125;)</div><div class="line">              &#125;)</div><div class="line">          &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(curVal) &amp;&amp; curVal.length === <span class="number">0</span>) &#123;</div><div class="line">          <span class="comment">// 收藏的视频 已经变化</span></div><div class="line">          <span class="keyword">this</span>.datalist.forEach(</div><div class="line">            item =&gt; &#123;</div><div class="line">              item.favorited = <span class="literal">false</span>  <span class="comment">// 取消收藏</span></div><div class="line">              shouldUpdate = <span class="literal">true</span></div><div class="line">            &#125;)</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (shouldUpdate === <span class="literal">true</span>) &#123;</div><div class="line">          <span class="keyword">this</span>.$apply()</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">&lt;web-view wx:<span class="keyword">if</span>=<span class="string">"&#123;&#123;webView &amp;&amp; src !== null&#125;&#125;"</span> src=<span class="string">"&#123;&#123;src&#125;&#125;"</span> bindmessage=<span class="string">"bindmessage"</span>&gt;&lt;/web-view&gt;</div><div class="line"></div><div class="line"> methods = &#123;</div><div class="line">      bindmessage(e) &#123;</div><div class="line">      	</div><div class="line">      &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">html5:</div><div class="line"></div><div class="line">window<span class="selector-class">.wx</span><span class="selector-class">.miniProgram</span><span class="selector-class">.postMessage</span>(&#123;</div><div class="line">    data: result</div><div class="line">&#125;)</div><div class="line">window<span class="selector-class">.wx</span><span class="selector-class">.miniProgram</span><span class="selector-class">.navigateBack</span>() <span class="comment">// 小程序: 返回 上级页面</span></div><div class="line"><span class="comment">// let build = this.$route.query.build || 0</span></div><div class="line"><span class="comment">// if (build &lt; 10) &#123;</span></div><div class="line"><span class="comment">//   window.wx.miniProgram.navigateBack() // 小程序: 返回 上级页面</span></div><div class="line"><span class="comment">// &#125; else &#123;</span></div><div class="line"><span class="comment">//   window.wx.miniProgram.redirectTo(&#123; // 小程序: 重定向到 ‘发布视频’ 页</span></div><div class="line"><span class="comment">//     url: `post/post-page`</span></div><div class="line"><span class="comment">//   &#125;)</span></div><div class="line"><span class="comment">// &#125;</span></div></pre></td></tr></table></figure>
<hr>
<figure class="highlight sqf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">扫描 小程序 码</div><div class="line"><span class="comment">// 格式: id=169682&amp;tp=share&amp;su=45</span></div><div class="line"></div><div class="line">onLoad(options) &#123;</div><div class="line">   <span class="keyword">if</span> (<span class="built_in">typeof</span> (options.scene) != <span class="string">'undefined'</span>) &#123; <span class="comment">// 扫码</span></div><div class="line">        var scene = decodeURIComponent(options.scene)   <span class="comment">// 格式: id=169682&amp;tp=share&amp;su=45</span></div><div class="line">        var <span class="built_in">params</span> = &#123;&#125;</div><div class="line">        scene.split(<span class="string">'&amp;'</span>).<span class="keyword">forEach</span>(element =&gt; &#123;</div><div class="line">          var key = element.split(<span class="string">'='</span>)[<span class="number">0</span>]</div><div class="line">          var value = element.split(<span class="string">'='</span>)[<span class="number">1</span>]</div><div class="line">          <span class="built_in">params</span>[key] = value</div><div class="line">        &#125;)</div><div class="line">        </div><div class="line">	</div><div class="line">&#125; <span class="keyword">else</span> &#123; <span class="comment">// 转发url 跳转</span></div><div class="line">        <span class="comment">// 格式: id=169682&amp;tp=share&amp;su=45</span></div><div class="line">        console.<span class="built_in">log</span>(`options. +  options.id ` + options.id + <span class="string">'options.from '</span> + options.<span class="keyword">from</span> + <span class="string">'options.type '</span> + options.<span class="built_in">type</span> + <span class="string">'options.tp '</span> + options.tp + <span class="string">'options.su '</span> + options.su)</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 转发</span></div><div class="line">onShareAppMessage (option) &#123;</div><div class="line">	<span class="keyword">if</span> (option.<span class="keyword">from</span> == <span class="string">'button'</span>) &#123;</div><div class="line">		return &#123;</div><div class="line">          title: nickName + <span class="string">'分享给你一个视频，点击查看～'</span>,</div><div class="line">          imageUrl: imageUrl,</div><div class="line">          path: <span class="string">'/pages/user-page?id='</span>参数<span class="string">')</span></div><div class="line">        &#125;</div><div class="line">	&#125; else &#123;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 旋转 按钮</span></div><div class="line">.refresh_tip &#123;</div><div class="line">    <span class="built_in">width</span>: <span class="number">100</span>%;</div><div class="line">    <span class="built_in">height</span>: <span class="number">98</span>rpx;</div><div class="line">    <span class="built_in">background</span>-color: rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">.8</span>);</div><div class="line">    color: white;</div><div class="line">    font-<span class="built_in">size</span>: <span class="number">28</span>rpx;</div><div class="line">    font-weight: bold;</div><div class="line">    <span class="built_in">position</span>: fixed;</div><div class="line">    top: <span class="number">0</span>;</div><div class="line">    <span class="built_in">text</span>-align: center;</div><div class="line">    <span class="built_in">line</span>-<span class="built_in">height</span>: <span class="number">98</span>rpx;</div><div class="line">    z-index: <span class="number">100</span>;</div><div class="line">  &#125;</div><div class="line">  .refreshBtn &#123;</div><div class="line">    <span class="built_in">position</span>: fixed;</div><div class="line">    right: <span class="number">40</span>rpx;</div><div class="line">    bottom: <span class="number">40</span>rpx;</div><div class="line">    <span class="built_in">width</span>: <span class="number">80</span>rpx;</div><div class="line">    <span class="built_in">height</span>: <span class="number">80</span>rpx;</div><div class="line">  &#125;</div><div class="line">  .circleLoading &#123;</div><div class="line">    <span class="built_in">position</span>: fixed;</div><div class="line">    right: <span class="number">40</span>rpx;</div><div class="line">    bottom: <span class="number">40</span>rpx;</div><div class="line">    <span class="built_in">width</span>: <span class="number">80</span>rpx;</div><div class="line">    <span class="built_in">height</span>: <span class="number">80</span>rpx;</div><div class="line">    .icon_refresh_bg&#123;</div><div class="line">      <span class="built_in">width</span>: <span class="number">80</span>rpx;</div><div class="line">      <span class="built_in">height</span>: <span class="number">80</span>rpx;</div><div class="line">    &#125;</div><div class="line">    .icon_refresh_arrow &#123;</div><div class="line">      <span class="built_in">position</span>: absolute;</div><div class="line">      left: <span class="number">20</span>rpx;</div><div class="line">      top: <span class="number">16</span>rpx;</div><div class="line">      <span class="built_in">width</span>: <span class="number">40</span>rpx;</div><div class="line">      <span class="built_in">height</span>: <span class="number">40</span>rpx;</div><div class="line">      animation: circleLoad <span class="number">0.5</span>s linear infinite;</div><div class="line">    &#125;</div><div class="line">    @keyframes circleLoad &#123;</div><div class="line">      <span class="number">100</span>%&#123;</div><div class="line">        transform: rotate(<span class="number">360</span>deg);</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  </div><div class="line"></div><div class="line">&lt;<span class="built_in">image</span> <span class="keyword">class</span>=<span class="string">"refreshBtn"</span> src=<span class="string">'../assets/icon_refresh.png'</span> @tap.<span class="built_in">stop</span>=<span class="string">"refreshAction"</span> wx:<span class="built_in">if</span>=<span class="string">"&#123;&#123;showRefreshBtn === true &amp;&amp; showCircleLoading===false&#125;&#125;"</span>/&gt;</div><div class="line">  &lt;view <span class="keyword">class</span>=<span class="string">"circleLoading"</span> wx:<span class="built_in">if</span>=<span class="string">"&#123;&#123;showCircleLoading&#125;&#125;"</span>&gt;</div><div class="line">    &lt;<span class="built_in">image</span> <span class="keyword">class</span>=<span class="string">"icon_refresh_bg"</span> src=<span class="string">'../assets/icon_refresh_bg.png'</span> wx:<span class="built_in">if</span>=<span class="string">"&#123;&#123;showCircleLoading===true&#125;&#125;"</span>&gt;</div><div class="line">      &lt;<span class="built_in">image</span> <span class="keyword">class</span>=<span class="string">"icon_refresh_arrow"</span> src=<span class="string">'../assets/icon_refresh_arrow.png'</span> wx:<span class="built_in">if</span>=<span class="string">"&#123;&#123;showCircleLoading===true&#125;&#125;"</span>&gt;&lt;/<span class="built_in">image</span>&gt;</div><div class="line">    &lt;/<span class="built_in">image</span>&gt;</div><div class="line">  &lt;/view&gt;</div><div class="line">  </div><div class="line"></div><div class="line">isiPhoneX() &#123;</div><div class="line">      <span class="built_in">if</span> (wepy.$instance.globalData &amp;&amp; wepy.$instance.globalData.model) &#123;</div><div class="line">        var model = wepy.$instance.globalData.model</div><div class="line">        var isX = model.indexOf(<span class="string">'iPhone X'</span>) !== <span class="number">-1</span></div><div class="line">        <span class="built_in">return</span> isX</div><div class="line">      &#125;</div><div class="line">      <span class="built_in">return</span> false</div><div class="line">    &#125;,</div><div class="line">```</div></pre></td></tr></table></figure>
<p> Request.modifyVideo({<br>        id: that.item.id,<br>        item: that.item,  // wepy的bug, 需要这样修改 数据item<br>        title: title,  // 视频标题<br>        success: function (res) {<br>          wepy.hideLoading()<br>          wepy.showToast({<br>            title: “编辑成功”<br>          })<br>          setTimeout(() =&gt; {<br>            wepy.navigateBack({<br>            })<br>          }, 500) // 因为: 弹出toast, 所以: 延迟0.5秒<br>        },<br>        fail: function (e) {<br>          wepy.hideLoading()<br>          wepy.showModal({<br>            title: “编辑失败”,<br>            content: JSON.stringify(e),<br>            showCancel: false,<br>            confirmText: “确定”<br>          })<br>        },<br>        complete: function () {</p>
<pre><code>  }
})
</code></pre><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure>
<p>wepy.setKeepScreenOn({<br>            keepScreenOn: false<br>          })</p>
<p>judgeNameEmpty (strToJudge) {<br>      var str = strToJudge<br>      var s = Util.allTrim(str)<br>      console.log(‘name: {‘ + s + ‘}’)<br>      if (s.length === 0) {<br>        return true<br>      }<br>      return false<br>    }</p>
<p> copyPCWebPath(e) {<br>        var path = ‘<a href="https://网址" target="_blank" rel="external">https://网址</a>‘<br>        wepy.setClipboardData({<br>          data: path,<br>          success: function(res) {<br>            wepy.showModal({<br>              content: path + ‘ 网址已复制，可在PC登录’,<br>              showCancel: false,<br>              confirmText: ‘确定’<br>            })<br>          }<br>        })<br>      },<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure></p>
<pre><code>&lt;text class=&apos;fans-detail-text&apos; style=&quot;{{(wepy.$instance.globalData.platform == 'android') ? 'margin-bottom: 6rpx;' : 'margin-bottom: 1rpx;'}}&quot;&gt;{{fans}}&lt;/text&gt;
</code></pre><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure>
<p>  // 小程序客服<br>  .contactButton {<br>    width: 100%;<br>    height: 115rpx; // 115<br>    background-color: transparent;<br>  }<br>  .contactButton::after {<br>    border: 0;<br>  }</p>
<p>  <button wx:if="false" open-type="contact" class="contactButton" session-from="weapp" bindcontact="bindContact" style="top: NaNrpx; left: 0; position: absolute"><br>  </button><br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">      </div><div class="line">```      </div><div class="line"><span class="selector-tag">wepy</span><span class="selector-class">.hideTabBarRedDot</span>(&#123;</div><div class="line">          <span class="attribute">index</span>: <span class="number">3</span>,</div><div class="line">        &#125;)</div><div class="line"></div><div class="line"><span class="selector-tag">Number</span><span class="selector-class">.isNaN</span>(<span class="selector-tag">yesterdayPlayCount</span>)</div></pre></td></tr></table></figure></p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">wepy 静态组件</div><div class="line"><span class="keyword">repeat</span> <span class="keyword">for</span> 中的组件, 组件的数据 与 父组件 绑定, 不能与 组件自身绑定, 否则 复用 出问题</div></pre></td></tr></table></figure>
<figure class="highlight qml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 去左空格;</span></div><div class="line">  lTrim(s) &#123;</div><div class="line">    <span class="keyword">return</span> s.replace(<span class="regexp">/(^\s*)/g</span>, <span class="string">''</span>)</div><div class="line">  &#125;,</div><div class="line">  <span class="comment">// 去右空格;</span></div><div class="line">  rTrim(s) &#123;</div><div class="line">    <span class="keyword">return</span> s.replace(<span class="regexp">/(\s*$)/g</span>, <span class="string">''</span>)</div><div class="line">  &#125;,</div><div class="line">  <span class="comment">// 去左右空格;</span></div><div class="line">  lrTrim(s) &#123;</div><div class="line">    <span class="keyword">return</span> s.replace(<span class="regexp">/(^\s*)|(\s*$)/g</span>, <span class="string">''</span>)</div><div class="line">  &#125;,</div><div class="line">  allTrim(s) &#123;</div><div class="line">    <span class="built_in">var</span> str = s.replace(<span class="regexp">/(^\s*)|(\s*$)/g</span>, <span class="string">''</span>)</div><div class="line">    <span class="keyword">return</span> str.replace(<span class="regexp">/\s/g</span>, <span class="string">''</span>)</div><div class="line">  &#125;,</div><div class="line">  <span class="comment">// 是否包含 emoji</span></div><div class="line">  isEmojiCharacter(substring) &#123;</div><div class="line">    <span class="keyword">for</span> (<span class="built_in">var</span> i = <span class="number">0</span>; i &lt; substring.length; i++) &#123;</div><div class="line">      <span class="built_in">var</span> hs = substring.charCodeAt(i)</div><div class="line">      <span class="keyword">if</span> (<span class="number">0xd800</span> &lt;= hs &amp;&amp; hs &lt;= <span class="number">0xdbff</span>) &#123;</div><div class="line">        <span class="keyword">if</span> (substring.length &gt; <span class="number">1</span>) &#123;</div><div class="line">          <span class="built_in">var</span> ls = substring.charCodeAt(i + <span class="number">1</span>)</div><div class="line">          <span class="built_in">var</span> uc = ((hs - <span class="number">0xd800</span>) * <span class="number">0x400</span>) + (ls - <span class="number">0xdc00</span>) + <span class="number">0x10000</span></div><div class="line">          <span class="keyword">if</span> (<span class="number">0x1d000</span> &lt;= uc &amp;&amp; uc &lt;= <span class="number">0x1f77f</span>) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="literal">true</span></div><div class="line">          &#125;</div><div class="line">        &#125;</div><div class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (substring.length &gt; <span class="number">1</span>) &#123;</div><div class="line">        <span class="built_in">var</span> ls = substring.charCodeAt(i + <span class="number">1</span>)</div><div class="line">        <span class="keyword">if</span> (ls == <span class="number">0x20e3</span>) &#123;</div><div class="line">          <span class="keyword">return</span> <span class="literal">true</span></div><div class="line">        &#125;</div><div class="line">      &#125; <span class="title">else</span> &#123;</div><div class="line">        <span class="keyword">if</span> (<span class="number">0x2100</span> &lt;= hs &amp;&amp; hs &lt;= <span class="number">0x27ff</span>) &#123;</div><div class="line">          <span class="keyword">return</span> <span class="literal">true</span></div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">0x2B05</span> &lt;= hs &amp;&amp; hs &lt;= <span class="number">0x2b07</span>) &#123;</div><div class="line">          <span class="keyword">return</span> <span class="literal">true</span></div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">0x2934</span> &lt;= hs &amp;&amp; hs &lt;= <span class="number">0x2935</span>) &#123;</div><div class="line">          <span class="keyword">return</span> <span class="literal">true</span></div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">0x3297</span> &lt;= hs &amp;&amp; hs &lt;= <span class="number">0x3299</span>) &#123;</div><div class="line">          <span class="keyword">return</span> <span class="literal">true</span></div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (hs == <span class="number">0xa9</span> || hs == <span class="number">0xae</span> || hs == <span class="number">0x303d</span> || hs == <span class="number">0x3030</span></div><div class="line">                  || hs == <span class="number">0x2b55</span> || hs == <span class="number">0x2b1c</span> || hs == <span class="number">0x2b1b</span></div><div class="line">                  || hs == <span class="number">0x2b50</span>) &#123;</div><div class="line">          <span class="keyword">return</span> <span class="literal">true</span></div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;,</div><div class="line">  <span class="comment">// 过滤 emoji</span></div><div class="line">  filterEmoji(emojiInput) &#123;</div><div class="line">    <span class="built_in">var</span> ranges = [</div><div class="line">        <span class="string">'\ud83c[\udf00-\udfff]'</span>, </div><div class="line">        <span class="string">'\ud83d[\udc00-\ude4f]'</span>, </div><div class="line">        <span class="string">'\ud83d[\ude80-\udeff]'</span></div><div class="line">    ]</div><div class="line">    <span class="built_in">var</span> emojireg = emojiInput</div><div class="line">    emojireg = emojireg.replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>(ranges.join(<span class="string">'|'</span>), <span class="string">'g'</span>), <span class="string">''</span>)</div><div class="line">    <span class="keyword">return</span> emojireg</div><div class="line">  &#125;,</div><div class="line">  <span class="comment">// 截取 字符, 不含 emoji</span></div><div class="line">  substrNoEmoji(str, start, end) &#123; <span class="comment">// str 字符串, start 整型, end 整型</span></div><div class="line">    <span class="built_in">var</span> <span class="built_in">string</span> = str</div><div class="line">    <span class="keyword">if</span> (<span class="built_in">string</span>.length &gt; end &amp;&amp; Util.isEmojiCharacter(<span class="built_in">string</span>)) &#123; <span class="comment">// 处理 emoji</span></div><div class="line">      <span class="built_in">string</span> = Util.filterEmoji(<span class="built_in">string</span>)</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">string</span> = <span class="built_in">string</span>.length &gt; end ? <span class="built_in">string</span>.substr(start, end) : <span class="built_in">string</span></div><div class="line">    <span class="keyword">return</span> <span class="built_in">string</span></div><div class="line">  &#125;,</div><div class="line">  </div><div class="line">  formatSecondsAsTime (secs) &#123;</div><div class="line">    <span class="built_in">var</span> hr = <span class="built_in">Math</span>.floor(secs / <span class="number">3600</span>)</div><div class="line">    <span class="built_in">var</span> min = <span class="built_in">Math</span>.floor((secs - (hr * <span class="number">3600</span>))/<span class="number">60</span>)</div><div class="line">    <span class="built_in">var</span> sec = <span class="built_in">Math</span>.floor(secs - (hr * <span class="number">3600</span>) -  (min * <span class="number">60</span>))</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (hr &lt; <span class="number">10</span>)   &#123; hr    = <span class="string">"0"</span> + hr &#125;</div><div class="line">    <span class="keyword">if</span> (min &lt; <span class="number">10</span>) &#123; min = <span class="string">"0"</span> + min &#125;</div><div class="line">    <span class="keyword">if</span> (sec &lt; <span class="number">10</span>)  &#123; sec  = <span class="string">"0"</span> + sec &#125;</div><div class="line">    <span class="keyword">if</span> (hr == <span class="number">0</span>)  &#123; hr   = <span class="string">""</span> &#125;</div><div class="line">    <span class="keyword">if</span> (hr.length &gt; <span class="number">0</span>) &#123;</div><div class="line">      <span class="keyword">return</span> hr + <span class="string">':'</span> + min + <span class="string">':'</span> + sec</div><div class="line">    &#125;<span class="title">else</span> &#123;</div><div class="line">      <span class="keyword">return</span> min + <span class="string">':'</span> + sec</div><div class="line">    &#125;</div><div class="line">  &#125;,</div><div class="line"></div><div class="line">  formatTime(time, fmt) &#123;</div><div class="line">    <span class="built_in">var</span> <span class="built_in">date</span> = <span class="keyword">new</span> <span class="built_in">Date</span>(time)</div><div class="line">    <span class="built_in">var</span> curTime = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime() / <span class="number">1000</span></div><div class="line">    <span class="built_in">var</span> interval = curTime - time / <span class="number">1000</span></div><div class="line">    <span class="keyword">if</span> (interval &lt; <span class="number">60</span>) &#123;</div><div class="line">      <span class="keyword">return</span> <span class="string">'刚刚'</span></div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (interval &lt; <span class="number">3600</span>) &#123;</div><div class="line">      <span class="keyword">return</span> <span class="built_in">Math</span>.ceil(interval / <span class="number">60</span>) + <span class="string">'分钟前'</span></div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (interval &lt; <span class="number">3600</span> * <span class="number">24</span>) &#123;</div><div class="line">      <span class="keyword">return</span> <span class="built_in">Math</span>.ceil(interval / <span class="number">60</span> / <span class="number">60</span>) + <span class="string">'小时前'</span></div><div class="line">    &#125; <span class="title">else</span> &#123;</div><div class="line">      <span class="built_in">var</span> o = &#123;</div><div class="line">        <span class="string">'M+'</span>: <span class="built_in">date</span>.getMonth() + <span class="number">1</span>,</div><div class="line">        <span class="string">'d+'</span>: <span class="built_in">date</span>.getDate(),</div><div class="line">        <span class="string">'h+'</span>: <span class="built_in">date</span>.getHours(),</div><div class="line">        <span class="string">'m+'</span>: <span class="built_in">date</span>.getMinutes(),</div><div class="line">        <span class="string">'s+'</span>: <span class="built_in">date</span>.getSeconds(),</div><div class="line">        <span class="string">'q+'</span>: <span class="built_in">Math</span>.floor((<span class="built_in">date</span>.getMonth() + <span class="number">3</span>) / <span class="number">3</span>),</div><div class="line">        <span class="string">'S'</span>: <span class="built_in">date</span>.getMilliseconds()</div><div class="line">      &#125;</div><div class="line">      <span class="keyword">if</span> (<span class="regexp">/(y+)/</span>.test(fmt)) &#123;</div><div class="line">        <span class="keyword">if</span> (<span class="built_in">date</span>.getFullYear() === <span class="keyword">new</span> <span class="built_in">Date</span>().getFullYear()) &#123;</div><div class="line">          fmt = fmt.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span> + <span class="string">'-'</span>, <span class="string">''</span>)</div><div class="line">        &#125; <span class="title">else</span> &#123;</div><div class="line">          fmt = fmt.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>, (<span class="built_in">date</span>.getFullYear() + <span class="string">''</span>).substr(<span class="number">4</span> - <span class="built_in">RegExp</span>.$<span class="number">1.</span>length))</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">      <span class="keyword">for</span> (<span class="built_in">var</span> k <span class="keyword">in</span> o) &#123;</div><div class="line">        <span class="keyword">if</span> (<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'('</span> + k + <span class="string">')'</span>).test(fmt)) fmt = fmt.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>, (<span class="built_in">RegExp</span>.$<span class="number">1.</span>length === <span class="number">1</span>) ? (o[k]) : ((<span class="string">'00'</span> + o[k]).substr((<span class="string">''</span> + o[k]).length)))</div><div class="line">      &#125;</div><div class="line">      <span class="keyword">return</span> fmt</div><div class="line">    &#125;</div><div class="line">  &#125;,</div><div class="line"></div><div class="line">  <span class="comment">// 格式时间</span></div><div class="line">  formatCreateDate(timeStamp = <span class="number">0</span>) &#123;</div><div class="line">    <span class="keyword">let</span> fmt</div><div class="line">    <span class="keyword">let</span> <span class="built_in">date</span> = <span class="keyword">new</span> <span class="built_in">Date</span>(timeStamp)</div><div class="line">    <span class="keyword">let</span> nowadays = <span class="keyword">new</span> <span class="built_in">Date</span>()</div><div class="line">    <span class="keyword">let</span> diffSecond = <span class="built_in">Math</span>.ceil((nowadays.getTime() - <span class="built_in">date</span>.getTime()) / <span class="number">1000</span>)</div><div class="line">    <span class="keyword">const</span> week = [<span class="string">'日'</span>, <span class="string">'一'</span>, <span class="string">'二'</span>, <span class="string">'三'</span>, <span class="string">'四'</span>, <span class="string">'五'</span>, <span class="string">'六'</span>]</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (nowadays.getFullYear() &gt; <span class="built_in">date</span>.getFullYear()) &#123;</div><div class="line">      <span class="comment">// 一年前</span></div><div class="line">      fmt = <span class="string">'yyyy-MM-dd hh:mm'</span></div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (diffSecond &gt; <span class="number">7</span> * <span class="number">24</span> * <span class="number">3600</span>) &#123;</div><div class="line">      <span class="comment">// 一周前</span></div><div class="line">      fmt = <span class="string">'MM-dd hh:mm'</span></div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (diffSecond &lt; <span class="number">1</span> * <span class="number">24</span> * <span class="number">3600</span>) &#123;</div><div class="line">      <span class="comment">// 今天凌晨</span></div><div class="line">      <span class="built_in">var</span> morningTimeStamp = <span class="keyword">new</span> <span class="built_in">Date</span>().setHours(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)</div><div class="line">      <span class="keyword">let</span> diffSecondMorning = <span class="built_in">Math</span>.ceil((morningTimeStamp - <span class="built_in">date</span>.getTime()) / <span class="number">1000</span>)</div><div class="line">      <span class="keyword">if</span> (diffSecondMorning &gt; <span class="number">0</span>) &#123;</div><div class="line">        <span class="comment">// 昨天</span></div><div class="line">        fmt = <span class="string">'昨天'</span> + <span class="string">' '</span> + <span class="string">'hh:mm'</span></div><div class="line">      &#125; <span class="title">else</span> &#123;</div><div class="line">        <span class="comment">// 今天</span></div><div class="line">        fmt = <span class="string">'hh:mm'</span></div><div class="line">      &#125;</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (diffSecond &lt; <span class="number">2</span> * <span class="number">24</span> * <span class="number">3600</span>) &#123;</div><div class="line">      <span class="comment">// 昨天</span></div><div class="line">      fmt = <span class="string">'昨天'</span> + <span class="string">' '</span> + <span class="string">'hh:mm'</span></div><div class="line">    &#125; <span class="title">else</span> &#123;</div><div class="line">      fmt = <span class="string">'星期'</span> + week[<span class="built_in">date</span>.getDay()] + <span class="string">' '</span> + <span class="string">'hh:mm'</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">let</span> o = &#123;</div><div class="line">      <span class="string">'M+'</span>: <span class="built_in">date</span>.getMonth() + <span class="number">1</span>, <span class="comment">// 月份</span></div><div class="line">      <span class="string">'d+'</span>: <span class="built_in">date</span>.getDate(), <span class="comment">// 日</span></div><div class="line">      <span class="string">'h+'</span>: <span class="built_in">date</span>.getHours(), <span class="comment">// 小时</span></div><div class="line">      <span class="string">'m+'</span>: <span class="built_in">date</span>.getMinutes(), <span class="comment">// 分</span></div><div class="line">      <span class="string">'s+'</span>: <span class="built_in">date</span>.getSeconds(), <span class="comment">// 秒</span></div><div class="line">      <span class="string">'q+'</span>: <span class="built_in">Math</span>.floor((<span class="built_in">date</span>.getMonth() + <span class="number">3</span>) / <span class="number">3</span>), <span class="comment">//  季度</span></div><div class="line">      <span class="string">'S'</span>: <span class="built_in">date</span>.getMilliseconds() <span class="comment">// 毫秒</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (<span class="regexp">/(y+)/</span>.test(fmt)) &#123;</div><div class="line">      <span class="keyword">if</span> (<span class="built_in">date</span>.getFullYear() === <span class="keyword">new</span> <span class="built_in">Date</span>().getFullYear()) &#123;</div><div class="line">        fmt = fmt.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span> + <span class="string">'-'</span>, <span class="string">''</span>)</div><div class="line">      &#125; <span class="title">else</span> &#123;</div><div class="line">        fmt = fmt.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>, (<span class="built_in">date</span>.getFullYear() + <span class="string">''</span>).substr(<span class="number">4</span> - <span class="built_in">RegExp</span>.$<span class="number">1.</span>length))</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span> (<span class="built_in">var</span> k <span class="keyword">in</span> o) &#123;</div><div class="line">      <span class="keyword">if</span> (<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'('</span> + k + <span class="string">')'</span>).test(fmt)) fmt = fmt.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>, (<span class="built_in">RegExp</span>.$<span class="number">1.</span>length === <span class="number">1</span>) ? (o[k]) : ((<span class="string">'00'</span> + o[k]).substr((<span class="string">''</span> + o[k]).length)))</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> fmt</div><div class="line">  &#125;,</div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">wepy</span> 静态页面?</div><div class="line"><span class="selector-tag">fix</span>: 视频详情页进入两层后，删除视频返回再删除视频，无法删除了 <span class="selector-tag">---</span> <span class="selector-tag">wepy</span><span class="selector-class">.navigateTo</span> 改成 <span class="selector-tag">wepy</span><span class="selector-class">.redirectTo</span> (关闭当前页面，跳转到应用内的某个页面，但是不允许跳转到 <span class="selector-tag">tabbar</span> 页面。)</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> fromPage = <span class="string">'user-videos-Share'</span></div><div class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.shareType == <span class="string">'share'</span> || <span class="keyword">this</span>.fromPage == fromPage) &#123;</div><div class="line">          wepy.navigateTo(&#123;</div><div class="line">            url: <span class="string">`user-videos?id=<span class="subst">$&#123;e.currentTarget.id&#125;</span>&amp;from=1&amp;fromPage=<span class="subst">$&#123;fromPage&#125;</span>`</span></div><div class="line">          &#125;)</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">          wepy.redirectTo(&#123;</div><div class="line">            url: <span class="string">`user-videos?id=<span class="subst">$&#123;e.currentTarget.id&#125;</span>&amp;from=1`</span></div><div class="line">          &#125;)</div><div class="line">        &#125;</div></pre></td></tr></table></figure>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="title">onLoad</span><span class="params">(options)</span></span> &#123;</div><div class="line">	this<span class="selector-class">.from</span> = options<span class="selector-class">.from</span> <span class="comment">// 首页进来</span></div><div class="line">    this<span class="selector-class">.fromPage</span> = options<span class="selector-class">.fromPage</span> <span class="comment">// 从 哪个页面 进入 当前页面</span></div><div class="line">    </div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">that<span class="selector-class">.scrollToView</span> = <span class="string">'video-colletion-cover-item-'</span> + element<span class="selector-class">.id</span>  <span class="comment">// 值应为某子元素id（id不能以数字开头）</span></div><div class="line"></div><div class="line"></div><div class="line">&lt;scroll-view scroll-x class=<span class="string">"video-colletion-scrollView"</span> id=<span class="string">"video-colletion-scrollView"</span> scroll-into-view=<span class="string">"&#123;&#123;scrollToView&#125;&#125;"</span> bindscroll=<span class="string">"scrollViewScrollAction"</span> bindtap=<span class="string">"scrollViewClickedAction"</span>&gt;</div><div class="line">      &lt;repeat <span class="keyword">for</span>=<span class="string">"&#123;&#123;videoColletionArray&#125;&#125;"</span> item=<span class="string">"videoColletion"</span> index=<span class="string">"index"</span> key=<span class="string">"key"</span>&gt;</div><div class="line">        &lt;video-colletion-cover-item class=<span class="string">"video-colletion-cover-item"</span> :videoColletion.sync=<span class="string">"videoColletion"</span> :pointImagePath.sync=<span class="string">"pointImagePath"</span> @tapMoreItem-emit.user=<span class="string">"tapMoreCallback"</span> @didSelectItem-emit.user=<span class="string">"didSelectItem"</span>&gt;&lt;/video-colletion-cover-item&gt;</div><div class="line">      &lt;/repeat&gt;</div><div class="line">  &lt;/scroll-view&gt;</div></pre></td></tr></table></figure>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">// 小程序 之 键盘</div><div class="line"></div><div class="line">部分机型软键盘遮挡input输入问题</div><div class="line">https:<span class="regexp">//developers</span>.weixin.qq.com/community/develop/doc/<span class="number">000</span>eaefb9288507177378ab365b80<span class="number">0</span>?highLine=%25E9%2594%25AE%25E7%259B%2598%25E9%25AB%2598%25E5%25BA%25A6</div><div class="line"></div><div class="line">机型  model </div><div class="line">键盘阈值  keyboardHeightThreshold </div><div class="line">键盘小于阈值的误差 beforeThresholdDelta</div><div class="line">键盘大于阈值的误差 afterThresholdDelta</div><div class="line">底部tab条的高度  tabbarHeight</div><div class="line"></div><div class="line">比如 小米Mix2</div><div class="line">model 为 MIX <span class="number">2</span></div><div class="line">keyboardHeightThreshold 为 <span class="number">244</span></div><div class="line">beforeThresholdDelta  为  <span class="number">58</span></div><div class="line">afterThresholdDelta 为 <span class="number">48</span></div><div class="line">tabbarHeight 为 <span class="number">49</span></div></pre></td></tr></table></figure>
<figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div><div class="line">413</div><div class="line">414</div><div class="line">415</div><div class="line">416</div><div class="line">417</div><div class="line">418</div><div class="line">419</div><div class="line">420</div><div class="line">421</div><div class="line">422</div><div class="line">423</div><div class="line">424</div><div class="line">425</div><div class="line">426</div><div class="line">427</div><div class="line">428</div><div class="line">429</div><div class="line">430</div><div class="line">431</div><div class="line">432</div><div class="line">433</div><div class="line">434</div><div class="line">435</div><div class="line">436</div><div class="line">437</div><div class="line">438</div><div class="line">439</div><div class="line">440</div><div class="line">441</div><div class="line">442</div><div class="line">443</div><div class="line">444</div><div class="line">445</div><div class="line">446</div><div class="line">447</div><div class="line">448</div><div class="line">449</div><div class="line">450</div><div class="line">451</div><div class="line">452</div><div class="line">453</div><div class="line">454</div><div class="line">455</div><div class="line">456</div><div class="line">457</div><div class="line">458</div><div class="line">459</div><div class="line">460</div><div class="line">461</div><div class="line">462</div><div class="line">463</div><div class="line">464</div><div class="line">465</div><div class="line">466</div><div class="line">467</div><div class="line">468</div><div class="line">469</div><div class="line">470</div><div class="line">471</div><div class="line">472</div><div class="line">473</div><div class="line">474</div><div class="line">475</div><div class="line">476</div><div class="line">477</div><div class="line">478</div><div class="line">479</div><div class="line">480</div><div class="line">481</div><div class="line">482</div><div class="line">483</div><div class="line">484</div><div class="line">485</div><div class="line">486</div><div class="line">487</div><div class="line">488</div><div class="line">489</div><div class="line">490</div><div class="line">491</div><div class="line">492</div><div class="line">493</div><div class="line">494</div><div class="line">495</div><div class="line">496</div><div class="line">497</div><div class="line">498</div><div class="line">499</div><div class="line">500</div><div class="line">501</div><div class="line">502</div><div class="line">503</div><div class="line">504</div><div class="line">505</div><div class="line">506</div><div class="line">507</div><div class="line">508</div><div class="line">509</div><div class="line">510</div><div class="line">511</div><div class="line">512</div><div class="line">513</div><div class="line">514</div><div class="line">515</div><div class="line">516</div><div class="line">517</div><div class="line">518</div><div class="line">519</div><div class="line">520</div><div class="line">521</div><div class="line">522</div><div class="line">523</div><div class="line">524</div><div class="line">525</div><div class="line">526</div><div class="line">527</div><div class="line">528</div><div class="line">529</div><div class="line">530</div><div class="line">531</div><div class="line">532</div><div class="line">533</div><div class="line">534</div><div class="line">535</div><div class="line">536</div><div class="line">537</div><div class="line">538</div><div class="line">539</div><div class="line">540</div><div class="line">541</div><div class="line">542</div><div class="line">543</div><div class="line">544</div><div class="line">545</div><div class="line">546</div><div class="line">547</div><div class="line">548</div><div class="line">549</div><div class="line">550</div><div class="line">551</div><div class="line">552</div><div class="line">553</div><div class="line">554</div><div class="line">555</div><div class="line">556</div><div class="line">557</div><div class="line">558</div><div class="line">559</div><div class="line">560</div><div class="line">561</div><div class="line">562</div><div class="line">563</div><div class="line">564</div><div class="line">565</div><div class="line">566</div><div class="line">567</div><div class="line">568</div><div class="line">569</div><div class="line">570</div><div class="line">571</div><div class="line">572</div><div class="line">573</div><div class="line">574</div><div class="line">575</div><div class="line">576</div><div class="line">577</div><div class="line">578</div><div class="line">579</div><div class="line">580</div><div class="line">581</div><div class="line">582</div><div class="line">583</div><div class="line">584</div><div class="line">585</div><div class="line">586</div><div class="line">587</div><div class="line">588</div><div class="line">589</div><div class="line">590</div><div class="line">591</div><div class="line">592</div><div class="line">593</div><div class="line">594</div><div class="line">595</div><div class="line">596</div><div class="line">597</div><div class="line">598</div><div class="line">599</div><div class="line">600</div><div class="line">601</div><div class="line">602</div><div class="line">603</div><div class="line">604</div><div class="line">605</div><div class="line">606</div><div class="line">607</div><div class="line">608</div><div class="line">609</div><div class="line">610</div><div class="line">611</div><div class="line">612</div><div class="line">613</div><div class="line">614</div><div class="line">615</div><div class="line">616</div><div class="line">617</div><div class="line">618</div><div class="line">619</div><div class="line">620</div><div class="line">621</div><div class="line">622</div><div class="line">623</div><div class="line">624</div><div class="line">625</div><div class="line">626</div><div class="line">627</div><div class="line">628</div><div class="line">629</div><div class="line">630</div><div class="line">631</div><div class="line">632</div><div class="line">633</div><div class="line">634</div><div class="line">635</div><div class="line">636</div><div class="line">637</div><div class="line">638</div><div class="line">639</div><div class="line">640</div><div class="line">641</div><div class="line">642</div><div class="line">643</div><div class="line">644</div><div class="line">645</div><div class="line">646</div><div class="line">647</div><div class="line">648</div><div class="line">649</div><div class="line">650</div><div class="line">651</div><div class="line">652</div><div class="line">653</div><div class="line">654</div><div class="line">655</div><div class="line">656</div><div class="line">657</div><div class="line">658</div><div class="line">659</div><div class="line">660</div><div class="line">661</div><div class="line">662</div><div class="line">663</div><div class="line">664</div><div class="line">665</div><div class="line">666</div><div class="line">667</div><div class="line">668</div><div class="line">669</div><div class="line">670</div><div class="line">671</div><div class="line">672</div><div class="line">673</div><div class="line">674</div><div class="line">675</div><div class="line">676</div><div class="line">677</div><div class="line">678</div><div class="line">679</div><div class="line">680</div><div class="line">681</div><div class="line">682</div><div class="line">683</div><div class="line">684</div><div class="line">685</div><div class="line">686</div><div class="line">687</div><div class="line">688</div><div class="line">689</div><div class="line">690</div><div class="line">691</div><div class="line">692</div><div class="line">693</div><div class="line">694</div><div class="line">695</div><div class="line">696</div><div class="line">697</div><div class="line">698</div><div class="line">699</div><div class="line">700</div><div class="line">701</div><div class="line">702</div><div class="line">703</div><div class="line">704</div><div class="line">705</div><div class="line">706</div><div class="line">707</div><div class="line">708</div><div class="line">709</div><div class="line">710</div><div class="line">711</div><div class="line">712</div><div class="line">713</div><div class="line">714</div><div class="line">715</div><div class="line">716</div><div class="line">717</div><div class="line">718</div><div class="line">719</div><div class="line">720</div><div class="line">721</div><div class="line">722</div><div class="line">723</div><div class="line">724</div><div class="line">725</div><div class="line">726</div><div class="line">727</div><div class="line">728</div><div class="line">729</div><div class="line">730</div><div class="line">731</div><div class="line">732</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 播放进度</span></div><div class="line"><span class="keyword">import</span> &#123;setVideoProgress, getVideoProgress, removeVideoProgress&#125; from <span class="string">'@/store-config'</span></div><div class="line"></div><div class="line"></div><div class="line">continueVideo(item, duration) &#123;</div><div class="line">    console.log(<span class="string">'continueVideo'</span> + item + duration)</div><div class="line">    <span class="built_in">if</span> (item !== null) &#123;</div><div class="line">      var videoID = <span class="string">''</span> + item.id</div><div class="line">      <span class="keyword">this</span>.videoContext = wepy.createVideoContext(videoID, <span class="keyword">this</span>)</div><div class="line">      <span class="keyword">this</span>.videoContext.play(videoID)</div><div class="line">      <span class="keyword">this</span>.videoContext.<span class="built_in">seek</span>(duration)</div><div class="line">      console.log(`<span class="built_in">continue</span> play + $&#123;videoID&#125;`)</div><div class="line">      wepy.$instance.playTopic(videoID)</div><div class="line">      item.play = true</div><div class="line">      <span class="keyword">this</span>.$apply()</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  </div><div class="line"></div><div class="line">stopVideo(item) &#123;</div><div class="line">    console.log(<span class="string">'stopVideo'</span> + item);</div><div class="line">    <span class="built_in">if</span> (item !== null) &#123;</div><div class="line">      var videoID = <span class="string">''</span> + item.id;</div><div class="line">      <span class="keyword">this</span>.videoContext = wepy.createVideoContext(videoID);</div><div class="line">      <span class="keyword">this</span>.videoContext.pause();</div><div class="line">      <span class="keyword">this</span>.videoContext.<span class="built_in">seek</span>(<span class="number">0</span>);</div><div class="line">      <span class="keyword">this</span>.videoContext = null;</div><div class="line">      item.play = false;</div><div class="line">      <span class="keyword">this</span>.$apply();</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line"></div><div class="line">videoWaiting(e) &#123;</div><div class="line">      console.log(<span class="string">'videoWaiting'</span>, e.detail)</div><div class="line">    &#125;,</div><div class="line">    videoError(e) &#123;</div><div class="line">      console.log(<span class="string">'videoError'</span>, e.detail)</div><div class="line">      wepy.$instance.log(<span class="string">'VideoPlayError'</span>, JSON.stringify(e.detail))</div><div class="line">    &#125;,</div><div class="line">    bindplay(e) &#123;</div><div class="line">      console.log(`bindplay + $&#123;e.currentTarget.id&#125;`);</div><div class="line">      <span class="keyword">this</span>.$emit(<span class="string">'play-emit'</span>, e.currentTarget.id);</div><div class="line"></div><div class="line">      <span class="comment">// 显示播放进度 ?</span></div><div class="line">      var videoId = e.currentTarget.id</div><div class="line">      var totalTime = e.currentTarget.dataset.totaltime</div><div class="line">      var that = <span class="keyword">this</span></div><div class="line">      <span class="comment">// 播放进度</span></div><div class="line">      var value = getVideoProgress(videoId)</div><div class="line">      <span class="built_in">if</span> (value) &#123;</div><div class="line">        var currentTime = value[<span class="string">'currentTime'</span>]</div><div class="line">        <span class="built_in">if</span> (currentTime) &#123;</div><div class="line">          that.playDurationContinue = currentTime  <span class="comment">// 继续播放时长</span></div><div class="line">          that.playDurationStrContinue = Util.formatSecondsAsTime(currentTime)  <span class="comment">// 继续播放时长</span></div><div class="line">          <span class="built_in">if</span> (currentTime &gt; <span class="number">0</span> &amp;&amp; currentTime &lt; totalTime) &#123;</div><div class="line">            that.showVideoProgressContinue = true</div><div class="line">          &#125; <span class="built_in">else</span> &#123;</div><div class="line">            that.showVideoProgressContinue = false</div><div class="line">          &#125;</div><div class="line">        &#125; <span class="built_in">else</span> &#123;</div><div class="line">          that.playDurationContinue = null  <span class="comment">// 继续播放时长</span></div><div class="line">          that.playDurationStrContinue = <span class="string">''</span></div><div class="line">          that.showVideoProgressContinue = false</div><div class="line">        &#125;</div><div class="line">      &#125; <span class="built_in">else</span> &#123;</div><div class="line">        that.playDurationContinue = null  <span class="comment">// 继续播放时长</span></div><div class="line">        that.playDurationStrContinue = <span class="string">''</span></div><div class="line">        that.showVideoProgressContinue = false</div><div class="line">      &#125;</div><div class="line">      <span class="comment">// 显示播放进度 ?</span></div><div class="line"></div><div class="line">      <span class="keyword">this</span>.showVideoExitImage = false</div><div class="line">      <span class="keyword">this</span>.item.showReplay = false</div><div class="line">      <span class="keyword">this</span>.$apply()</div><div class="line">      <span class="comment">// 5秒后 隐藏 继续播放条</span></div><div class="line">      <span class="built_in">if</span> (<span class="keyword">this</span>.showVideoProgressContinue === true) &#123;</div><div class="line">        <span class="built_in">setTimeout</span>(() =&gt; &#123;</div><div class="line">          <span class="keyword">this</span>.showVideoProgressContinue = false</div><div class="line">          <span class="keyword">this</span>.$apply()</div><div class="line">        &#125;, <span class="number">5000</span>)</div><div class="line">      &#125;</div><div class="line">      <span class="comment">// 5秒后 隐藏 继续播放条</span></div><div class="line">    &#125;,</div><div class="line">    bindtimeupdate(e) &#123;</div><div class="line">      <span class="keyword">this</span>.playCurrentTime = <span class="built_in">parseInt</span>(e.detail.currentTime)</div><div class="line">      <span class="keyword">this</span>.playDuration = e.detail.duration</div><div class="line">    &#125;,</div><div class="line">    bindfullscreenchange(e) &#123;</div><div class="line">      <span class="keyword">this</span>.$emit(<span class="string">'bindfullscreenchange-emit'</span>, e);</div><div class="line">      var that = <span class="keyword">this</span>;</div><div class="line">      <span class="built_in">if</span> (e.detail.fullScreen === true) &#123;</div><div class="line">        <span class="built_in">if</span> (<span class="keyword">this</span>.playDuration &lt;= <span class="number">0</span>) &#123;</div><div class="line">          that.showVideoExitImage = true;</div><div class="line">          <span class="keyword">this</span>.$apply();</div><div class="line">        &#125;</div><div class="line">      &#125; <span class="built_in">else</span> &#123;</div><div class="line">        <span class="keyword">this</span>.showVideoExitImage = false;</div><div class="line">        <span class="keyword">this</span>.$apply();</div><div class="line">        <span class="built_in">if</span> (</div><div class="line">          Util.isSelf(<span class="keyword">this</span>.item.user.uid) === false &amp;&amp;</div><div class="line">          <span class="keyword">this</span>.item.user.followed === false &amp;&amp;</div><div class="line">          <span class="keyword">this</span>.isShareType</div><div class="line">        ) &#123;</div><div class="line">          <span class="comment">// 退出全屏 弹窗提示关注</span></div><div class="line">          <span class="keyword">this</span>.$emit(<span class="string">'exitFullScreenFollowUser-emit'</span>, <span class="keyword">this</span>.item.user.uid, <span class="keyword">this</span>.item.id)</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;,</div><div class="line">    bindpause(e) &#123;</div><div class="line">      console.log(`bindpause + $&#123;e.currentTarget.id&#125;`)</div><div class="line">      <span class="keyword">this</span>.$emit(<span class="string">'bindpause-emit'</span>, e)</div><div class="line"></div><div class="line">      <span class="comment">// 播放进度</span></div><div class="line">      var currentTime = <span class="keyword">this</span>.playCurrentTime</div><div class="line">      var videoId = e.currentTarget.id</div><div class="line">      var totalTime = e.currentTarget.dataset.totaltime</div><div class="line">      <span class="built_in">if</span> (currentTime &lt; totalTime - <span class="number">2</span>) &#123; <span class="comment">// 播放完毕, 不记录 播放记录, 误差 2秒</span></div><div class="line">        setVideoProgress(videoId, currentTime)</div><div class="line">      &#125;</div><div class="line">      <span class="comment">// 播放进度</span></div><div class="line">    &#125;,</div><div class="line">    bindended(e) &#123;</div><div class="line">      console.log(`bindended + $&#123;e.currentTarget.id&#125;`);</div><div class="line">      <span class="keyword">this</span>.$emit(<span class="string">'bindended-emit'</span>, e);</div><div class="line">      <span class="keyword">this</span>.item.play = false;</div><div class="line">      <span class="keyword">this</span>.item.showReplay = true</div><div class="line">      <span class="comment">// 播放进度</span></div><div class="line">      <span class="keyword">this</span>.showVideoProgressContinue = false</div><div class="line">      <span class="keyword">this</span>.playDurationContinue = null</div><div class="line">      <span class="keyword">this</span>.playDurationStrContinue = <span class="string">''</span></div><div class="line">      var videoId = e.currentTarget.id</div><div class="line">      removeVideoProgress(videoId)</div><div class="line">      <span class="comment">// 播放进度</span></div><div class="line">      <span class="keyword">this</span>.$apply();</div><div class="line">    &#125;,</div><div class="line">    </div><div class="line"></div><div class="line">tapAction (e) &#123;</div><div class="line">        <span class="keyword">this</span>.$emit(<span class="string">'tap-emit'</span>, e.currentTarget.id)</div><div class="line">        <span class="comment">// this.item.play = !this.item.play;</span></div><div class="line">        console.log(`tapAction: $&#123;e.currentTarget.id&#125; itemID + $&#123;<span class="keyword">this</span>.item.id&#125;`)</div><div class="line">        let self = <span class="keyword">this</span></div><div class="line">        var videoID = <span class="string">''</span> + e.currentTarget.id</div><div class="line">        console.log(`videoID in postItem + $&#123;videoID&#125;`)</div><div class="line">        <span class="keyword">this</span>.videoContext = wepy.createVideoContext(videoID,<span class="keyword">this</span>)</div><div class="line">        <span class="built_in">setTimeout</span>(() =&gt; &#123;</div><div class="line">          console.log(self.item.videoPath)</div><div class="line">          self.videoContext.play(e.currentTarget.id)</div><div class="line">          self.videoContext.<span class="built_in">seek</span>(<span class="number">0</span>)<span class="comment">//解决Android播放器再次播放同一个视频不播放的问题</span></div><div class="line">          console.log(`start play + $&#123;videoID&#125;`)</div><div class="line">          wepy.$instance.playTopic(e.currentTarget.id)</div><div class="line">        &#125;, <span class="number">500</span>)</div><div class="line">      &#125;,</div><div class="line">      </div><div class="line"></div><div class="line">exitVideoFullScreenAction(e)&#123;</div><div class="line">        var videoID = <span class="string">''</span> + e.currentTarget.id</div><div class="line">        console.log(`videoID in postItem + $&#123;videoID&#125;`)</div><div class="line">        <span class="keyword">this</span>.videoContext = wepy.createVideoContext(videoID,<span class="keyword">this</span>)</div><div class="line">        <span class="keyword">this</span>.videoContext.exitFullScreen(&#123;</div><div class="line">        &#125;)</div><div class="line">      &#125;,</div><div class="line">      </div><div class="line"></div><div class="line">bindImageError(e)&#123;</div><div class="line">        console.log(JSON.stringify(e.detail))</div><div class="line">        <span class="built_in">if</span> (<span class="keyword">this</span>.item) &#123;</div><div class="line">          <span class="built_in">if</span> (<span class="keyword">this</span>.item.imageRetryCount &amp;&amp; <span class="keyword">this</span>.item.imageRetryCount &gt; <span class="number">3</span>) &#123;<span class="comment">// 重试请求3次</span></div><div class="line">            <span class="built_in">return</span></div><div class="line">          &#125;</div><div class="line">          <span class="built_in">if</span> (<span class="keyword">this</span>.item.imageRetryCount) &#123;</div><div class="line">            <span class="keyword">this</span>.item.imageRetryCount = <span class="keyword">this</span>.item.imageRetryCount + <span class="number">1</span></div><div class="line">          &#125; <span class="built_in">else</span> &#123;</div><div class="line"></div><div class="line">            <span class="keyword">this</span>.item.imageRetryCount = <span class="number">1</span></div><div class="line">          &#125;</div><div class="line">            var t = <span class="keyword">new</span> Date().getTime()</div><div class="line">            <span class="keyword">this</span>.item.coverImg.coverImgPath = <span class="keyword">this</span>.item.coverImg.coverImgPath + <span class="string">'&amp;t='</span> + t</div><div class="line">            <span class="keyword">this</span>.$apply()</div><div class="line">        &#125;</div><div class="line">      &#125;,</div><div class="line"></div><div class="line"></div><div class="line">videoProgressCloseAction(e) &#123;</div><div class="line">      console.log(<span class="string">'videoProgressCloseAction'</span>, e)</div><div class="line">      <span class="comment">// 移除 播放进度</span></div><div class="line">      <span class="keyword">this</span>.showVideoProgressContinue = false</div><div class="line">      <span class="keyword">this</span>.playDurationContinue = null</div><div class="line">      <span class="keyword">this</span>.playDurationStrContinue = <span class="string">''</span></div><div class="line">      var videoId = e.currentTarget.id</div><div class="line">      removeVideoProgress(videoId)</div><div class="line">      <span class="comment">// 移除 播放进度</span></div><div class="line">      <span class="keyword">this</span>.$apply()</div><div class="line">    &#125;,</div><div class="line">    videoProgressContinueAction(e) &#123;</div><div class="line">      console.log(<span class="string">'videoProgressContinueAction'</span>, e)</div><div class="line">      <span class="built_in">if</span> (<span class="keyword">this</span>.playDurationContinue) &#123;</div><div class="line">        <span class="keyword">this</span>.playDuration = <span class="keyword">this</span>.playDurationContinue</div><div class="line">        <span class="keyword">this</span>.continueVideo(<span class="keyword">this</span>.item, <span class="keyword">this</span>.playDurationContinue)</div><div class="line">      &#125;</div><div class="line">      <span class="comment">// 移除 播放进度</span></div><div class="line">      <span class="keyword">this</span>.showVideoProgressContinue = false</div><div class="line">      <span class="keyword">this</span>.playDurationContinue = null</div><div class="line">      <span class="keyword">this</span>.playDurationStrContinue = <span class="string">''</span></div><div class="line">      var videoId = e.currentTarget.id</div><div class="line">      removeVideoProgress(videoId)</div><div class="line">      <span class="comment">// 移除 播放进度</span></div><div class="line">      <span class="keyword">this</span>.$apply()</div><div class="line">    &#125;,</div><div class="line">    </div><div class="line"> </div><div class="line"></div><div class="line">&lt;!-- 分享至 好友 --&gt;</div><div class="line">&lt;form bindsubmit=<span class="string">"formSubmit"</span> report-submit=<span class="string">"true"</span>&gt;</div><div class="line">  &lt;button id=<span class="string">"&#123;&#123;item.id&#125;&#125;"</span> <span class="keyword">class</span>=<span class="string">"transparentButton"</span> <span class="built_in">open</span>-type=<span class="string">"share"</span> @tap=<span class="string">"shareReportAction"</span> formType=<span class="string">"&#123;&#123;shareShowFormSubmit ? 'submit' : ''&#125;&#125;"</span>&gt;&lt;/button&gt;</div><div class="line">&lt;/form&gt;</div><div class="line">&lt;!-- 分享至 好友 --&gt;</div><div class="line">            </div><div class="line"></div><div class="line"></div><div class="line">&lt;!-- 朋友圈分享图 --&gt;</div><div class="line">  &lt;view <span class="keyword">class</span>=<span class="string">"unLogin-shareWeChatCircle"</span> wx:<span class="built_in">if</span>=<span class="string">"&#123;&#123;!isLogin&#125;&#125;"</span> @tap.<span class="built_in">stop</span>=<span class="string">'unLoginShareWeChatCircleAction'</span>&gt;</div><div class="line">    &lt;form bindsubmit=<span class="string">"formSubmit"</span> report-submit=<span class="string">"true"</span>&gt;</div><div class="line">      &lt;button id=<span class="string">"&#123;&#123;item.id&#125;&#125;"</span> <span class="keyword">class</span>=<span class="string">"button"</span> <span class="built_in">open</span>-type=<span class="string">"getUserInfo"</span> bindgetuserinfo=<span class="string">"bindgetuserinfo"</span> formType=<span class="string">"&#123;&#123;shareShowFormSubmit ? 'submit' : ''&#125;&#125;"</span> @tap=<span class="string">"formSubmitBtnAction"</span>&gt;&lt;/button&gt;</div><div class="line">    &lt;/form&gt;    </div><div class="line">  &lt;/view&gt;</div><div class="line">&lt;!-- 朋友圈分享图 --&gt;</div><div class="line">          </div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">&lt;view <span class="keyword">class</span>=<span class="string">"contentcontainner"</span> style=<span class="string">"height:&#123;&#123;item.height&#125;&#125;px;width:&#123;&#123;item.width&#125;&#125;px;"</span>&gt;</div><div class="line">          &lt;view <span class="keyword">class</span>=<span class="string">"image_loading_bg"</span>&gt;</div><div class="line">            &lt;<span class="built_in">text</span> <span class="keyword">class</span>=<span class="string">"image_loading_tip"</span>&gt;封面加载中&lt;/<span class="built_in">text</span>&gt;</div><div class="line">          &lt;/view&gt;</div><div class="line">          &lt;<span class="built_in">image</span> lazy-load=<span class="string">"true"</span> <span class="keyword">class</span>=<span class="string">"video-image-1"</span> id=<span class="string">"&#123;&#123;item.id&#125;&#125;"</span> src=<span class="string">"&#123;&#123;item.coverImg.coverImgPath&#125;&#125;"</span> mode=<span class="string">"scaleToFill"</span> catchtap=<span class="string">"tapAction"</span> style=<span class="string">"height:&#123;&#123;item.height&#125;&#125;px;width:&#123;&#123;item.width&#125;&#125;px;"</span>&gt;</div><div class="line">            &lt;form bindsubmit=<span class="string">"formSubmitPlay"</span> report-submit=<span class="string">"true"</span>&gt;</div><div class="line">              &lt;button formType=<span class="string">"submit"</span> wx:<span class="built_in">if</span>=<span class="string">"&#123;&#123;shareShowFormSubmit&#125;&#125;"</span>  id=<span class="string">"&#123;&#123;item.id&#125;&#125;"</span> <span class="keyword">class</span>=<span class="string">"formSubmitPlayBtn1"</span> @tap=<span class="string">"formSubmitPlayAction"</span>&gt;&lt;/button&gt;</div><div class="line">            &lt;/form&gt;</div><div class="line">           &lt;/<span class="built_in">image</span>&gt;</div><div class="line"></div><div class="line"></div><div class="line">          &lt;view id=<span class="string">"&#123;&#123;item.id&#125;&#125;"</span> @tap.<span class="built_in">stop</span>=<span class="string">"tapAction"</span> <span class="keyword">class</span>=<span class="string">"video_icon_bg"</span> style=<span class="string">"background-color: &#123;&#123; item.transcodeStatus === 2 ? 'rgba(0, 0, 0, .5)' : 'rgba(0, 0, 0, 0)' &#125;&#125;;"</span> wx:<span class="built_in">if</span>=<span class="string">"&#123;&#123;item.uploadFileStatus == 2 || item.uploadFileStatus == 0 || item.uploadFileStatus == undefined&#125;&#125;"</span>&gt;</div><div class="line">            &lt;view <span class="keyword">class</span>=<span class="string">"video_icon_content"</span> &gt;</div><div class="line">              &lt;<span class="built_in">image</span> wx:<span class="built_in">if</span>=<span class="string">"&#123;&#123;!item.play&#125;&#125;"</span> <span class="keyword">class</span>=<span class="string">"video_icon"</span>  src=<span class="string">"/assets/icon_video_play.png"</span>&gt;&lt;/<span class="built_in">image</span>&gt;</div><div class="line">              &lt;<span class="built_in">text</span> <span class="keyword">class</span>=<span class="string">"video_icon_tip"</span> wx:<span class="built_in">if</span>=<span class="string">"&#123;&#123;item.transcodeStatus === 2&#125;&#125;"</span>&gt;为保证最佳观看体验，视频正在转码中&lt;/<span class="built_in">text</span>&gt;</div><div class="line">                &lt;<span class="built_in">text</span> <span class="keyword">class</span>=<span class="string">"video_icon_tip"</span> wx:<span class="built_in">if</span>=<span class="string">"&#123;&#123;item.transcodeStatus === 2&#125;&#125;"</span>&gt;如遇到不能正常播的情况，请下拉刷新&lt;/<span class="built_in">text</span>&gt;</div><div class="line">            &lt;/view&gt;</div><div class="line">            &lt;form bindsubmit=<span class="string">"formSubmitPlay"</span> report-submit=<span class="string">"true"</span>&gt;</div><div class="line">              &lt;button formType=<span class="string">"submit"</span> wx:<span class="built_in">if</span>=<span class="string">"&#123;&#123;shareShowFormSubmit&#125;&#125;"</span>  id=<span class="string">"&#123;&#123;item.id&#125;&#125;"</span> <span class="keyword">class</span>=<span class="string">"formSubmitPlayBtn2"</span> @tap=<span class="string">"formSubmitPlayAction"</span>&gt;&lt;/button&gt;</div><div class="line">            &lt;/form&gt;</div><div class="line">          &lt;/view&gt;</div><div class="line">          &lt;video show-center-play-btn=<span class="string">"&#123;&#123;showCenterPlayBtn&#125;&#125;"</span> direction=<span class="string">"&#123;&#123;item.width&gt;item.height?90:0&#125;&#125;"</span> wx:<span class="built_in">if</span>=<span class="string">"&#123;&#123;item.play&#125;&#125;"</span> id=<span class="string">"&#123;&#123;item.id&#125;&#125;"</span> data-totaltime=<span class="string">"&#123;&#123;item.totalTime&#125;&#125;"</span> <span class="keyword">class</span>=<span class="string">"video"</span> custom-cache=<span class="string">"&#123;&#123;false&#125;&#125;"</span> style=<span class="string">"height:&#123;&#123;item.height&#125;&#125;px;width:&#123;&#123;item.width&#125;&#125;px;"</span> src=<span class="string">"&#123;&#123;item.videoPath&#125;&#125;"</span> autoplay=<span class="string">"&#123;&#123;item.autoplay&#125;&#125;"</span> bindwaiting=<span class="string">"videoWaiting"</span> binderror=<span class="string">"videoError"</span> bindplay=<span class="string">"bindplay"</span> bindtimeupdate=<span class="string">"bindtimeupdate"</span> bindfullscreenchange=<span class="string">"bindfullscreenchange"</span> bindpause=<span class="string">"bindpause"</span> bindended=<span class="string">"bindended"</span>&gt;</div><div class="line">            &lt;cover-view id=<span class="string">"&#123;&#123;item.id&#125;&#125;"</span> <span class="keyword">class</span>=<span class="string">"video_progress_continue-bg"</span> wx:<span class="built_in">if</span>=<span class="string">"&#123;&#123;showVideoProgressContinue&#125;&#125;"</span>&gt;</div><div class="line">              &lt;cover-view id=<span class="string">"&#123;&#123;item.id&#125;&#125;"</span> <span class="keyword">class</span>=<span class="string">"video_progress_close"</span> @tap.<span class="built_in">stop</span>=<span class="string">"videoProgressCloseAction"</span>&gt;</div><div class="line">                &lt;cover-<span class="built_in">image</span> id=<span class="string">"&#123;&#123;item.id&#125;&#125;"</span> <span class="keyword">class</span>=<span class="string">"video_progress_close_img"</span> src=<span class="string">"/assets/icon_video_progress_close.png"</span>&gt;&lt;/cover-<span class="built_in">image</span>&gt;</div><div class="line">              &lt;/cover-view&gt;</div><div class="line">              &lt;cover-view id=<span class="string">"&#123;&#123;item.id&#125;&#125;"</span> <span class="keyword">class</span>=<span class="string">"video_progress"</span>&gt;上次播放至 &#123;&#123;playDurationStrContinue&#125;&#125;&lt;/cover-view&gt;</div><div class="line">              &lt;cover-view id=<span class="string">"&#123;&#123;item.id&#125;&#125;"</span> <span class="keyword">class</span>=<span class="string">"video_progress_continue"</span> @tap.<span class="built_in">stop</span>=<span class="string">"videoProgressContinueAction"</span>&gt;</div><div class="line">                &lt;cover-view id=<span class="string">"&#123;&#123;item.id&#125;&#125;"</span> <span class="keyword">class</span>=<span class="string">"video_progress_continue_txt"</span>&gt;继续播放&lt;/cover-view&gt;</div><div class="line">              &lt;/cover-view&gt;</div><div class="line">            &lt;/cover-view&gt;</div><div class="line">            &lt;cover-view id=<span class="string">"&#123;&#123;item.id&#125;&#125;"</span> <span class="keyword">class</span>=<span class="string">'video_exit_image-bg'</span></div><div class="line">              style=<span class="string">"top: &#123;&#123;isiPhoneX ? (item.width&gt;item.height?0: 70) :0&#125;&#125;rpx; right: &#123;&#123;isiPhoneX ? (item.width&gt;item.height? 100 :0) :0&#125;&#125;rpx;"</span></div><div class="line">              wx:<span class="built_in">if</span>=<span class="string">"&#123;&#123;showVideoExitImage&#125;&#125;"</span></div><div class="line">              @tap.<span class="built_in">stop</span>=<span class="string">"exitVideoFullScreenAction"</span>&gt;</div><div class="line">            &lt;cover-<span class="built_in">image</span> id=<span class="string">"&#123;&#123;item.id&#125;&#125;"</span> <span class="keyword">class</span>=<span class="string">'video_exit_image'</span> src=<span class="string">"/assets/icon_video_wrong.png"</span>&gt;</div><div class="line">            &lt;/cover-<span class="built_in">image</span>&gt;</div><div class="line">            &lt;/cover-view&gt;</div><div class="line">          &lt;/video&gt;</div><div class="line"></div><div class="line">          &lt;view <span class="keyword">class</span>=<span class="string">"uploading"</span> wx:<span class="built_in">if</span>=<span class="string">"&#123;&#123;item.uploadFileStatus == 1&#125;&#125;"</span>&gt;</div><div class="line">              &lt;<span class="built_in">text</span> <span class="keyword">class</span>=<span class="string">"progress"</span>&gt;&#123;&#123;item.progress == undefined ? <span class="number">0</span> : item.progress&#125;&#125;%&lt;/<span class="built_in">text</span>&gt;</div><div class="line">              &lt;view <span class="keyword">class</span>=<span class="string">"circleProgress"</span>&gt;&lt;/view&gt;</div><div class="line">          &lt;/view&gt;</div><div class="line">          &lt;view <span class="keyword">class</span>=<span class="string">"uploadFail"</span> wx:<span class="built_in">if</span>=<span class="string">"&#123;&#123;item.uploadFileStatus == 3&#125;&#125;"</span>&gt;</div><div class="line">              &lt;button <span class="keyword">class</span>=<span class="string">"reuploadButton"</span> @tap=<span class="string">"reuploadFileAction"</span>&gt;重新上传&lt;/button&gt;</div><div class="line">          &lt;/view&gt;</div><div class="line">          &lt;view <span class="keyword">class</span> = <span class="string">"title_bg"</span> wx:<span class="built_in">if</span>=<span class="string">"&#123;&#123;!item.isEdit &amp;&amp; (item.title.length &gt; 0)&#125;&#125;"</span>&gt;</div><div class="line">            &lt;view <span class="keyword">class</span>=<span class="string">"title"</span>&gt;</div><div class="line">              &#123;&#123;item.title&#125;&#125;</div><div class="line">            &lt;/view&gt;</div><div class="line">          &lt;/view&gt;</div><div class="line">          &lt;view <span class="keyword">class</span> = <span class="string">"input_bg"</span> wx:<span class="built_in">if</span>=<span class="string">"&#123;&#123;item.isEdit&#125;&#125;"</span>&gt;</div><div class="line">              &lt;input  value=<span class="string">"&#123;&#123;item.tempTitle&#125;&#125;"</span> style=<span class="string">"color:white;"</span> focus=<span class="string">"true"</span> maxlength=<span class="string">"20"</span> <span class="built_in">cursor</span>-spacing=<span class="string">"100"</span> placeholder=<span class="string">"为视频添加个标题..."</span> placeholder-style=<span class="string">"color:white"</span>  bindinput=<span class="string">"textValueChanged"</span>/&gt;</div><div class="line">              &lt;view <span class="keyword">class</span>=<span class="string">"line"</span>/&gt;</div><div class="line">              &lt;view <span class="keyword">class</span>=<span class="string">"edit"</span>&gt;</div><div class="line">                &lt;view <span class="keyword">class</span>=<span class="string">"buttons"</span>&gt;</div><div class="line">                  &lt;view <span class="keyword">class</span>=<span class="string">"coverButton"</span> catchtap=<span class="string">"updateCoverAction"</span>&gt;上传封面&lt;/view&gt;</div><div class="line">                  &lt;view <span class="keyword">class</span>=<span class="string">"line"</span>&gt;&lt;/view&gt;</div><div class="line">                  &lt;view <span class="keyword">class</span>=<span class="string">"coverButton"</span> catchtap=<span class="string">"useDefaultCoverAction"</span>&gt;用默认封面&lt;/view&gt;</div><div class="line">                  &lt;/view&gt;</div><div class="line">                &lt;view <span class="keyword">class</span>=<span class="string">"doneButton"</span> catchtap=<span class="string">"editTitleDoneAction"</span>&gt;完成&lt;/view&gt;</div><div class="line">              &lt;/view&gt;</div><div class="line">          &lt;/view&gt;</div><div class="line">          &lt;!-- <span class="string">'播放'</span> 需要先登录 --&gt;</div><div class="line">          &lt;view <span class="keyword">class</span>=<span class="string">"unLogin-play"</span> wx:<span class="built_in">if</span>=<span class="string">"&#123;&#123;!isLogin&#125;&#125;"</span> @tap.<span class="built_in">stop</span>=<span class="string">'unLoginPlayAction'</span>&gt;</div><div class="line">            &lt;form bindsubmit=<span class="string">"formSubmitPlay"</span> report-submit=<span class="string">"true"</span>&gt;</div><div class="line">              &lt;button id=<span class="string">"&#123;&#123;item.id&#125;&#125;"</span> <span class="keyword">class</span>=<span class="string">"button"</span> <span class="built_in">open</span>-type=<span class="string">"getUserInfo"</span> bindgetuserinfo=<span class="string">"bindgetuserinfo"</span> formType=<span class="string">"&#123;&#123;shareShowFormSubmit ? 'submit' : ''&#125;&#125;"</span> @tap=<span class="string">"formSubmitBtnAction"</span>&gt;&lt;/button&gt;</div><div class="line">            &lt;/form&gt;</div><div class="line">          &lt;/view&gt;</div><div class="line">          &lt;!-- <span class="string">'播放'</span> 需要先登录 --&gt;</div><div class="line">          &lt;view <span class="keyword">class</span>=<span class="string">"replay_bg"</span> wx:<span class="built_in">if</span>=<span class="string">"&#123;&#123;item.showReplay &amp;&amp; isShowWeChatCircleShareButton&#125;&#125;"</span>&gt;</div><div class="line">            &lt;view <span class="keyword">class</span>=<span class="string">"containner"</span>&gt;</div><div class="line">              &lt;view <span class="keyword">class</span>=<span class="string">"share-tip"</span>&gt;</div><div class="line">              &lt;<span class="built_in">image</span> <span class="keyword">class</span>=<span class="string">"left-line"</span> src=<span class="string">"/assets/icon_line_left.png"</span>/&gt;</div><div class="line">              &lt;<span class="built_in">text</span> <span class="keyword">class</span>=<span class="string">"tip"</span>&gt;分享到&lt;/<span class="built_in">text</span>&gt;</div><div class="line">              &lt;<span class="built_in">image</span> <span class="keyword">class</span>=<span class="string">"right-line"</span> src=<span class="string">"/assets/icon_line_right.png"</span>/&gt;</div><div class="line">              &lt;/view&gt;</div><div class="line">              &lt;view <span class="keyword">class</span>=<span class="string">"share"</span>&gt;</div><div class="line">                &lt;view <span class="keyword">class</span>=<span class="string">"wechat-friend"</span>&gt;</div><div class="line">                  &lt;<span class="built_in">image</span> <span class="keyword">class</span>=<span class="string">"wechat-friend-image"</span> src=<span class="string">"/assets/icon_video_wechat.png"</span>/&gt;</div><div class="line">                  &lt;button id=<span class="string">"&#123;&#123;item.id&#125;&#125;"</span> <span class="keyword">class</span>=<span class="string">"button"</span> <span class="built_in">open</span>-type=<span class="string">"share"</span> @tap=<span class="string">"shareReportAction"</span>&gt;&lt;/button&gt;</div><div class="line">                  &lt;<span class="built_in">text</span> <span class="keyword">class</span>=<span class="string">"wechat-friend-tip"</span>&gt;微信&lt;/<span class="built_in">text</span>&gt;</div><div class="line">                  &lt;form bindsubmit=<span class="string">"formSubmit"</span> report-submit=<span class="string">"true"</span>&gt;</div><div class="line">                    &lt;button formType=<span class="string">"submit"</span> wx:<span class="built_in">if</span>=<span class="string">"&#123;&#123;shareShowFormSubmit&#125;&#125;"</span>  id=<span class="string">"&#123;&#123;item.id&#125;&#125;"</span> <span class="keyword">class</span>=<span class="string">"formSubmitBtn"</span> @tap=<span class="string">"formSubmitBtnAction"</span>&gt;&lt;/button&gt;</div><div class="line">                  &lt;/form&gt;</div><div class="line">                &lt;/view&gt;</div><div class="line">                &lt;view <span class="keyword">class</span>=<span class="string">"wechat-circle"</span> &gt;</div><div class="line">                  &lt;<span class="built_in">image</span> id=<span class="string">"&#123;&#123;item.id&#125;&#125;"</span> <span class="keyword">class</span>=<span class="string">"wechat-circle-image"</span> src=<span class="string">"/assets/icon_video_pyq.png"</span> @tap.<span class="built_in">stop</span>=<span class="string">"tapShareToWeChatCircleAction"</span>/&gt;</div><div class="line">                  &lt;<span class="built_in">text</span> <span class="keyword">class</span>=<span class="string">"wechat-circle-tip"</span>&gt;朋友圈&lt;/<span class="built_in">text</span>&gt;</div><div class="line">                  &lt;button id=<span class="string">"&#123;&#123;item.id&#125;&#125;"</span> wx:<span class="built_in">if</span>=<span class="string">"&#123;&#123;!isLogin&#125;&#125;"</span> <span class="keyword">class</span>=<span class="string">"button"</span> <span class="built_in">open</span>-type=<span class="string">"getUserInfo"</span> bindgetuserinfo=<span class="string">"bindgetuserinfo"</span>&gt;&lt;/button&gt;</div><div class="line">                  &lt;form bindsubmit=<span class="string">"formSubmit"</span> report-submit=<span class="string">"true"</span>&gt;</div><div class="line">                    &lt;button formType=<span class="string">"submit"</span> wx:<span class="built_in">if</span>=<span class="string">"&#123;&#123;shareShowFormSubmit&#125;&#125;"</span>  id=<span class="string">"&#123;&#123;item.id&#125;&#125;"</span> <span class="keyword">class</span>=<span class="string">"formSubmitBtn"</span> @tap=<span class="string">"formSubmitBtnAction"</span>&gt;&lt;/button&gt;</div><div class="line">                  &lt;/form&gt;</div><div class="line">                &lt;/view&gt;</div><div class="line">              &lt;/view&gt;</div><div class="line">              &lt;view <span class="keyword">class</span>=<span class="string">"replay-item-share"</span>&gt;</div><div class="line">                &lt;<span class="built_in">image</span> <span class="keyword">class</span>=<span class="string">"replay-border"</span> src=<span class="string">"/assets/replay-boder.png"</span>/&gt;</div><div class="line">                &lt;view id=<span class="string">"&#123;&#123;item.id&#125;&#125;"</span> <span class="keyword">class</span>=<span class="string">"replay-tip-containner"</span>  @tap.<span class="built_in">stop</span>=<span class="string">"tapAction"</span>&gt;</div><div class="line">                  &lt;<span class="built_in">image</span> <span class="keyword">class</span>=<span class="string">"replay-image"</span> src=<span class="string">"/assets/icon_video_refresh.png"</span>/&gt;</div><div class="line">                  &lt;<span class="built_in">text</span> <span class="keyword">class</span>=<span class="string">"replay-tip"</span>&gt;重播&lt;/<span class="built_in">text</span>&gt;</div><div class="line">                   &lt;form bindsubmit=<span class="string">"formSubmit"</span> report-submit=<span class="string">"true"</span>&gt;</div><div class="line">                    &lt;button formType=<span class="string">"submit"</span> wx:<span class="built_in">if</span>=<span class="string">"&#123;&#123;shareShowFormSubmit&#125;&#125;"</span>  id=<span class="string">"&#123;&#123;item.id&#125;&#125;"</span> <span class="keyword">class</span>=<span class="string">"formSubmitBtn"</span> @tap=<span class="string">"formSubmitBtnAction"</span>&gt;&lt;/button&gt;</div><div class="line">                  &lt;/form&gt;</div><div class="line">                &lt;/view&gt;</div><div class="line">                &lt;form bindsubmit=<span class="string">"formSubmit"</span> report-submit=<span class="string">"true"</span>&gt;</div><div class="line">                  &lt;button id=<span class="string">"&#123;&#123;item.id&#125;&#125;"</span> wx:<span class="built_in">if</span>=<span class="string">"&#123;&#123;!isLogin&#125;&#125;"</span> <span class="keyword">class</span>=<span class="string">"button"</span> <span class="built_in">open</span>-type=<span class="string">"getUserInfo"</span> bindgetuserinfo=<span class="string">"bindgetuserinfo"</span> formType=<span class="string">"&#123;&#123;shareShowFormSubmit ? 'submit' : ''&#125;&#125;"</span> @tap=<span class="string">"formSubmitBtnAction"</span>&gt;&lt;/button&gt;</div><div class="line">                &lt;/form&gt;</div><div class="line">              &lt;/view&gt;</div><div class="line">            &lt;/view&gt;</div><div class="line">          &lt;/view&gt;</div><div class="line">          </div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">.contentcontainner-parent &#123;</div><div class="line">    padding: <span class="number">24</span>rpx <span class="number">12</span>px <span class="number">0</span>rpx <span class="number">12</span>px;</div><div class="line">    <span class="built_in">position</span>: relative;</div><div class="line">    .contentcontainner &#123;</div><div class="line">      <span class="built_in">position</span>: relative;</div><div class="line">      <span class="built_in">overflow</span>: hidden;</div><div class="line">      box-sizing: border-box;</div><div class="line">      border-radius: <span class="number">12</span>rpx;</div><div class="line"></div><div class="line">      .video-<span class="built_in">image</span><span class="number">-1</span> &#123;</div><div class="line">        <span class="built_in">position</span>: absolute;</div><div class="line">        left: <span class="number">0</span>;</div><div class="line">        top: <span class="number">0</span>;</div><div class="line">        .formSubmitPlayBtn1 &#123;</div><div class="line">          top: <span class="number">0</span>;</div><div class="line">          left: <span class="number">0</span>;</div><div class="line">          <span class="built_in">position</span>: absolute;</div><div class="line">          <span class="built_in">width</span>: <span class="number">100</span>%;</div><div class="line">          <span class="built_in">height</span>: <span class="number">100</span>%;</div><div class="line">          padding-left: <span class="number">0</span>;</div><div class="line">          padding-right: <span class="number">0</span>;</div><div class="line">          <span class="built_in">background</span>-color: transparent;</div><div class="line">        &#125;</div><div class="line">        .formSubmitPlayBtn1::after &#123;</div><div class="line">          border: <span class="number">0</span>;</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">      .video &#123;</div><div class="line">        <span class="built_in">position</span>: absolute;</div><div class="line">        left: <span class="number">0</span>;</div><div class="line">        top: <span class="number">0</span>;</div><div class="line">        border-radius: <span class="number">12</span>rpx;</div><div class="line">        <span class="built_in">display</span>: flex;</div><div class="line">        .video_exit_image-bg&#123;</div><div class="line">            <span class="built_in">position</span>: absolute;</div><div class="line">            top: <span class="number">0</span>rpx;</div><div class="line">            right: <span class="number">0</span>rpx;</div><div class="line">            <span class="built_in">width</span>: <span class="number">100</span>rpx;  <span class="comment">// 51 + 24*2</span></div><div class="line">            <span class="built_in">height</span>: <span class="number">100</span>rpx; <span class="comment">// 51 + 24*2</span></div><div class="line">            <span class="built_in">display</span>: flex;</div><div class="line">            align-items: center;</div><div class="line">            justify-content: center;</div><div class="line">            .video_exit_image&#123;</div><div class="line">              <span class="built_in">width</span>: <span class="number">51</span>rpx;</div><div class="line">              <span class="built_in">height</span>: <span class="number">51</span>rpx;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        .video_progress_continue-bg &#123;</div><div class="line">          <span class="built_in">background</span>-color: rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.5</span>);</div><div class="line">          border-top-right-radius: <span class="number">8</span>rpx;</div><div class="line">          border-bottom-right-radius: <span class="number">8</span>rpx;</div><div class="line">          will-change: transform;</div><div class="line">          <span class="built_in">position</span>: absolute;</div><div class="line">          left: <span class="number">0</span>rpx;</div><div class="line">          bottom: <span class="number">134</span>rpx;</div><div class="line">          <span class="built_in">display</span>: flex;</div><div class="line">          align-items: center;</div><div class="line">          .video_progress_close &#123;</div><div class="line">            <span class="built_in">display</span>: flex;</div><div class="line">            align-items: center;</div><div class="line">            justify-content: center;</div><div class="line">            <span class="built_in">height</span>: <span class="number">60</span>rpx;</div><div class="line">            <span class="built_in">width</span>: <span class="number">59</span>rpx;</div><div class="line">            .video_progress_close_img &#123;</div><div class="line">              <span class="built_in">width</span>: <span class="number">23</span>rpx;</div><div class="line">              <span class="built_in">height</span>: <span class="number">24</span>rpx;</div><div class="line">            &#125;</div><div class="line">          &#125;</div><div class="line">          .video_progress &#123;</div><div class="line">            <span class="built_in">height</span>: <span class="number">30</span>rpx;</div><div class="line">            color: white;</div><div class="line">            font-<span class="built_in">size</span>: <span class="number">26</span>rpx;</div><div class="line">            <span class="built_in">text</span>-align: center;</div><div class="line">          &#125;</div><div class="line">          .video_progress_continue &#123;</div><div class="line">            <span class="built_in">display</span>: flex;</div><div class="line">            align-items: center;</div><div class="line">            justify-content: center;</div><div class="line">            <span class="built_in">height</span>: <span class="number">61</span>rpx;</div><div class="line">            <span class="built_in">width</span>: <span class="number">152</span>rpx;</div><div class="line">            .video_progress_continue_txt &#123;</div><div class="line">              <span class="built_in">height</span>: <span class="number">30</span>rpx;</div><div class="line">              color: #<span class="number">08</span>B706;</div><div class="line">              font-<span class="built_in">size</span>: <span class="number">26</span>rpx;</div><div class="line">              font-weight: bold;</div><div class="line">              <span class="built_in">text</span>-align: center;</div><div class="line">            &#125;</div><div class="line">          &#125;</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">      .video_icon_bg &#123;</div><div class="line">        <span class="built_in">width</span>: <span class="number">100</span>%;</div><div class="line">        <span class="built_in">height</span>: <span class="number">100</span>%;</div><div class="line">        <span class="built_in">position</span>: absolute;</div><div class="line">        left: <span class="number">0</span>;</div><div class="line">        top: <span class="number">0</span>;</div><div class="line">        <span class="built_in">background</span>-color: rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>);</div><div class="line">        .video_icon_content &#123;</div><div class="line">          <span class="built_in">display</span>: <span class="keyword">inline</span>-flex;</div><div class="line">          align-items: center;</div><div class="line">          flex-direction: column;</div><div class="line">          <span class="built_in">position</span>: absolute;</div><div class="line">          left: <span class="number">50</span>%;</div><div class="line">          top: <span class="number">50</span>%;</div><div class="line">          transform: translate(<span class="number">-50</span>%, <span class="number">-40</span>%);</div><div class="line">          .video_icon &#123;</div><div class="line">            <span class="built_in">width</span>: <span class="number">55</span>rpx;</div><div class="line">            <span class="built_in">height</span>: <span class="number">64</span>rpx;</div><div class="line">          &#125;</div><div class="line">          .video_icon_tip &#123;</div><div class="line">            white-space: nowrap;</div><div class="line">            font-<span class="built_in">size</span>: <span class="number">30</span>rpx;</div><div class="line">            color: white;</div><div class="line">          &#125;</div><div class="line">        &#125;</div><div class="line">        .formSubmitPlayBtn2 &#123;</div><div class="line">          top: <span class="number">0</span>;</div><div class="line">          left: <span class="number">0</span>;</div><div class="line">          <span class="built_in">position</span>: absolute;</div><div class="line">          <span class="built_in">width</span>: <span class="number">100</span>%;</div><div class="line">          <span class="built_in">height</span>: <span class="number">100</span>%;</div><div class="line">          padding-left: <span class="number">0</span>;</div><div class="line">          padding-right: <span class="number">0</span>;</div><div class="line">          <span class="built_in">background</span>-color: transparent;</div><div class="line">        &#125;</div><div class="line">        .formSubmitPlayBtn2::after &#123;</div><div class="line">          border: <span class="number">0</span>;</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">      .image_loading_bg &#123;</div><div class="line">        <span class="built_in">width</span>: <span class="number">100</span>%;</div><div class="line">        <span class="built_in">height</span>: <span class="number">100</span>%;</div><div class="line">        <span class="built_in">position</span>: absolute;</div><div class="line">        left: <span class="number">0</span>;</div><div class="line">        top: <span class="number">0</span>;</div><div class="line">        .image_loading_tip &#123;</div><div class="line">          <span class="built_in">position</span>: absolute;</div><div class="line">          left: <span class="number">50</span>%;</div><div class="line">          top: <span class="number">50</span>%;</div><div class="line">          transform: translate(<span class="number">-50</span>%, <span class="number">100</span>%);</div><div class="line">          font-weight: bold;</div><div class="line">          font-<span class="built_in">size</span>: <span class="number">30</span>rpx;</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      .uploading &#123;</div><div class="line">        <span class="built_in">width</span>: <span class="number">100</span>%;</div><div class="line">        <span class="built_in">height</span>: <span class="number">100</span>%;</div><div class="line">        left: <span class="number">0</span>;</div><div class="line">        top: <span class="number">0</span>;</div><div class="line">        <span class="built_in">background</span>-color: #f7f7f7;</div><div class="line">        <span class="built_in">position</span>: absolute;</div><div class="line">        .progress &#123;</div><div class="line">          left: <span class="number">50</span>%;</div><div class="line">          top: <span class="number">50</span>%;</div><div class="line">          <span class="built_in">position</span>: absolute;</div><div class="line">          transform: translate(<span class="number">-50</span>%, <span class="number">-40</span>%);</div><div class="line">          <span class="built_in">width</span>: <span class="number">100</span>rpx;</div><div class="line">          <span class="built_in">text</span>-align: center;</div><div class="line">          color: #<span class="number">333</span>;</div><div class="line">        &#125;</div><div class="line">        .circleProgress &#123;</div><div class="line">          left: <span class="number">50</span>%;</div><div class="line">          top: <span class="number">50</span>%;</div><div class="line">          <span class="built_in">position</span>: absolute;</div><div class="line">          transform: translate(<span class="number">-50</span>%, <span class="number">-40</span>%);</div><div class="line">        &#125;</div><div class="line">        .circleProgress::after &#123;</div><div class="line">          <span class="built_in">display</span>: block;</div><div class="line">          content: <span class="string">''</span>;</div><div class="line">          <span class="built_in">width</span>: <span class="number">45</span>px;</div><div class="line">          <span class="built_in">height</span>: <span class="number">45</span>px;</div><div class="line">          border: <span class="number">5</span>px solid #<span class="number">333</span>;</div><div class="line">          border-radius: <span class="number">50</span>%;</div><div class="line">          will-change: transform;</div><div class="line">          animation: circleProgressLoad <span class="number">0.8</span>s linear infinite;</div><div class="line">          border-top: <span class="number">5</span>px solid transparent;</div><div class="line">        &#125;</div><div class="line">        @keyframes circleProgressLoad &#123;</div><div class="line">          <span class="number">100</span>% &#123;</div><div class="line">            transform: rotate(<span class="number">-360</span>deg);</div><div class="line">          &#125;</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">      .uploadFail &#123;</div><div class="line">        <span class="built_in">width</span>: <span class="number">100</span>%;</div><div class="line">        <span class="built_in">height</span>: <span class="number">100</span>%;</div><div class="line">        <span class="built_in">position</span>: absolute;</div><div class="line">        left: <span class="number">0</span>;</div><div class="line">        top: <span class="number">0</span>;</div><div class="line">        <span class="built_in">background</span>-color: white;</div><div class="line">        .reuploadButton &#123;</div><div class="line">          left: <span class="number">50</span>%;</div><div class="line">          top: <span class="number">50</span>%;</div><div class="line">          <span class="built_in">position</span>: absolute;</div><div class="line">          transform: translate(<span class="number">-50</span>%);</div><div class="line">          <span class="built_in">width</span>: <span class="number">208</span>rpx;</div><div class="line">          <span class="built_in">height</span>: <span class="number">80</span>rpx;</div><div class="line">          color: white;</div><div class="line">          font-<span class="built_in">size</span>: <span class="number">30</span>rpx;</div><div class="line">          <span class="built_in">background</span>-color: #ff4159;</div><div class="line">          border-radius: <span class="number">40</span>rpx;</div><div class="line">          will-change: transform;</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">      .replay_bg</div><div class="line">        &#123;</div><div class="line">          <span class="built_in">position</span>: absolute;</div><div class="line">          <span class="built_in">height</span>: <span class="number">100</span>%;</div><div class="line">          <span class="built_in">width</span>: <span class="number">100</span>%;</div><div class="line">          left: <span class="number">0</span>;</div><div class="line">          top: <span class="number">0</span>;</div><div class="line">          border-top-left-radius: <span class="number">12</span>rpx;</div><div class="line">          border-top-right-radius: <span class="number">12</span>rpx;</div><div class="line">          border-top-style: solid;</div><div class="line">          border-color: #EAEAEA;</div><div class="line">          border-left-<span class="built_in">width</span>: <span class="number">1</span>px;</div><div class="line">          border-right-<span class="built_in">width</span>: <span class="number">1</span>px;</div><div class="line">          border-top-<span class="built_in">width</span>: <span class="number">1</span>px;</div><div class="line">          border-right-<span class="built_in">width</span>: <span class="number">1</span>px;</div><div class="line">          border-left-<span class="built_in">width</span>: <span class="number">1</span>px;</div><div class="line">          border-left-style: solid;</div><div class="line">          border-right-style: solid;</div><div class="line">          <span class="built_in">background</span>-color: rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.9</span>);</div><div class="line">          <span class="built_in">display</span>: flex;</div><div class="line">          justify-content: center;</div><div class="line">          align-items: center;</div><div class="line">          .containner &#123;</div><div class="line">            <span class="built_in">width</span>: <span class="number">100</span>%;</div><div class="line">            <span class="built_in">display</span>: flex;</div><div class="line">            justify-content: center;</div><div class="line">            align-items: center;</div><div class="line">            flex-direction: column;</div><div class="line">            .share-tip &#123;</div><div class="line">              <span class="built_in">display</span>: flex;</div><div class="line">              justify-content: center;</div><div class="line">              align-items: center;</div><div class="line">              .tip &#123;</div><div class="line">                <span class="built_in">width</span>: <span class="number">192</span>rpx;</div><div class="line">                font-<span class="built_in">size</span>: <span class="number">30</span>rpx;</div><div class="line">                <span class="built_in">line</span>-<span class="built_in">height</span>: <span class="number">30</span>rpx;</div><div class="line">                <span class="built_in">text</span>-align: center;</div><div class="line">                color: white;</div><div class="line">              &#125;</div><div class="line">              .left-<span class="built_in">line</span> &#123;</div><div class="line">                <span class="built_in">width</span>: <span class="number">180</span>rpx;</div><div class="line">                <span class="built_in">height</span>: <span class="number">2</span>rpx;</div><div class="line">              &#125;</div><div class="line">              .right-<span class="built_in">line</span> &#123;</div><div class="line">                <span class="built_in">width</span>: <span class="number">180</span>rpx;</div><div class="line">                <span class="built_in">height</span>: <span class="number">2</span>rpx;</div><div class="line">              &#125;</div><div class="line">            &#125;</div><div class="line">            .share&#123;</div><div class="line">              <span class="built_in">display</span>: flex;</div><div class="line">              margin-top: <span class="number">40</span>rpx;</div><div class="line">              .wechat-<span class="keyword">friend</span> &#123;</div><div class="line">                <span class="built_in">display</span>: flex;</div><div class="line">                flex-direction: column;</div><div class="line">                <span class="built_in">position</span>: relative;</div><div class="line">                .wechat-<span class="keyword">friend</span>-<span class="built_in">image</span>&#123;</div><div class="line">                  <span class="built_in">width</span>: <span class="number">70</span>rpx;</div><div class="line">                  <span class="built_in">height</span>: <span class="number">70</span>rpx;</div><div class="line">                &#125;</div><div class="line">                .wechat-<span class="keyword">friend</span>-tip&#123;</div><div class="line">                  <span class="built_in">width</span>: <span class="number">70</span>rpx;</div><div class="line">                  margin-top: <span class="number">25</span>rpx;</div><div class="line">                  font-<span class="built_in">size</span>: <span class="number">22</span>rpx;</div><div class="line">                  <span class="built_in">line</span>-<span class="built_in">height</span>: <span class="number">22</span>rpx;</div><div class="line">                  <span class="built_in">text</span>-align: center;</div><div class="line">                  color: white;</div><div class="line">                &#125;</div><div class="line"></div><div class="line">              &#125;</div><div class="line">              .wechat-<span class="built_in">circle</span> &#123;</div><div class="line">                <span class="built_in">display</span>: flex;</div><div class="line">                margin-left: <span class="number">60</span>rpx;</div><div class="line">                flex-direction: column;</div><div class="line">                <span class="built_in">position</span>: relative;</div><div class="line">                .wechat-<span class="built_in">circle</span>-<span class="built_in">image</span>&#123;</div><div class="line">                  <span class="built_in">width</span>: <span class="number">70</span>rpx;</div><div class="line">                  <span class="built_in">height</span>: <span class="number">70</span>rpx;</div><div class="line">                &#125;</div><div class="line">                .wechat-<span class="built_in">circle</span>-tip&#123;</div><div class="line">                  <span class="built_in">width</span>: <span class="number">70</span>rpx;</div><div class="line">                  margin-top: <span class="number">25</span>rpx;</div><div class="line">                  font-<span class="built_in">size</span>: <span class="number">22</span>rpx;</div><div class="line">                  <span class="built_in">line</span>-<span class="built_in">height</span>: <span class="number">22</span>rpx;</div><div class="line">                  <span class="built_in">text</span>-align: center;</div><div class="line">                  color: white;</div><div class="line">                &#125;</div><div class="line">              &#125;</div><div class="line">            &#125;</div><div class="line">            .replay-item-share &#123;</div><div class="line">              <span class="built_in">display</span>: flex;</div><div class="line">              margin-top: <span class="number">40</span>rpx;</div><div class="line">              margin-bottom: <span class="number">2</span>rpx;</div><div class="line">              <span class="built_in">position</span>: relative;</div><div class="line">              justify-content: center;</div><div class="line">              align-items: center;</div><div class="line">              <span class="built_in">width</span>: <span class="number">120</span>rpx;</div><div class="line">              <span class="built_in">height</span>: <span class="number">50</span>rpx;</div><div class="line">              .replay-border &#123;</div><div class="line">                <span class="built_in">position</span>: absolute;</div><div class="line">                left: <span class="number">0</span>;</div><div class="line">                top: <span class="number">0</span>;</div><div class="line">                <span class="built_in">width</span>: <span class="number">120</span>rpx;</div><div class="line">                <span class="built_in">height</span>: <span class="number">50</span>rpx;</div><div class="line">              &#125;</div><div class="line">              .replay-tip-containner &#123;</div><div class="line">                <span class="built_in">display</span>:flex;</div><div class="line">                <span class="built_in">position</span>: absolute;</div><div class="line">                left: <span class="number">0</span>;</div><div class="line">                top: <span class="number">0</span>;</div><div class="line">                <span class="built_in">width</span>: <span class="number">120</span>rpx;</div><div class="line">                <span class="built_in">height</span>: <span class="number">50</span>rpx;</div><div class="line">                justify-content: center;</div><div class="line">                align-items: center;</div><div class="line">                .replay-<span class="built_in">image</span> &#123;</div><div class="line">                  <span class="built_in">width</span>: <span class="number">22</span>rpx;</div><div class="line">                  <span class="built_in">height</span>: <span class="number">22</span>rpx;</div><div class="line">                &#125;</div><div class="line">                .replay-tip &#123;</div><div class="line">                  margin-left: <span class="number">12</span>rpx;</div><div class="line">                  color: white;</div><div class="line">                  font-<span class="built_in">size</span>: <span class="number">24</span>rpx;</div><div class="line">                  <span class="built_in">line</span>-<span class="built_in">height</span>: <span class="number">24</span>rpx;</div><div class="line">                &#125;</div><div class="line">              &#125;</div><div class="line"></div><div class="line">            &#125;</div><div class="line">          &#125;</div><div class="line">        &#125;</div><div class="line">      .unLogin-play &#123;</div><div class="line">        <span class="built_in">width</span>: <span class="number">100</span>%;</div><div class="line">        <span class="built_in">height</span>: <span class="number">100</span>%;</div><div class="line">        <span class="built_in">position</span>: absolute;</div><div class="line">        left: <span class="number">0</span>;</div><div class="line">        top: <span class="number">0</span>;</div><div class="line">        <span class="built_in">background</span>-color: transparent;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    .post-bottom-bar-bg<span class="number">-1</span> &#123;</div><div class="line">      <span class="built_in">display</span>: flex;</div><div class="line">      <span class="built_in">width</span>: <span class="number">100</span>%;</div><div class="line">      flex-direction: row-reverse;</div><div class="line">      align-items: center;</div><div class="line">      <span class="built_in">position</span>: absolute;</div><div class="line">      <span class="built_in">height</span>: <span class="number">30</span>rpx;</div><div class="line">      bottom: <span class="number">24</span>rpx;</div><div class="line">      .right &#123;</div><div class="line">        margin-right: <span class="number">24</span>rpx;</div><div class="line">        box-sizing: border-box;</div><div class="line">        <span class="built_in">display</span>: flex;</div><div class="line">        .post-bottom-bar-content &#123;</div><div class="line">          <span class="built_in">display</span>: flex;</div><div class="line">          flex-direction: row;</div><div class="line">          <span class="built_in">background</span>-color: rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>);</div><div class="line">          border-radius: <span class="number">8</span>rpx;</div><div class="line">          margin-left: <span class="number">24</span>rpx;</div><div class="line">          align-items: center;</div><div class="line">          padding: <span class="number">12</span>rpx <span class="number">12</span>rpx <span class="number">12</span>rpx <span class="number">12</span>rpx;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        .post-bottom-bar-right-content &#123;</div><div class="line">          font-<span class="built_in">size</span>: <span class="number">22</span>rpx;</div><div class="line">          font-weight: bold;</div><div class="line">          color: white;</div><div class="line">          <span class="built_in">text</span>-align: center;</div><div class="line">          <span class="built_in">line</span>-<span class="built_in">height</span>: <span class="number">15</span>rpx;</div><div class="line">          margin-left: <span class="number">8</span>rpx;</div><div class="line">        &#125;</div><div class="line">        .icon_eyes_white &#123;</div><div class="line">          <span class="built_in">width</span>: <span class="number">30</span>rpx;</div><div class="line">          <span class="built_in">height</span>: <span class="number">22</span>rpx;</div><div class="line">        &#125;</div><div class="line">        .icon_play_white &#123;</div><div class="line">          <span class="built_in">width</span>: <span class="number">21</span>rpx;</div><div class="line">          <span class="built_in">height</span>: <span class="number">26</span>rpx;</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
<figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">view</span> <span class="attr">id</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;item.id&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> @<span class="attr">tap.stop</span>=<span class="string">"tapAction"</span>&gt;</span></span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">bindsubmit</span>=<span class="string">"formSubmitPlay"</span> <span class="attr">report-submit</span>=<span class="string">"true"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">formType</span>=<span class="string">"submit"</span> <span class="attr">id</span>=<span class="string">"</span></span><span class="template-variable">&#123;&#123;item.id&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">class</span>=<span class="string">"formSubmitPlayBtn2"</span> @<span class="attr">tap</span>=<span class="string">"formSubmitPlayAction"</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></div><div class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">video</span>&gt;</span> <span class="tag">&lt;/<span class="name">video</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文章出处，原创于 &lt;a href=&quot;https://HawkingOuYang.github.io/&quot;&gt;https://HawkingOuYang.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/HawkingOuYang
    
    </summary>
    
      <category term="小程序" scheme="https://HawkingOuYang.github.io/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="小程序" scheme="https://HawkingOuYang.github.io/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>2018 年将至，iOS 工程师如何自我提高</title>
    <link href="https://HawkingOuYang.github.io/2017/11/16/39_iOS_how_to_in_2018/"/>
    <id>https://HawkingOuYang.github.io/2017/11/16/39_iOS_how_to_in_2018/</id>
    <published>2017-11-15T16:00:00.000Z</published>
    <updated>2019-01-17T03:35:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章出处，原创于 <a href="https://HawkingOuYang.github.io/">https://HawkingOuYang.github.io/</a></p>
<p><a href="https://github.com/HawkingOuYang/" target="_blank" rel="external">我的GitHub</a></p>
<hr>
<p>2018 年将至，iOS 工程师如何自我提高 （张星宇）</p>
<p><a href="https://xiaozhuanlan.com/topic/1470953682" target="_blank" rel="external">转载 小专栏</a></p>
<p>预计阅读时间6分钟</p>
<p>如果从 13 年移动客户端大火开始算起，至今已经有五个年头了。现在移动端的形势也不需要太多的废话来描述，一句话总结就是：“浪潮退去，谁在裸泳一看就清楚。”我希望借助这篇文章来聊聊在我心目中，移动互联网下一个五年的趋势和机会，以及我们 iOS 工程师能做哪些准备，实现自我提高。本文主观性的看法比较多，文笔也比较激进，仅供参考。</p>
<p>我们都知道价格会受到供需的影响，如果某项技能在市场上紧缺，那么掌握这门技能的工作者工资就会相对高一些，比如 14 年前前后能写好 UITableView 就能找到一个相对不错的工作了。在我看来，未来几年的移动互联网，会出现“一个过剩，两个不足”，我会逐个分析并试着给出一些建议。</p>
<h6 id="UI-工程师过剩"><a href="#UI-工程师过剩" class="headerlink" title="UI 工程师过剩"></a>UI 工程师过剩</h6><p>这一点是我老生常谈的了，首先要注意的是避免成为 API 调用工程师，因为这些 UI 方面的知识对个人价值的增长不是线性的，如果你还记得高中数学，请回忆一下 y =<br>ln(x) 这个函数的曲线。从零到写好 UITableView 给一个工程师带来的收益，远远不是从写好 UITableView 到写好 UIStackView 能比得上的。</p>
<p>就以 UIStackView 为例吧，先不说它从 iOS 9 才开始支持，而要想应用不支持 iOS 9，怕是要等到猴年马月了。就说它提供的功能，虽然简化了已有场景，但这个功能完全可以通过封装已有的组件来实现，相信很多大型项目都有，为什么还要费力气去兼容版本，以及再学习一个新的 API 呢？人的精力是有限的，如果你总是追着苹果的脚步，每年补 WWDC 上那些新坑和老债，那么视野就永远只能停留在 iOS 中了。</p>
<p>我拒绝追随 WWDC 的另一个原因是把自己的职业生涯押注在一个平台或者公司上，是极度不明智，也是极度危险的，即使这是苹果。上半年的时候我们小组招聘，我负责筛选了一批简历，其中有一位已经三十多岁，十年经验的程序员，他的简历让我感触良多。他本科毕业后就在诺基亚负责塞班系统的研发，大概相当于今天的苹果公司负责写 iOS 系统，看起来光环非常明显了，后来先后去过两家生产安卓手机的大厂，现在又申请 iOS 的程序员职位。在他的简历里，我看不到一个十年程序员该有的技术和思维深度，只有一个又一个古老名词的堆砌。因此，我衷心的建议各位读者，在你学习一个新技术以前，不妨先花十秒钟猜测一下，这个技术三年后，五年后，十年后会是什么样？猜不准没问题，如果有了明确的答案，还往坑里踩，就只能怪自己了。</p>
<p>当然，我并不是全盘否定 UI 的技术，毕竟程序员拿工资是因为你能为公司创造效益，所以该做的需求还是要 100% 高质量的完成，也就是说该学的还是要学。但如果是业余时间的自我提高就另说了，我的建议是找一个 UI 组件认真学习下，把官方文档读一遍，自己写个 Demo 理清楚知识脉络。我并不指望这个组件能真的帮上什么忙，但一个合格的程序员，也从来不应该只做自己会做的事。合格的程序员应该要有举一反三，快速学习的能力，所以只要找一个组件熟悉一下整个学习流程就可以了。了解一个 UIStackView 的前因后果以及如何兼容低版本是一个程序员好学的体现，但如果一个程序员只是每年学习新的控件，又不能在项目中取得较大的收益，就只能说是学习方法有问题了。</p>
<p>从技术角度来说，苹果的 UI 布局是我见过最落后的方式，无论是前端的 HTML 还是安卓的 XML 都要比 iOS 先进。这主要是因为把布局信息耦合进二进制代码非常不合理，而且一定程度上损失了动态化和解耦的能力。如果 iOS 的布局方案将来有较大幅度的优化，我可以断言绝对不是 Autolayout 这样的鸡肋工具，或者 Storyboard 这种傻瓜工具。相比之下我更看好一种统一的，能够跨端布局技术，比如 flexbox 规范。</p>
<h5 id="专业技能人才不足"><a href="#专业技能人才不足" class="headerlink" title="专业技能人才不足"></a>专业技能人才不足</h5><p>这里的专业技能指的是移动端这个大话题中里比较垂直的知识领域，大概包含以下几个方面：</p>
<h6 id="图像／视频处理"><a href="#图像／视频处理" class="headerlink" title="图像／视频处理"></a>图像／视频处理</h6><p>随着网络基础设施的普及，以及流量费用的大幅度降低，4G 基本上已经全面商用了，如果说移动端前五年是文字为主，图片视频为辅的话，在接下来的几年中，用户对高质量图片和视频的要求会日益增长。</p>
<p>由于我对这个领域并不了解，所以能够推荐的并不多，在我印象中，OpenGL 这种跨平台的引擎，计算机图形学的知识，视频编码与协议都是可以花时间研究的，现在有很多优秀的创业公司也急需这类人才。严格来说这些知识都不算移动互联网方面的知识了，所以门槛较高，但门槛这东西是个双刃剑。它会增加你的学习难度，但一旦你掌握了这门知识，门槛又会变成你个人价值的护城河。</p>
<p>我格外想要声明的是，CoreAnimation 这类的东西如果不是工作中强制要用，一般就别碰了，就像没人会傻到用 SpriteKit/SceneKit 去写游戏一样，这种 API 密集型，又不能跨端的库是没有前途的，真正有价值的动画一定是用一套统一的 DSL（领域特定语言）去实现，然后导出到各个平台上，所以开发者一定要多在动画的原理上下功夫，比如了解矩阵变换，线性代数这些，而不是把时间浪费在阅读官方文档上。</p>
<h6 id="把事情搞定"><a href="#把事情搞定" class="headerlink" title="把事情搞定"></a>把事情搞定</h6><p>在任何时候，一个靠谱的，能把事情搞定的工程师一定是受到欢迎的。靠谱是一个很虚的概念，我以最近的观察简单的举两个例子。</p>
<p>当项目比较大了以后，随着参与开发的人数越来越多，与技术无关的事情也会占据越来越大的比重。比如协调和沟通，测试，后端的人力什么时候到位，某个 Bug 如何追查复现并定位，新版本的需求哪些可以做，哪些缓一缓，能做的需求什么时候提测，什么时候灰度，什么时候正式发版？这些事情很琐碎，需要很强的责任心，而且在求职的时候比较难体现出来（除非有知名的 app 背书），但相应的好处是绩效一般会比较不错，而且在领导心目中的印象会比较好。技术不敏感的同学也可以考虑这条路线。</p>
<p>虽然我一向对 UI 开发很不屑，但事实是如果一个 iOS 工程师能把各个系统控件玩得很溜，而且有自己对控件的积累和封装，再了解一些性能优化方面的知识，找到一个相当满意的 iOS 职位也不会太难。如果你走的是这种传统的 iOS 开发路线，不妨问问自己，每年的 WWDC 都看完了没，移动开发的各种工具是否都能熟练使用（比如 Reveal，Charles 等），能不能熟练到任何复杂的页面，都能通过自己积累的组件在短时间内实现？然而根据我的观察，绝大多数应聘者的简历里博客都很少，更别提 Github 上面有持续迭代的代码了。这条路线的缺点是职业生涯天花板相对比较低，基本上到高级 iOS 工程师就为止了。</p>
<h6 id="逆向工程"><a href="#逆向工程" class="headerlink" title="逆向工程"></a>逆向工程</h6><p>研究逆向工程的作用不仅仅是破解 app，在我看来更多是学习底层的操作系统。在开发 app 的过程中，我们使用系统提供的库，调用 API 就可以实现需求，其中的过程完全是黑盒。而逆向工程的目的就是要开盒子，利用一些工具从二进制层面入手，反过来推测应用开发者的代码和逻辑。这其中会涉及到很多 C 语言，操作系统，编译原理方面的东西，相对来说门槛很高。逆向工程对企业对价值也很大， 因为大家都不希望自己被竞争对手一眼看穿，又对竞争对手对秘密颇感兴趣。</p>
<h5 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h5><p>以上是几个我目前能想到的，可以花时间研究的专业知识。这些知识大多是自成体系的，没有较长时间的积累，很难入门。这一点非常重要，因为很多知识看起来非常专业，门槛也很高，比如我下一节就会提到这样的例子，但这些知识我并不鼓励学习。区分的标准是，你学习的知识是一个知识点还是一个体系，如果你学习的只是知识点， 那么它只能是整个知识树上的枝枝丫丫，边边角角；如果你学习的是知识体系，就具备了衍生知识点的能力，也就是我反复强调的举一反三的能力。</p>
<p>上面举的三个例子都是我认为不容易遭到时间的淘汰，比较值得研究的话题。在这些领域上的投入可以理解为线性的，也就是一分耕耘，一分收获。</p>
<h5 id="全栈人才紧缺"><a href="#全栈人才紧缺" class="headerlink" title="全栈人才紧缺"></a>全栈人才紧缺</h5><p>这里的全栈没有明确的定义，并非前后端通吃才算是全栈。在我的理解中，只要是跨知识点的融合，都算是全栈，因为跨知识点的融合往往会产生 1 + 1 &gt; 2 的效果。往小了说，全栈可以减少大量浪费在沟通上的时间。往大了说，一个人了解的领域越多，他就越能把这些领域融合在一起，既能站在更高的角度思考问题，也能作为团队的领导者和融合剂。这也就意味着，掌握全栈知识对个人价值的影响是指数形势的，你了解的越多，价值就会越快的提高，职业天花板也会越高。</p>
<h6 id="别研究得太深"><a href="#别研究得太深" class="headerlink" title="别研究得太深"></a>别研究得太深</h6><p>我经常关注微信的技术博客，比如客户端通过修改 SQlite 代码达到了更好的性能，以及修复了一个非常诡异的内核崩溃问题，这体现了微信强大的技术能力，能够参与其中的工程师也一定收获颇大。BAT 这种级别的大厂其实有很多非常底层的黑科技，也会在各种大会和文章中对外介绍，然而我给大多数读者的建议是，当个新闻看看就可以了。人家研究得这么深是因为 KPI 指标有压力，你作为一个外人，如果也研究这么深只能说明你傻。</p>
<p>知识是有价值的，不仅价值各不相同，还受到规模的影响，作为微信来说，修复一个发生率极低的 crash，在过亿用户的基数下，很可能会减少几百万次崩溃，带来巨大的收益。然而这个收益，放在你的公司里，很可能就是 0。因此在选择自我提高方向时，一定要关注技术本身的价值，有些技术自身并不值钱，但经过公司规模的加成，就产生了相当大的价值，但这并不意味着你需要花时间学习它。尤其是某些无法形成体系，仅仅是独立知识点的技术，公司业务有需要，那为了工资得硬着头皮上，但如果自由时间里面还要花时间去学，就太浪费了。</p>
<p>我拒绝花时间了解这类技术的另一个原因在于，很多技术是与业务绑定的，有了核心知识，在业务需求的推动下，很容易就会诞生一个框架。比如应用组件化，很多公司都有自己的组件化库，其实实现原理也就是两大类，但发表到博客里面以后，就会有非常多的业务背景干扰读者的认知，如果读者追着这类文章看，是非常难从框架中剥离业务的干扰，直接挖掘基本原理的。因此大公司搞出来的某些框架，真的没有那么神秘，早期都是一个简陋的基础框架，当面对业务业务需求时，运用一些合理的编程思想，逐步迭代，最后发布了一个完善的版本，大可不必看得晕头转向以后妄自菲薄。</p>
<p>在之前面试的过程中，我也注意到很多应聘者其实对技术很感兴趣，经常刷微博上的文章，了解的也很多。但大多数情况下只知其然，不知其所以然。这是因为这些技术偏离了你的应用场景。以前我总为微博上的好技术无法在项目中落地感到纠结，后来我突然就明白了，这个思路就是错的，我应该挖掘公司项目的痛点，去微博，Google 等平台上的文章中寻找解决方案。所以我反对面向微博学习，应该要学一些更通用的技术，把技术与自己的项目结合起来，争取能在项目中落地，这比看十篇似懂非懂的技术文章还管用。</p>
<h6 id="大公司所谓的基础知识"><a href="#大公司所谓的基础知识" class="headerlink" title="大公司所谓的基础知识"></a>大公司所谓的基础知识</h6><p>上一节解释了为什么不要研究单独的几个底层知识点，除了这种知识，以及逆向工程这种自成体系的，求职者只要具备扎实的基础，牢牢掌握一些基础知识就可以了。很多人都会觉得大公司对底层的基础知识考察很严格，基础知识不表示底层，也不一定就很简单，它们通常是那些被框架做了一层封装，以至于如果不用心思考，很可能就会忽略的知识，但不了解这些知识会对你的思考产生较大的影响，也很容易栽进某个坑里。</p>
<p>除非是变态公司以偏题怪题刁难人为乐，或者无能面试官只会问自己懂的东西以外，正常的大公司面试都会考察一些比较基础的问题，如果你还是觉得题目太底层，只能说明自己看问题的角度还不够深刻。</p>
<p>大公司着重考察基础知识，在我看来有两大原因：首先，在比较大型的项目中，业务逻辑非常复杂，所以很少有人有精力去大量的检查并提高你的代码质量，这就要求工程师具备相当扎实的代码功底，无论是代码风格还是语言的掌握都不能有太多问题。这样 Code Review 的时候才能把精力放在业务检查上，代码风格一笔带过，偶尔提醒一下就可以了。</p>
<p>另一方面，基础知识决定一个人思考问题的深度和交流问题的角度。一个不懂计算机背景知识的程序员，看问题的方式经常是错误的，错误的思考方式也就决定了他很难走到正确的道路上，比如我的一个外行朋友曾经接手了一个用 C++ 实现的 GUI，他的第一个问题是“如何在 C++ 中把字符串加粗”，读者大可不必感到荒谬，因为很多人思考问题的方式也不见得高明，在高水平，有经验的程序员看来，也许同样是不可理喻的。大公司复杂的业务逻辑同样也意味着很少有人会耐心的给你讲解每一个名词，比如哈希表，并发，并行，编译，链接等等名词，如果你听不懂或者理解不正确，往往意味着交流上会存在一些障碍。</p>
<p>因此我的建议是：数据结构，操作系统，计算机网络中的基础知识一定要扎实，怎么扎实都不为过，因为它决定了你看问题时候的高度，深度和思路。</p>
<h5 id="让脚本取代-GUI"><a href="#让脚本取代-GUI" class="headerlink" title="让脚本取代 GUI"></a>让脚本取代 GUI</h5><p>脚本语言非常重要，绝对是提升工作效率的神器，我强烈建议每个客户端工程师都应该了解一些 Shell 脚本并且掌握 Python，Ruby 和 JS 中至少一门语言。</p>
<p>理论上来说没有什么是脚本语言做得到，Java 做不到的，但脚本语言最大的特点就是快，快到极点的那种快。对于一些极度简单的小需求，比如统计一个文件中某一列数字的平均数，我敢保证在我得出结果之前你肯定还来不及打开 Java 编辑器。</p>
<p>脚本语言的另一个特点是高度的自动化，只要 Unix 和 Linux 系统一天不死，shell 脚本就会永远存活，你学习的知识就永远不会过期，比如 awk 和 sed 这样的神器，年龄比我大得多，至今还非常实用，未来的 20 年也丝毫看不出淘汰的迹象。试问一下，有什么知识能比一个几十年不会过期，而且每天都能用上的知识更值得学习呢？由于 Shell 是距离操作系统最近的脚本，了解了它以后，很多复杂的操作都可以被自动化。比如想找到项目中无用的图片，也就是一行命令的事。</p>
<p>考虑到脚本语言极高的开发效率，很多对性能不敏感的框架都会选择用脚本语言来实现，比如 Node，Flask，Rails，mitmproxy 等等。作为一个大前端工程师，不能总是依赖后端工程师，否则没了后端就只能搞单机模式了。因此了解脚本语言还有助于我们快速上手后端框架，这绝对是应聘时的加分项。</p>
<p>当然，很多人也会抱怨，我们是 iOS 工程师，平时的工作也接触不到脚本语言，该如何学习并投入使用呢。我的建议有三个：</p>
<p>整理自己的痛点， 并尝试着用过脚本去解决，这对学习 Shell 有奇效<br>整理公司项目开发中的痛点，尝试着用脚本去解决，适合练习 Python，Ruby 和 JS<br>抛弃 GUI</p>
<p>GUI 诞生的目的是为了更好的显示信息，而不是成为技术残疾者的拐杖。举一个简单的例子，我发现很多人都装了很多编程效率方面的工具，比如 gitx，sourcetree，tower 之类的 git 工具，还有什么快速打开模拟器目录，Derived Data 目录的小工具，我觉得这实在是太愚蠢了。放着大好的学习 Git 和 shell 的机会不要，把时间浪费在了解一个软件的 GUI 上，我觉得是完全不能接受的。尤其是对于 git 来说，我建议多问问自己，学会的是 git 还是 sourcetree 的按钮，将来换一个 GUI 工具，毕生功力还剩几成？至于某些小工具，这种绝佳的练手机会，怎么能拱手相让给别的软件呢，尤其是脚本可以自动化，软件就几乎不可能了。</p>
<h6 id="学点前后端"><a href="#学点前后端" class="headerlink" title="学点前后端"></a>学点前后端</h6><p>我并不认为这一波移动互联网的寒潮是对移动端的否定，短期来看还没有设备能够取代手机。在我看来，它其实是 O2O 这种商业模式被证伪后，市场的自然反应。企业都认识到，移动端转型不是商业模式的救命稻草，所以为了节约成本，很多时候都是 Web 先行。这并不意味着移动端的需求没有了，只是现阶段存在着开发成本和收益之间的矛盾。目前移动端对传统行业的渗透还不够多，大一些的传统企业找外包，小一些的干脆就没有能力做了。</p>
<p>一方面，我认为随着框架，工具的日益完善，大前端开发的成本会持续下降，逼近业务复杂度本身。如果对前后端都有一定的了解，即使是做外包，也能以较低的人力和时间成本完成需求，比如熟悉 React Native 的开发者一个人就抵得上 iOS 和 安卓程序员各一人／毕竟大多数人工作还是为了钱，如果有稳定且较高的外包收入，工作也不是不能放弃。</p>
<p>另一方面，在与公司高 T 的聊天中，我了解到即使是大公司，对全栈也是有需求的。不是公司里的每个项目都是淘宝，微信和百度搜索，毕竟多一个人就多一份沟通成本，能够独立把前后端打通，负责整个项目的人，无论在哪里都会被抢着要。</p>
<p>然而这一切的前提都是有扎实的基础知识，比如对于大前端的开发来说，最重要的就是 HTTP 协议了，全栈不是全干，绝非读一篇 xxx 实战指南然后写几行 Demo 就算是入门的。因此一定要对框架背后的原理有深刻的了解，并且积累一定的实战经验才行。程序员应该是框架的主人，因为要节省时间，避免模板代码才选择框架，万万不能成为框架的奴隶，踩着框架的高跟鞋才能在需求的海洋中蹒跚两步，离开了 API 就不会写代码了。如果公司有业务需要，提供转岗的机会，而你又恰好有一定的基础和兴趣，不妨勇敢的尝试一下。否则就只能自己创造需求，比如找一个痛点并加以解决了。</p>
<h5 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h5><p>啰啰嗦嗦说了很多，其实总结下来没几点：</p>
<p>学习一个技术之前不妨先思考一下它在整个互联网体系中目前的位置，有什么样的未来，会对个人价值有多大的提高<br>数据结构，操作系统，编译原理，计算机网络这些基础知识不能丢，它决定了你看问题时候的高度，深度和思路<br>未来需要特定技术领域里的专才，更需要全栈，归根结底是需要最大化自己的价值。我个人的建议是掌握好脚本语言提高效率，打通前后端，这样无论在外包，独角兽创业公司还是大公司，都能独当一面<br>学习新技术时要避免好高骛远或者盲目迷信大厂，转发或艾特印象笔记提高不了自己，要结合实际场景，最重要的是要能落地！</p>
<p>© 著作权归作者所有</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文章出处，原创于 &lt;a href=&quot;https://HawkingOuYang.github.io/&quot;&gt;https://HawkingOuYang.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/HawkingOuYang
    
    </summary>
    
      <category term="iOS" scheme="https://HawkingOuYang.github.io/categories/iOS/"/>
    
    
      <category term="iOS" scheme="https://HawkingOuYang.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>Swift For TensorFlow</title>
    <link href="https://HawkingOuYang.github.io/2017/10/15/41_swift_tensorflow/"/>
    <id>https://HawkingOuYang.github.io/2017/10/15/41_swift_tensorflow/</id>
    <published>2017-10-14T16:00:00.000Z</published>
    <updated>2019-01-17T03:35:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章出处，原创于 <a href="https://HawkingOuYang.github.io/">https://HawkingOuYang.github.io/</a></p>
<p><a href="https://github.com/HawkingOuYang/" target="_blank" rel="external">我的GitHub</a></p>
<hr>
<p><a href="https://github.com/tensorflow/swift/blob/master/docs/WhySwiftForTensorFlow.md" target="_blank" rel="external">Why Swift for TensorFlow?</a></p>
<p><a href="https://github.com/tensorflow/swift/blob/master/docs/PythonInteroperability.md" target="_blank" rel="external">swift Python Interoperability</a></p>
<p><a href="http://pypl.github.io/PYPL.html" target="_blank" rel="external">PYPL PopularitY of Programming Language</a></p>
<p><a href="https://blog.csdn.net/RockfordWei/article/details/73525553#0-tsina-1-58503-397232819ff9a47a7b7e80a40613cfe1" target="_blank" rel="external">99行Swift编写人工智能图片识别服务器</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/33074882" target="_blank" rel="external">教程：用TensorFlow自制Taylor Swift识别器</a></p>
<p><a href="http://www.infoq.com/cn/articles/getting-started-with-tensorflow-on-ios" target="_blank" rel="external">深度学习指南：在iOS平台上使用TensorFlow</a></p>
<p><a href="https://blog.csdn.net/gravitylink/article/details/79798647" target="_blank" rel="external">TensorFlow for Swift 要开源了</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文章出处，原创于 &lt;a href=&quot;https://HawkingOuYang.github.io/&quot;&gt;https://HawkingOuYang.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/HawkingOuYang
    
    </summary>
    
      <category term="Swift" scheme="https://HawkingOuYang.github.io/categories/Swift/"/>
    
    
      <category term="Swift" scheme="https://HawkingOuYang.github.io/tags/Swift/"/>
    
  </entry>
  
  <entry>
    <title>Swift Server Side</title>
    <link href="https://HawkingOuYang.github.io/2017/09/12/40_swift_server_side/"/>
    <id>https://HawkingOuYang.github.io/2017/09/12/40_swift_server_side/</id>
    <published>2017-09-11T16:00:00.000Z</published>
    <updated>2019-01-17T03:35:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章出处，原创于 <a href="https://HawkingOuYang.github.io/">https://HawkingOuYang.github.io/</a></p>
<p><a href="https://github.com/HawkingOuYang/" target="_blank" rel="external">我的GitHub</a></p>
<hr>
<p><a href="https://github.com/PerfectlySoft/PerfectDocs/blob/master/guide.zh_CN/gettingStarted.md" target="_blank" rel="external">Perfect和Swift 快速上手</a></p>
<p><a href="https://github.com/PerfectlySoft/PerfectDocs/blob/master/guide.zh_CN/gettingStartedFromScratch.md" target="_blank" rel="external">Swift Server - Perfect 从模板项目开始</a></p>
<p><a href="https://blog.csdn.net/byeweiyang/article/details/80128908" target="_blank" rel="external">以Swift作为服务器的软件框架功能对比: Perfect, Vapor, Kitura, Zewo</a></p>
<p><a href="https://github.com/PerfectlySoft/Perfect-Python" target="_blank" rel="external">Perfect - Python</a></p>
<p><a href="https://segmentfault.com/a/1190000008572606" target="_blank" rel="external">Swift Web 开发之 Vapor - 入门（一）</a></p>
<p><a href="https://segmentfault.com/a/1190000008572624" target="_blank" rel="external">Swift Web 开发之 Vapor - 路由（二）</a></p>
<p><a href="https://segmentfault.com/a/1190000008575463" target="_blank" rel="external">Swift Web 开发之 Vapor - 模版 Leaf（三）</a></p>
<p><a href="https://github.com/vapor/vapor" target="_blank" rel="external">GitHub: vapor</a></p>
<p><a href="https://github.com/PerfectlySoft/Perfect" target="_blank" rel="external">GitHub: Perfect</a></p>
<p><a href="https://github.com/PerfectlySoft/PerfectDocs/blob/master/README.zh_CN.md" target="_blank" rel="external">Perfect 文档库</a></p>
<p><a href="https://github.com/pointfreeco/swift-web" target="_blank" rel="external">swift-web</a></p>
<p><a href="https://www.jianshu.com/p/b9aa012b0da7" target="_blank" rel="external">Swift Perfect服务器端的自动化部署</a></p>
<p><a href="https://blog.csdn.net/z123sen/article/details/80248345" target="_blank" rel="external">Swift Perfect 从零开始到阿里云ECS实际应用教程(一)</a></p>
<p><a href="https://blog.csdn.net/z123sen/article/details/80248373" target="_blank" rel="external">Swift Perfect 从零开始到阿里云ECS实际应用教程(二)</a></p>
<p><a href="https://blog.csdn.net/z123sen/article/details/80248509" target="_blank" rel="external">Swift Perfect 从零开始到阿里云ECS实际应用教程(三)</a></p>
<p><a href="https://blog.csdn.net/z123sen/article/details/80248667" target="_blank" rel="external">Swift Perfect 从零开始到阿里云ECS实际应用教程(四)</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文章出处，原创于 &lt;a href=&quot;https://HawkingOuYang.github.io/&quot;&gt;https://HawkingOuYang.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/HawkingOuYang
    
    </summary>
    
      <category term="Swift" scheme="https://HawkingOuYang.github.io/categories/Swift/"/>
    
    
      <category term="Swift" scheme="https://HawkingOuYang.github.io/tags/Swift/"/>
    
  </entry>
  
  <entry>
    <title>Python</title>
    <link href="https://HawkingOuYang.github.io/2017/08/14/38_Life_is_short_you_need_Python/"/>
    <id>https://HawkingOuYang.github.io/2017/08/14/38_Life_is_short_you_need_Python/</id>
    <published>2017-08-13T16:00:00.000Z</published>
    <updated>2019-01-17T03:35:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章出处，原创于 <a href="https://HawkingOuYang.github.io/">https://HawkingOuYang.github.io/</a></p>
<p><a href="https://github.com/HawkingOuYang/" target="_blank" rel="external">我的GitHub</a></p>
<hr>
<p>机器学习：</p>
<p><a href="https://github.com/tensorflow" target="_blank" rel="external">TensorFlow</a></p>
<p>torch</p>
<p>theano</p>
<p>Caffe</p>
<p>mxnet</p>
<p>苹果官方：<a href="https://developer.apple.com/machine-learning/" target="_blank" rel="external">https://developer.apple.com/machine-learning/</a><br>Neural Network: <a href="http://playground.tensorflow.org" target="_blank" rel="external">http://playground.tensorflow.org</a></p>
<p>图片识别：<a href="http://clarifai.com/demo" target="_blank" rel="external">http://clarifai.com/demo</a><br>语音识别paper：<a href="https://blog.acolyer.org/2016/04/19/" target="_blank" rel="external">https://blog.acolyer.org/2016/04/19/</a><br>语音识别应用：<a href="https://v.qq.com/x/page/q035357zsxx.html" target="_blank" rel="external">https://v.qq.com/x/page/q035357zsxx.html</a><br>机器翻译（google）<br>图片生成：<a href="https://arxiv.org/pdf/1605.05396v2.pdf" target="_blank" rel="external">https://arxiv.org/pdf/1605.05396v2.pdf</a><br>图片生成应用，阿里“鲁班”</p>
<p>来自硅谷的终身学习平台：<a href="https://www.bittiger.io/" target="_blank" rel="external">https://www.bittiger.io/</a>    <a href="http://community.bittiger.io/" target="_blank" rel="external">http://community.bittiger.io/</a><br>数据科学家之路：<a href="https://lenadroid.github.io/posts/machine-learning-fsharp-accorddotnet.html" target="_blank" rel="external">https://lenadroid.github.io/posts/machine-learning-fsharp-accorddotnet.html</a></p>
<p>Python的编程利器：<a href="http://jupyter.org/install.html" target="_blank" rel="external">http://jupyter.org/install.html</a><br>在浏览器写Python：<a href="https://try.jupyter.org/" target="_blank" rel="external">https://try.jupyter.org/</a><br>pip install wheel<br>pip install panda<br>pip install matplotlib<br>pip install scipy</p>
<p>import pandas as pd<br>import matplotlib.pyplot as plt          # plotting<br>import numpy as np                       # dense matrices<br>from scipy.sparse import csr_matrix      # sparse matrices<br>%matplotlib inline</p>
<p>df = pd.read_csv(‘1111.csv’)</p>
<p>df</p>
<p>爬虫<br><a href="https://movie.douban.com/subject/26363254/" target="_blank" rel="external">https://movie.douban.com/subject/26363254/</a><br>pip install -U kaggle-cli<br>pip install –upgrade html5lib==1.0b8<br>pip install beautifulsoup4<br>pip install request</p>
<p>from bs4 import BeautifulSoup<br>import requests</p>
<p>response = requests.get(‘<a href="https://movie.douban.com/subject/26363254/" target="_blank" rel="external">https://movie.douban.com/subject/26363254/</a>‘)</p>
<p>bs = BeautifulSoup(response.text, ‘lxml’)</p>
<p>name = bs.find(‘span’, attrs={‘property’:’v:itemreviewed’}).text<br>score = bs.find(‘strong’, attrs={‘property’:’v:average’}).text<br>sumary = bs.find(‘div’, id=’link-report’).text.strip()</p>
<p>print(name, score, sumary)</p>
<p>机器学习 - 线性回归<br>pip install sklearn</p>
<p>import numpy as np                       # dense matrices<br>import matplotlib.pyplot as plt          # plotting<br>%matplotlib inline</p>
<p>x = np.linspace(1,10,20)<br>a = np.random.randint(1,10,20)</p>
<p>y = x * 4 + a</p>
<p>x,a,y</p>
<p>plt.plot(x,y,’o’)</p>
<p>from sklearn.linear_model import LinearRegression</p>
<p>model = LinearRegression()<br>model.fit(x.reshape(20,1), y.reshape(20,1))</p>
<p>model.predict(6)</p>
<p>model.coef_</p>
<p>model.intercept_</p>
<h1 id="y-kx-b"><a href="#y-kx-b" class="headerlink" title="y = kx + b"></a>y = kx + b</h1><p>3.82222222 * 6 + 5.87777778</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文章出处，原创于 &lt;a href=&quot;https://HawkingOuYang.github.io/&quot;&gt;https://HawkingOuYang.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/HawkingOuYang
    
    </summary>
    
      <category term="Python" scheme="https://HawkingOuYang.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="https://HawkingOuYang.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>面向 Web 开发者的 HTML、CSS 与 Javascript 课程</title>
    <link href="https://HawkingOuYang.github.io/2016/10/23/33_coursera-WebDev-HTML-CSS-Javascript/"/>
    <id>https://HawkingOuYang.github.io/2016/10/23/33_coursera-WebDev-HTML-CSS-Javascript/</id>
    <published>2016-10-22T16:00:00.000Z</published>
    <updated>2019-01-17T03:35:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章出处，原创于 <a href="https://HawkingOuYang.github.io/">https://HawkingOuYang.github.io/</a></p>
<p><a href="https://github.com/HawkingOuYang/" target="_blank" rel="external">我的GitHub</a></p>
<hr>
<p>公开课：面向 Web 开发者的 HTML、CSS 与 Javascript 课程<br><a href="https://www.coursera.org/learn/html-css-javascript-for-web-developers" target="_blank" rel="external">https://www.coursera.org/learn/html-css-javascript-for-web-developers</a></p>
<p>运行代码： <a href="https://jsfiddle.net/" target="_blank" rel="external">https://jsfiddle.net/</a>  &rarr;  把web代码转化成链接，例如：<a href="https://jsfiddle.net/uucc0q41/" target="_blank" rel="external">https://jsfiddle.net/uucc0q41/</a></p>
<p><a href="http://codepen.io/" target="_blank" rel="external">http://codepen.io/</a>  &rarr;  把web代码转化成链接，例如： <a href="http://codepen.io/HawkingOuYang/pen/XjOpyB" target="_blank" rel="external">http://codepen.io/HawkingOuYang/pen/XjOpyB</a></p>
<p><a href="https://css-tricks.com/" target="_blank" rel="external">https://css-tricks.com/</a>  &rarr;  前端 教程、问答 社区</p>
<p>HTML：Hyper Text Markup Language</p>
<p>HyperText, is text which contains links to other texts, i.e. one document points to another document which points to a bunch of other documents.</p>
<p>Hypermedia: video, audio, etc, is just an extension of hypertext.</p>
<p>Markup, means to mark sth up, to annotate, to tell the browser or other machine what the content is and that’s what HTML does, by wrapping the content in some markup languages like tags.</p>
<p>HTML —&gt; <strong>Structure</strong>, means what components does the HTML document has, for example, heading, paragraphs, footer, BUT does NOT tell you anything about how these components are visually laid out, NO color, NO font, NO size. —&gt; Annotates content, Defines document structure. </p>
<p>CSS —&gt; <strong>Style</strong>, color, style, font.</p>
<p>Javascript —&gt; <strong>Behavior</strong>, functionality.</p>
<p>W3C(World Wide Web Consortium) —&gt; HTML5(Standard)<br>WHATWG (Web Hypertext Application Technology Working Group) —&gt; HTML(evolving)</p>
<p>html标准 参考资料：</p>
<p><a href="https://www.w3.org/TR/html5/" target="_blank" rel="external">https://www.w3.org/TR/html5/</a></p>
<p><a href="http://caniuse.com/" target="_blank" rel="external">http://caniuse.com/</a></p>
<p><a href="https://validator.w3.org/#validate_by_url" target="_blank" rel="external">https://validator.w3.org/#validate_by_url</a></p>
<p><a href="http://www.w3schools.com/browsers/browsers_stats.asp" target="_blank" rel="external">http://www.w3schools.com/browsers/browsers_stats.asp</a></p>
<p>&lt;!DOCTYPE html&gt;</p>
<p>historical reason, without  &lt;!DOCTYPE html&gt;  mean your web page NOT follow<br>the HTML standard,<br>which results in a bit messed up, layout won’t be quite right, styles a bit well quirky.<br>—&gt; noncompliant pages were rendered in <code>quirks mode</code>, while compliant pages were rendered in <code>standards mode</code>,<br>SO, always use the simple HTML5 doctype declaration.</p>
<p>工具：<br>chrome<br>sublime<br>git<br>node<br>npm<br>browsersync (npm install -g browser-sync)</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">➜  test_site <span class="attribute">git</span>:(文稿+音乐) ✗ browser-sync start --server --directory --files <span class="string">"*"</span></div><div class="line">[BS] Access <span class="attribute">URLs</span>:</div><div class="line"> --------------------------------------</div><div class="line">       <span class="attribute">Local</span>: <span class="attribute">http</span>:<span class="comment">//localhost:3002</span></div><div class="line">    <span class="attribute">External</span>: <span class="attribute">http</span>:<span class="comment">//192.168.1.108:3002</span></div><div class="line"> --------------------------------------</div><div class="line">          <span class="attribute">UI</span>: <span class="attribute">http</span>:<span class="comment">//localhost:3003</span></div><div class="line"> UI <span class="attribute">External</span>: <span class="attribute">http</span>:<span class="comment">//192.168.1.108:3003</span></div><div class="line"> --------------------------------------</div><div class="line">[BS] Serving files <span class="attribute">from</span>: ./</div><div class="line">[BS] Watching files...</div></pre></td></tr></table></figure>
<p><img src="http://7xpc28.com1.z0.glb.clouddn.com/coursera-WebDev-HTML-CSS-Javascript_1.png" alt=""><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/coursera-WebDev-HTML-CSS-Javascript_2.png" alt=""><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/coursera-WebDev-HTML-CSS-Javascript_3.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文章出处，原创于 &lt;a href=&quot;https://HawkingOuYang.github.io/&quot;&gt;https://HawkingOuYang.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/HawkingOuYang
    
    </summary>
    
      <category term="WebDev" scheme="https://HawkingOuYang.github.io/categories/WebDev/"/>
    
    
      <category term="WebDev" scheme="https://HawkingOuYang.github.io/tags/WebDev/"/>
    
  </entry>
  
  <entry>
    <title>iOS中 bitcode 的故事</title>
    <link href="https://HawkingOuYang.github.io/2016/10/22/35_iOS-bitcode/"/>
    <id>https://HawkingOuYang.github.io/2016/10/22/35_iOS-bitcode/</id>
    <published>2016-10-21T16:00:00.000Z</published>
    <updated>2019-01-17T03:35:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章出处，原创于 <a href="https://HawkingOuYang.github.io/">https://HawkingOuYang.github.io/</a></p>
<p><a href="https://github.com/HawkingOuYang/" target="_blank" rel="external">我的GitHub</a></p>
<hr>
<h5 id="遇见问题：bitcode"><a href="#遇见问题：bitcode" class="headerlink" title="遇见问题：bitcode"></a>遇见问题：bitcode</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ld: bitcode bundle could not be generated because '/Users/OYXJ/Desktop/HomeTime/app/trunk/HomeTime_mobileUI/Project/Src/Library/SDKs/libLeTVLoginSDK/libLeTVLoginSDK.a(Pods-LeTVLoginSDK-dummy.o)' was built without full bitcode. All object files and libraries for bitcode must be generated from Xcode Archive or <span class="keyword">Install</span> <span class="keyword">build</span> <span class="keyword">for</span> architecture arm64</div><div class="line">clang: <span class="keyword">error</span>: linker command <span class="keyword">failed</span> <span class="keyword">with</span> <span class="keyword">exit</span> code <span class="number">1</span> (<span class="keyword">use</span> -v <span class="keyword">to</span> see invocation)</div><div class="line"></div><div class="line">ld: bitcode bundle could <span class="keyword">not</span> be <span class="keyword">generated</span> because <span class="string">'/Users/OYXJ/Desktop/HomeTime/app/trunk/HomeTime_mobileUI/CustomFramework/CAbstractManager.framework/CAbstractManager'</span> was built <span class="keyword">without</span> <span class="keyword">full</span> bitcode. All frameworks <span class="keyword">and</span> dylibs <span class="keyword">for</span> bitcode must be <span class="keyword">generated</span> <span class="keyword">from</span> Xcode <span class="keyword">Archive</span> <span class="keyword">or</span> <span class="keyword">Install</span> <span class="keyword">build</span> <span class="keyword">for</span> architecture armv7</div><div class="line">clang: <span class="keyword">error</span>: linker command <span class="keyword">failed</span> <span class="keyword">with</span> <span class="keyword">exit</span> code <span class="number">1</span> (<span class="keyword">use</span> -v <span class="keyword">to</span> see invocation)</div></pre></td></tr></table></figure>
<p>检验是否支持bitcode</p>
<p>针对于静态链接库.framework文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">otool <span class="_">-l</span> libWeiboSDK.a | grep LLVM</div></pre></td></tr></table></figure></p>
<p>针对于静态链接库.a文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">otool -arch armv7 <span class="_">-l</span> xxxx.a | grep __bitcode | wc <span class="_">-l</span></div></pre></td></tr></table></figure></p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">I was able <span class="built_in">to</span> fix this <span class="keyword">by</span> adding <span class="string">"-fembed-bitcode"</span> <span class="built_in">to</span> Other C Flags <span class="keyword">of</span> <span class="keyword">the</span> project I am building <span class="keyword">a</span> static lib <span class="keyword">of</span>. </div><div class="line">It will give you <span class="keyword">a</span> warning because <span class="keyword">a</span> <span class="keyword">normal</span> build adds <span class="string">"-fembed-bitcode-marker"</span> but -fembed-bitcode takes precedence over <span class="keyword">the</span> dummy marker.</div><div class="line"></div><div class="line">需要在所有的.<span class="keyword">a</span>库在bundlsetting Other C Flags 添加-fembed-bitcode 或者你打包.<span class="keyword">a</span>的编译添加上此选项。</div></pre></td></tr></table></figure>
<p><a href="http://www.cocoachina.com/ios/20151201/14432.html" target="_blank" rel="external">Bitcode适配指南</a></p>
<p>这个方法已经过时了:<br><a href="https://blog.andyet.com/2015/10/20/building-webrtc-with-bitcode/" target="_blank" rel="external">Building WebRTC with Bitcode</a>,<br>估计要用官方的方法:<br><a href="https://codereview.webrtc.org/2478663002" target="_blank" rel="external">WebRTC  Enable bitcode on iOS</a><br>参考：<br><a href="https://bugs.chromium.org/p/webrtc/issues/detail?id=5085&amp;can=1&amp;q=bitcode&amp;colspec=ID%20Pri%20M%20ReleaseBlock%20Component%20Status%20Owner%20Summary" target="_blank" rel="external">chromium.org</a></p>
<figure class="highlight smali"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">最近才提交的Message was sent while issue was closed.</div><div class="line">On 2016/11/09 12:58:23, commit-bot: I haz the power wrote:</div><div class="line">Patchset 2 (id:??) landed as</div><div class="line">https://crrev.com/592baaf89aaf79245a55bfd3dbf47371b486cd03</div><div class="line">Cr-Commit-Position: refs/heads/master@&#123;<span class="comment">#14997&#125;</span></div><div class="line"></div><div class="line">Can you<span class="built_in"> check </span>that this doesn't break the framework builder?</div></pre></td></tr></table></figure>
<h5 id="解释问题：bitcode"><a href="#解释问题：bitcode" class="headerlink" title="解释问题：bitcode"></a>解释问题：bitcode</h5><p>Xcode开启bitcode，然后archive，到处ipa之前，提示如下：<br><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-bitcode-Xcode-archive-aboutBitcode.jpg" alt=""></p>
<p>.xcarchive 文件的目录结构(注意不要泄漏符号文件dSYM)，如图：<a href="https://en.wikipedia.org/wiki/Fat_binary#Apple.27s_Universal_binary" target="_blank" rel="external">Fat_binary</a><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-bitcode-Xcode-archive-appInfo.png" alt=""></p>
<p><a href="http://stackoverflow.com/questions/31088618/impact-of-xcode-build-options-enable-bitcode-yes-no" target="_blank" rel="external">Impact of Xcode build options “Enable bitcode” Yes/No</a></p>
<p>What is bitcode ？</p>
<p>bitcode 是趋势，不可避免 要支持bitcode ——&gt; 根本原因在于：app越做越大，越来越多样化，硬件的cpu架构也比较多，很多用户的手机只有16G，所以要给app瘦身(减小安装包的大小)。总之：bitcode是针对于 硬件平台 (cpu架构，模拟器 x86 32 and 64 bit modes，设备：arm6/arm7/arm7s/arm64 等；屏幕尺寸 以及 分辨率@1x, @2x, @3x 等）；软件平台（操作系统 iOS8、iOS9、iOS10 等)，编译器 (LLVM、gcc、g++ 等)</p>
<p>For distribution in the App Store, Apple will create separate versions of your app for each machine architecture (arm6/arm7/arm7s/arm64) instead of one app with a fat binary. This means the app installed on iOS devices will be smaller.</p>
<p><a href="http://stackoverflow.com/questions/13082149/in-xcode-project-target-build-settings-what-is-mach-o-type" target="_blank" rel="external">In Xcode project target build settings, What is Mach-O Type?</a><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-bitcode-Xcode-Mach-O-Type.png" alt=""></p>
<h5 id="可行方案：bitcode"><a href="#可行方案：bitcode" class="headerlink" title="可行方案：bitcode"></a>可行方案：bitcode</h5><p>们没针对所有的硬件平台编译<br>armv7 arm64 armv7s</p>
<p>debug是可以编过的 应该就是没编译所有硬件架构导致的</p>
<p>我让他们重新编译一下</p>
<p>release是全平台的</p>
<p>你们应该都是debug</p>
<p>我是release模式下</p>
<p><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-bitcode_Xcode_archive_AppStoreReply.png" alt=""></p>
<p><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-bitcode-Xcode-archive-validate-architecture.jpg" alt=""></p>
<p><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-bitcode-Xcode-archive-WebRTC-supportBitcode.jpg" alt=""></p>
<p><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-bitcode-Xcode-buildForAllArchitecture1.png" alt=""></p>
<p><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-bitcode-Xcode-buildForAllArchitecture2.png" alt=""></p>
<p><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-bitcode-Xcode-buildForAllArchitecture3.png" alt=""></p>
<h5 id="方案总结：bitcode"><a href="#方案总结：bitcode" class="headerlink" title="方案总结：bitcode"></a>方案总结：bitcode</h5><p>1、bitcode 是趋势，不可避免 要支持bitcode ——&gt; 根本原因在于：app越做越大，越来越多样化，很多用户的手机只有16G，所以要给app瘦身(减小安装包的大小)<br>    Impact of Xcode build options “Enable bitcode” Yes/No<br>    <a href="http://stackoverflow.com/questions/31088618/impact-of-xcode-build-options-enable-bitcode-yes-no" target="_blank" rel="external">http://stackoverflow.com/questions/31088618/impact-of-xcode-build-options-enable-bitcode-yes-no</a></p>
<p>2、开启bitcode没法看crash的函数栈 ——&gt;  之前存在这个问题，现在已经有成熟的解决方案。<br>    Downloading Bitcode dSYMs<br>    <a href="https://docs.fabric.io/apple/crashlytics/missing-dsyms.html" target="_blank" rel="external">https://docs.fabric.io/apple/crashlytics/missing-dsyms.html</a></p>
<p>3、要能支持 但暂时不需要开启bitcode ——&gt;  CCoreData.framework  CAbstractManager.framework 要能支持，这两个独立的工程 编译的时候 就得打开 bitcode</p>
<p>4、三方库 以后能不能支持bitcode  ——&gt; 三方库  也是 在 HomeTime工程里编译的，所以 能 支持 bitcode.</p>
<p>5、WebRTC.framework  LeFaceSDK.framework  应该也能支持(这两个工程编译之前 打开 bitcode)，但实际情况 需要 试验一把。</p>
<p>6、AppStore 审核 应该会过，Apple既然 这么提倡，我们 按照 Apple的要求做了，审核 应该会过。</p>
<p>7、为了 加快 这次的 送审 速度，我已经  把 CCoreData.framework  CAbstractManager.framework 改成 不支持 bitcode，并且提交SVN。</p>
<p>fabric</p>
<p>Downloading Bitcode dSYMs<br><a href="https://docs.fabric.io/apple/crashlytics/missing-dsyms.html" target="_blank" rel="external">https://docs.fabric.io/apple/crashlytics/missing-dsyms.html</a></p>
<p>For Bitcode enabled builds that have been released to the iTunes store or submitted to TestFlight, Apple generates new dSYMs. You’ll need to download the regenerated dSYMs from Xcode and then upload them to Crashlytics so that we can symbolicate crashes.</p>
<p>dSYMs for Bitcode enabled apps can be downloaded from Xcode’s Organizer. Select the specific Archive of your app and then hit the “Download dSYMs…” button which will insert the Bitcode compiled dSYMs into the original Archive. Then, manually upload the dSYM to Crashlytics via the “Uploading Missing Bitcode dSYM” instructions.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文章出处，原创于 &lt;a href=&quot;https://HawkingOuYang.github.io/&quot;&gt;https://HawkingOuYang.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/HawkingOuYang
    
    </summary>
    
      <category term="iOS" scheme="https://HawkingOuYang.github.io/categories/iOS/"/>
    
    
      <category term="iOS" scheme="https://HawkingOuYang.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS中 timestamp、timeInterval 的故事</title>
    <link href="https://HawkingOuYang.github.io/2016/10/22/34_timestamp-timeInterval-in-iOS/"/>
    <id>https://HawkingOuYang.github.io/2016/10/22/34_timestamp-timeInterval-in-iOS/</id>
    <published>2016-10-21T16:00:00.000Z</published>
    <updated>2019-01-17T03:35:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章出处，原创于 <a href="https://HawkingOuYang.github.io/">https://HawkingOuYang.github.io/</a></p>
<p><a href="https://github.com/HawkingOuYang/" target="_blank" rel="external">我的GitHub</a></p>
<hr>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* HTmAccountEntity.h */</span></div><div class="line"></div><div class="line"><span class="meta">@interface</span> <span class="string">HTmAccountEntity :</span> BaseManagedObject</div></pre></td></tr></table></figure>
<p>因为：NSDate 是 相对于 01.01.2001 00:00:00 GMT  的 时间差值(即 NSTimeInterval, 类型 double)</p>
<p>所以：</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//! 视频通话SDK的信令登入，即 lecall的Login，成功登入的时间戳。(@integerValue)</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSNumber</span> *lecallLoginTimestamp;</div></pre></td></tr></table></figure>
<p>改成</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//! 视频通话SDK的信令登入，即 lecall的Login，成功登入的时间，在数据库中的值，形如 499238502.374417</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSDate</span> *lecallLoginTimestamp;</div></pre></td></tr></table></figure>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* </span></div><div class="line"> 成功登录的时间，在数据库中的值，形如 499238502.374417</div><div class="line"> </div><div class="line"> 因为：NSDate 是 相对于 01.01.2001 00:00:00 GMT  的 时间差值(即 NSTimeInterval, 类型 double)</div><div class="line"> */</div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSDate</span>  *loginTime;</div><div class="line"></div><div class="line"><span class="comment">/*</span></div><div class="line"> 视频通话SDK的信令登入，即 lecall的Login，成功登入的时间，在数据库中的值，形如 499238502.374417</div><div class="line"> </div><div class="line"> 因为：NSDate 是 相对于 01.01.2001 00:00:00 GMT  的 时间差值(即 NSTimeInterval, 类型 double)</div><div class="line"> */</div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSDate</span> *lecallLoginTimestamp;</div></pre></td></tr></table></figure>
<p>为什么呢？</p>
<p><img src="http://7xpc28.com1.z0.glb.clouddn.com/timestamp-timeInterval-in-iOS-1.png" alt=""><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/timestamp-timeInterval-in-iOS-2.png" alt=""></p>
<p><img src="http://7xpc28.com1.z0.glb.clouddn.com/timestamp-timeInterval-in-iOS-3.png" alt=""></p>
<p>注意： NSDate.h 文件中，</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">2001<span class="selector-class">.1</span><span class="selector-class">.1</span> 00<span class="selector-pseudo">:00</span> <span class="selector-tag">UTC</span></div><div class="line"><span class="selector-id">#define</span> <span class="selector-tag">NSTimeIntervalSince1970</span>  978307200<span class="selector-class">.0</span></div><div class="line">			                     499238502<span class="selector-class">.374417</span></div></pre></td></tr></table></figure>
<p>978307200.0 刚好是 2001-1970=30年，<br>499238502.374417 大约为 2016-2001=15年。<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) <span class="built_in">NSString</span> *description;</div><div class="line">- (<span class="built_in">NSString</span> *)descriptionWithLocale:(<span class="keyword">nullable</span> <span class="keyword">id</span>)locale;</div></pre></td></tr></table></figure></p>
<p>简短地说：</p>
<p>iOS中的NSDate对象，本质就是timeInterval(时间差)，和我们平时说的timestamp(时间戳)不同的是，NSDate选取的起点是2001.1.1 00:00 UTC</p>
<p>有此为证：</p>
<p><img src="http://7xpc28.com1.z0.glb.clouddn.com/timestamp-timeInterval-in-iOS-4.png" alt=""><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/timestamp-timeInterval-in-iOS-5.png" alt=""></p>
<p>GMT UTC<br>除了定义经度，格林尼治子午线亦曾被用作时间的标准。理论上来说，格林尼治标准时间的正午是指当太阳横穿格林尼治子午线时的时间。然而因为地球自转速度并不规则，现在的标准时间已由协调世界时取代。<br><a href="https://zh.wikipedia.org/wiki/%E6%9C%AC%E5%88%9D%E5%AD%90%E5%8D%88%E7%B7%9A" target="_blank" rel="external">https://zh.wikipedia.org/wiki/%E6%9C%AC%E5%88%9D%E5%AD%90%E5%8D%88%E7%B7%9A</a></p>
<p>Why is NSTimeIntervalSince1970 defined as a fixed double? </p>
<p>#define NSTimeIntervalSince1970  978307200.0</p>
<p>It seems to be the UNIX timestamp of 01.01.2001 00:00:00 GMT.<br>What is it for and why is it a fixed number? </p>
<p>It’s because NSDate’s timeIntervalSinceReferenceDate uses 1 January 2001, GMT as its reference date while other places typically use 1970 (the “Unix epoch”).<br>It is useful if you want to compare the current time with time stored as an interval since the earlier reference date.<br><a href="http://stackoverflow.com/questions/22781535/why-is-nstimeintervalsince1970-defined-as-a-fixed-double" target="_blank" rel="external">http://stackoverflow.com/questions/22781535/why-is-nstimeintervalsince1970-defined-as-a-fixed-double</a></p>
<p>The Difference Between GMT and UTC<br><a href="https://www.timeanddate.com/time/gmt-utc-time.html" target="_blank" rel="external">https://www.timeanddate.com/time/gmt-utc-time.html</a></p>
<p>Greenwich Mean Time (GMT) is often interchanged or confused with Coordinated Universal Time (UTC). But GMT is a time zone and UTC is a time standard.</p>
<p>Although GMT and UTC share the same current time in practice, there is a basic difference between the two:</p>
<ul>
<li>GMT is a time zone officially used in some European and African countries. The time can be displayed using both the 24-hour format (0 - 24) or the 12-hour format (1 - 12 am/pm).</li>
<li>UTC is not a time zone, but a time standard that is the basis for civil time and time zones worldwide. This means that no country or territory officially uses UTC as a local time.</li>
</ul>
<p>UTC, GMT and Daylight Saving Time<br>Neither UTC nor GMT ever change for Daylight Saving Time (DST). However, some of the countries that use GMT switch to different time zones during their DST period.<br>For example, the United Kingdom is not on GMT all year, it uses British Summer Time (BST), which is one hour ahead of GMT, during the summer months.</p>
<p>更有意思的图片，可以得知：</p>
<p><img src="http://7xpc28.com1.z0.glb.clouddn.com/timestamp-timeInterval-in-iOS-6.png" alt=""><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/timestamp-timeInterval-in-iOS-7.png" alt=""><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/timestamp-timeInterval-in-iOS-9.PNG" alt=""><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/timestamp-timeInterval-in-iOS-8.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文章出处，原创于 &lt;a href=&quot;https://HawkingOuYang.github.io/&quot;&gt;https://HawkingOuYang.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/HawkingOuYang
    
    </summary>
    
      <category term="iOS" scheme="https://HawkingOuYang.github.io/categories/iOS/"/>
    
    
      <category term="iOS" scheme="https://HawkingOuYang.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS逆向工程</title>
    <link href="https://HawkingOuYang.github.io/2016/10/20/32_iOS-Reverse-Engineering-Code/"/>
    <id>https://HawkingOuYang.github.io/2016/10/20/32_iOS-Reverse-Engineering-Code/</id>
    <published>2016-10-19T16:00:00.000Z</published>
    <updated>2019-01-17T03:35:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章出处，原创于 <a href="https://HawkingOuYang.github.io/">https://HawkingOuYang.github.io/</a></p>
<p><a href="https://github.com/HawkingOuYang/" target="_blank" rel="external">我的GitHub</a></p>
<hr>
<h4 id="GDB-介绍"><a href="#GDB-介绍" class="headerlink" title="GDB 介绍"></a>GDB 介绍</h4><p>GDB: The GNU Project Debugger &rarr; <a href="https://www.gnu.org/software/gdb/" target="_blank" rel="external">https://www.gnu.org/software/gdb/</a></p>
<p>用GDB调试程序 &rarr; <a href="http://wiki.ubuntu.org.cn/%E7%94%A8GDB%E8%B0%83%E8%AF%95%E7%A8%8B%E5%BA%8F" target="_blank" rel="external">http://wiki.ubuntu.org.cn/用GDB调试程序</a></p>
<h4 id="dSYM"><a href="#dSYM" class="headerlink" title="dSYM"></a>dSYM</h4><p>Whats the dSYM and how to use it? (iOS SDK) &rarr; <a href="http://stackoverflow.com/questions/3656391/whats-the-dsym-and-how-to-use-it-ios-sdk" target="_blank" rel="external">stackoverflow</a></p>
<h4 id="GDB-使用"><a href="#GDB-使用" class="headerlink" title="GDB 使用"></a>GDB 使用</h4><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">➜  ~ ✗ <span class="keyword">brew </span><span class="keyword">install </span>gdb</div></pre></td></tr></table></figure>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">Last login: Thu Oct <span class="number">20</span> <span class="number">13</span>:<span class="number">32</span>:<span class="number">19</span> <span class="keyword">on</span> ttys006</div><div class="line">➜  ~ gi<span class="variable">t:</span>(文稿+音乐) ✗ symbol-<span class="keyword">file</span></div><div class="line">zsh: <span class="keyword">command</span> not found: symbol-<span class="keyword">file</span></div><div class="line">➜  ~ gi<span class="variable">t:</span>(文稿+音乐) ✗ /Users/OYXJ/Desktop/HomeTime.app.dSYM</div><div class="line">➜  HomeTime.app.dSYM gi<span class="variable">t:</span>(文稿+音乐) ✗ <span class="keyword">l</span></div><div class="line">total <span class="number">0</span></div><div class="line">drwxr-xr-x@  <span class="number">3</span> OYXJ  staff   <span class="number">102</span>B <span class="number">10</span> <span class="number">19</span> <span class="number">20</span>:<span class="number">51</span> .</div><div class="line">drwx------@ <span class="number">44</span> OYXJ  staff   <span class="number">1.5</span>K <span class="number">10</span> <span class="number">20</span> <span class="number">13</span>:<span class="number">30</span> ..</div><div class="line">drwxr-xr-<span class="keyword">x</span>   <span class="number">4</span> OYXJ  staff   <span class="number">136</span>B <span class="number">10</span> <span class="number">19</span> <span class="number">20</span>:<span class="number">51</span> Contents</div><div class="line">➜  HomeTime.app.dSYM gi<span class="variable">t:</span>(文稿+音乐) ✗ <span class="keyword">cd</span> Contents</div><div class="line">➜  Contents gi<span class="variable">t:</span>(文稿+音乐) ✗ <span class="keyword">l</span></div><div class="line">total <span class="number">8</span></div><div class="line">drwxr-xr-<span class="keyword">x</span>  <span class="number">4</span> OYXJ  staff   <span class="number">136</span>B <span class="number">10</span> <span class="number">19</span> <span class="number">20</span>:<span class="number">51</span> .</div><div class="line">drwxr-xr-x@ <span class="number">3</span> OYXJ  staff   <span class="number">102</span>B <span class="number">10</span> <span class="number">19</span> <span class="number">20</span>:<span class="number">51</span> ..</div><div class="line">-rw-r--r--  <span class="number">1</span> OYXJ  staff   <span class="number">648</span>B <span class="number">10</span> <span class="number">20</span> <span class="number">10</span>:<span class="number">41</span> Info.plist</div><div class="line">drwxr-xr-<span class="keyword">x</span>  <span class="number">3</span> OYXJ  staff   <span class="number">102</span>B <span class="number">10</span> <span class="number">19</span> <span class="number">20</span>:<span class="number">51</span> Resources</div><div class="line">➜  Contents gi<span class="variable">t:</span>(文稿+音乐) ✗ <span class="keyword">cd</span> Resources</div><div class="line">➜  Resources gi<span class="variable">t:</span>(文稿+音乐) ✗</div><div class="line">➜  Resources gi<span class="variable">t:</span>(文稿+音乐) ✗ <span class="keyword">l</span></div><div class="line">total <span class="number">0</span></div><div class="line">drwxr-xr-<span class="keyword">x</span>  <span class="number">3</span> OYXJ  staff   <span class="number">102</span>B <span class="number">10</span> <span class="number">19</span> <span class="number">20</span>:<span class="number">51</span> .</div><div class="line">drwxr-xr-<span class="keyword">x</span>  <span class="number">4</span> OYXJ  staff   <span class="number">136</span>B <span class="number">10</span> <span class="number">19</span> <span class="number">20</span>:<span class="number">51</span> ..</div><div class="line">drwxr-xr-<span class="keyword">x</span>  <span class="number">3</span> OYXJ  staff   <span class="number">102</span>B <span class="number">10</span> <span class="number">19</span> <span class="number">20</span>:<span class="number">51</span> DWARF</div><div class="line">➜  Resources gi<span class="variable">t:</span>(文稿+音乐) ✗ <span class="keyword">cd</span> DWARF</div><div class="line">➜  DWARF gi<span class="variable">t:</span>(文稿+音乐) ✗</div><div class="line">➜  DWARF gi<span class="variable">t:</span>(文稿+音乐) ✗ <span class="keyword">l</span></div><div class="line">total <span class="number">22224</span></div><div class="line">drwxr-xr-<span class="keyword">x</span>  <span class="number">3</span> OYXJ  staff   <span class="number">102</span>B <span class="number">10</span> <span class="number">19</span> <span class="number">20</span>:<span class="number">51</span> .</div><div class="line">drwxr-xr-<span class="keyword">x</span>  <span class="number">3</span> OYXJ  staff   <span class="number">102</span>B <span class="number">10</span> <span class="number">19</span> <span class="number">20</span>:<span class="number">51</span> ..</div><div class="line">-rw-r--r--  <span class="number">1</span> OYXJ  staff    <span class="number">11</span>M <span class="number">10</span> <span class="number">20</span> <span class="number">10</span>:<span class="number">41</span> HomeTime</div><div class="line">➜  DWARF gi<span class="variable">t:</span>(文稿+音乐) ✗ gdb HomeTime</div><div class="line">GNU gdb (GDB) <span class="number">7.11</span>.<span class="number">1</span></div><div class="line">Copyright (C) <span class="number">2016</span> Free Software Foundation, Inc.</div><div class="line">License GPLv3+: GNU GPL <span class="keyword">version</span> <span class="number">3</span> <span class="built_in">or</span> <span class="keyword">later</span> &lt;http://gnu.org/licenses/gpl.html&gt;</div><div class="line">This <span class="keyword">is</span> free software: you are free <span class="keyword">to</span> <span class="keyword">change</span> <span class="built_in">and</span> redistribute it.</div><div class="line">There <span class="keyword">is</span> NO WARRANTY, <span class="keyword">to</span> the extent permitted by law.  Type <span class="string">"show copying"</span></div><div class="line"><span class="built_in">and</span> <span class="string">"show warranty"</span> <span class="keyword">for</span> details.</div><div class="line">This GDB was configured <span class="keyword">as</span> <span class="string">"x86_64-apple-darwin16.0.0"</span>.</div><div class="line">Type <span class="string">"show configuration"</span> <span class="keyword">for</span> configuration details.</div><div class="line">For bug reporting instructions, please see:</div><div class="line">&lt;http://www.gnu.org/software/gdb/bugs/&gt;.</div><div class="line">Find the GDB manual <span class="built_in">and</span> other documentation resources online <span class="keyword">a</span><span class="variable">t:</span></div><div class="line">&lt;http://www.gnu.org/software/gdb/documentation/&gt;.</div><div class="line">For <span class="keyword">help</span>, <span class="built_in">type</span> <span class="string">"help"</span>.</div><div class="line">Type <span class="string">"apropos word"</span> <span class="keyword">to</span> <span class="built_in">search</span> <span class="keyword">for</span> commands related <span class="keyword">to</span> <span class="string">"word"</span>...</div><div class="line">Reading symbols from HomeTime...done.</div><div class="line">(gdb) <span class="keyword">l</span></div><div class="line"><span class="number">1</span>	//</div><div class="line"><span class="number">2</span>	//  main.<span class="keyword">m</span></div><div class="line"><span class="number">3</span>	//  TemplatesProject</div><div class="line"><span class="number">4</span>	//</div><div class="line"><span class="number">5</span>	//  Created by OYXJ <span class="keyword">on</span> <span class="number">15</span>/<span class="number">6</span>/<span class="number">16</span>.</div><div class="line"><span class="number">6</span>	//  Copyright (<span class="keyword">c</span>) <span class="number">2015</span>年 [OYXJlucky@<span class="number">163</span>.<span class="keyword">com</span>] All rights reserved.</div><div class="line"><span class="number">7</span>	//</div><div class="line"><span class="number">8</span></div><div class="line"><span class="number">9</span>	#import &lt;UIKit/UIKit.h&gt;</div><div class="line"><span class="number">10</span>	#import <span class="string">"AppDelegate.h"</span></div><div class="line">(gdb)</div></pre></td></tr></table></figure>
<p><strong>因此不能泄漏 dSYM 文件 ！</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文章出处，原创于 &lt;a href=&quot;https://HawkingOuYang.github.io/&quot;&gt;https://HawkingOuYang.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/HawkingOuYang
    
    </summary>
    
      <category term="iOS" scheme="https://HawkingOuYang.github.io/categories/iOS/"/>
    
    
      <category term="iOS" scheme="https://HawkingOuYang.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>LLDB debugger</title>
    <link href="https://HawkingOuYang.github.io/2016/10/20/31_LLDB-debugger/"/>
    <id>https://HawkingOuYang.github.io/2016/10/20/31_LLDB-debugger/</id>
    <published>2016-10-19T16:00:00.000Z</published>
    <updated>2019-01-17T03:35:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章出处，原创于 <a href="https://HawkingOuYang.github.io/">https://HawkingOuYang.github.io/</a></p>
<p><a href="https://github.com/HawkingOuYang/" target="_blank" rel="external">我的GitHub</a></p>
<hr>
<h4 id="LLDB-介绍"><a href="#LLDB-介绍" class="headerlink" title="LLDB 介绍"></a>LLDB 介绍</h4><p>WHAT IS LLDB? &rarr; <a href="http://lldb.llvm.org/" target="_blank" rel="external">http://lldb.llvm.org/</a></p>
<p>LLDB is a next generation, high-performance debugger. It is built as a set of reusable components which highly leverage existing libraries in the larger LLVM Project, such as the Clang expression parser and LLVM disassembler.</p>
<p>LLDB is the default debugger in Xcode on Mac OS X and supports debugging C, Objective-C and C++ on the desktop and iOS devices and simulator.</p>
<p>All of the code in the LLDB project is available under the standard LLVM License, an open source “BSD-style” license.</p>
<p>与调试器共舞 - LLDB 的华尔兹  &rarr;  <a href="https://objccn.io/issue-19-2/" target="_blank" rel="external">https://objccn.io/issue-19-2/</a></p>
<p>熟练使用 LLDB，让你调试事半功倍  &rarr;  <a href="http://ios.jobbole.com/83393/" target="_blank" rel="external">http://ios.jobbole.com/83393/</a></p>
<h4 id="LLDB-使用"><a href="#LLDB-使用" class="headerlink" title="LLDB 使用"></a>LLDB 使用</h4><pre><code>(lldb) help
Debugger commands:

  apropos           -- List debugger commands related to a word or subject.
  breakpoint        -- Commands for operating on breakpoints (see &apos;help b&apos; for
                       shorthand.)
  bugreport         -- Commands for creating domain-specific bug reports.
  command           -- Commands for managing custom LLDB commands.
  disassemble       -- Disassemble specified instructions in the current
                       target.  Defaults to the current function for the
                       current thread and stack frame.
  expression        -- Evaluate an expression on the current thread.  Displays
                       any returned value with LLDB&apos;s default formatting.
  frame             -- Commands for selecting and examing the current thread&apos;s
                       stack frames.
  gdb-remote        -- Connect to a process via remote GDB server.  If no host
                       is specifed, localhost is assumed.
  gui               -- Switch into the curses based GUI mode.
  help              -- Show a list of all debugger commands, or give details
                       about a specific command.
  kdp-remote        -- Connect to a process via remote KDP server.  If no UDP
                       port is specified, port 41139 is assumed.
  language          -- Commands specific to a source language.
  log               -- Commands controlling LLDB internal logging.
  memory            -- Commands for operating on memory in the current target
                       process.
  platform          -- Commands to manage and create platforms.
  plugin            -- Commands for managing LLDB plugins.
  process           -- Commands for interacting with processes on the current
                       platform.
  quit              -- Quit the LLDB debugger.
  register          -- Commands to access registers for the current thread and
                       stack frame.
  script            -- Invoke the script interpreter with provided code and
                       display any results.  Start the interactive interpreter
                       if no code is supplied.
  settings          -- Commands for managing LLDB settings.
  source            -- Commands for examining source code described by debug
                       information for the current target process.
  target            -- Commands for operating on debugger targets.
  thread            -- Commands for operating on one or more threads in the
                       current process.
  type              -- Commands for operating on the type system.
  version           -- Show the LLDB debugger version.
  watchpoint        -- Commands for operating on watchpoints.

Current command abbreviations (type &apos;help command alias&apos; for more info):

  add-dsym  -- (&apos;target symbols add&apos;)  Add a debug symbol file to one of the
               target&apos;s current modules by specifying a path to a debug symbols
               file, or using the options to specify a module to download
               symbols for.
  attach    -- (&apos;_regexp-attach&apos;)  Attach to process by ID or name.
  b         -- (&apos;_regexp-break&apos;)  Set a breakpoint using one of several
               shorthand formats.
  bt        -- (&apos;_regexp-bt&apos;)  Show the current thread&apos;s call stack.  Any
               numeric argument displays at most that many frames.  The
               argument &apos;all&apos; displays all threads.
  c         -- (&apos;process continue&apos;)  Continue execution of all threads in the
               current process.
  call      -- (&apos;expression --&apos;)  Evaluate an expression on the current thread.
               Displays any returned value with LLDB&apos;s default formatting.
  continue  -- (&apos;process continue&apos;)  Continue execution of all threads in the
               current process.
  detach    -- (&apos;process detach&apos;)  Detach from the current target process.
  di        -- (&apos;disassemble&apos;)  Disassemble specified instructions in the
               current target.  Defaults to the current function for the
               current thread and stack frame.
  dis       -- (&apos;disassemble&apos;)  Disassemble specified instructions in the
               current target.  Defaults to the current function for the
               current thread and stack frame.
  display   -- (&apos;_regexp-display&apos;)  Evaluate an expression at every stop (see
               &apos;help target stop-hook&apos;.)
  down      -- (&apos;_regexp-down&apos;)  Select a newer stack frame.  Defaults to
               moving one frame, a numeric argument can specify an arbitrary
               number.
  env       -- (&apos;_regexp-env&apos;)  Shorthand for viewing and setting environment
               variables.
  exit      -- (&apos;quit&apos;)  Quit the LLDB debugger.
  f         -- (&apos;frame select&apos;)  Select the current stack frame by index from
               within the current thread (see &apos;thread backtrace&apos;.)
  file      -- (&apos;target create&apos;)  Create a target using the argument as the
               main executable.
  finish    -- (&apos;thread step-out&apos;)  Finish executing the current stack frame
               and stop after returning.  Defaults to current thread unless
               specified.
  image     -- (&apos;target modules&apos;)  Commands for accessing information for one
               or more target modules.
  j         -- (&apos;_regexp-jump&apos;)  Set the program counter to a new address.
  jump      -- (&apos;_regexp-jump&apos;)  Set the program counter to a new address.
  kill      -- (&apos;process kill&apos;)  Terminate the current target process.
  l         -- (&apos;_regexp-list&apos;)  List relevant source code using one of several
               shorthand formats.
  list      -- (&apos;_regexp-list&apos;)  List relevant source code using one of several
               shorthand formats.
  n         -- (&apos;thread step-over&apos;)  Source level single step, stepping over
               calls.  Defaults to current thread unless specified.
  next      -- (&apos;thread step-over&apos;)  Source level single step, stepping over
               calls.  Defaults to current thread unless specified.
  nexti     -- (&apos;thread step-inst-over&apos;)  Instruction level single step,
               stepping over calls.  Defaults to current thread unless
               specified.
  ni        -- (&apos;thread step-inst-over&apos;)  Instruction level single step,
               stepping over calls.  Defaults to current thread unless
               specified.
  p         -- (&apos;expression --&apos;)  Evaluate an expression on the current thread.
               Displays any returned value with LLDB&apos;s default formatting.
  parray    -- (&apos;expression -Z %1   --&apos;)  Evaluate an expression on the current
               thread.  Displays any returned value with LLDB&apos;s default
               formatting.
  po        -- Evaluate an expression on the current thread.  Displays any
               returned value with formatting controlled by the type&apos;s author.
  poarray   -- (&apos;expression -O -Z %1    --&apos;)  Evaluate an expression on the
               current thread.  Displays any returned value with LLDB&apos;s default
               formatting.
  print     -- (&apos;expression --&apos;)  Evaluate an expression on the current thread.
               Displays any returned value with LLDB&apos;s default formatting.
  q         -- (&apos;quit&apos;)  Quit the LLDB debugger.
  r         -- (&apos;process launch -X true --&apos;)  Launch the executable in the
               debugger.
  rbreak    -- (&apos;breakpoint set -r %1&apos;)  Sets a breakpoint or set of
               breakpoints in the executable.
  repl      -- (&apos;expression -r  -- &apos;)  Evaluate an expression on the current
               thread.  Displays any returned value with LLDB&apos;s default
               formatting.
  run       -- (&apos;process launch -X true --&apos;)  Launch the executable in the
               debugger.
  s         -- (&apos;thread step-in&apos;)  Source level single step, stepping into
               calls.  Defaults to current thread unless specified.
  si        -- (&apos;thread step-inst&apos;)  Instruction level single step, stepping
               into calls.  Defaults to current thread unless specified.
  sif       -- Step through the current block, stopping if you step directly
               into a function whose name matches the TargetFunctionName.
  step      -- (&apos;thread step-in&apos;)  Source level single step, stepping into
               calls.  Defaults to current thread unless specified.
  stepi     -- (&apos;thread step-inst&apos;)  Instruction level single step, stepping
               into calls.  Defaults to current thread unless specified.
  t         -- (&apos;thread select&apos;)  Change the currently selected thread.
  tbreak    -- (&apos;_regexp-tbreak&apos;)  Set a one-shot breakpoint using one of
               several shorthand formats.
  undisplay -- (&apos;_regexp-undisplay&apos;)  Stop displaying expression at every stop
               (specified by stop-hook index.)
  up        -- (&apos;_regexp-up&apos;)  Select an older stack frame.  Defaults to moving
               one frame, a numeric argument can specify an arbitrary number.
  x         -- (&apos;memory read&apos;)  Read from the memory of the current target
               process.

For more information on any command, type &apos;help &lt;command-name&gt;&apos;.
(lldb)
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文章出处，原创于 &lt;a href=&quot;https://HawkingOuYang.github.io/&quot;&gt;https://HawkingOuYang.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/HawkingOuYang
    
    </summary>
    
      <category term="Tool" scheme="https://HawkingOuYang.github.io/categories/Tool/"/>
    
    
      <category term="Tool" scheme="https://HawkingOuYang.github.io/tags/Tool/"/>
    
  </entry>
  
  <entry>
    <title>Unix 编程艺术</title>
    <link href="https://HawkingOuYang.github.io/2016/10/16/30_Unix-Coding-Art/"/>
    <id>https://HawkingOuYang.github.io/2016/10/16/30_Unix-Coding-Art/</id>
    <published>2016-10-15T16:00:00.000Z</published>
    <updated>2019-01-17T03:35:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章出处，原创于 <a href="https://HawkingOuYang.github.io/">https://HawkingOuYang.github.io/</a></p>
<p><a href="https://github.com/HawkingOuYang/" target="_blank" rel="external">我的GitHub</a></p>
<hr>
<h4 id="编程之道"><a href="#编程之道" class="headerlink" title="编程之道"></a><strong>编程之道</strong></h4><p>江湖秘诀 by OYXJ on 2016.10.19</p>
<p>iOS 编程之道 :)  &rarr; 天下武功，唯快不破；编程之道，唯慢不破。</p>
<p>工作的时候：业务 —驱动—&gt; 技术</p>
<p>闲暇的时候：技术 —反哺—&gt; 业务</p>
<p>生活的时候：生活 —提炼—&gt; 业务</p>
<p>休息的时候：时间 —沉淀—&gt; 技术</p>
<p>文武之道，一张一弛；（道）<br>四季循环，自有天时；（天）<br>拥抱变化，因地制宜；（地）<br>就事论事，将心比心；（人）</p>
<p>Coding 是一种训练思维的方式，使用编程语言对现实世界的抽象、描述、实现、改造；</p>
<p>钢琴、医学、心理学、城建 等，都是以各自的语言，去抽象、描述、实现、改造 身边的世界；</p>
<p>从 农村、县城、区、市、省、北京，求是、创新、享美，孩提、少年、成年、壮年、老年、暮年，这个认识链、价值链，需要重构。不慌不忙，慢慢来…… 就像四季的过程一样。</p>
<p>眼界: 不要忙于向外扩张，认识到20多年的经历、变化 与 成长，其实 每个人 都带着宝藏，看你会不会挖掘和使用。</p>
<p>年轻的时候，多学习、反思、积累、沉淀，目的在于：年长之后，领导正如自己现时的年轻人。</p>
<p>At twenty years of age the will reigns; at thirty, the wit; and at forty, the judgment. —- Benjamin Franklin</p>
<p>每个年龄段都有核心竞争力：10岁 家庭环境培养的习惯（habit），20岁 毅力（will），30岁 智慧（wit），40岁 判断（judgment），50岁 视野（vision），60岁 人脉（connection）。</p>
<h4 id="Unix-编程原则-17条"><a href="#Unix-编程原则-17条" class="headerlink" title="Unix 编程原则 17条"></a><strong>Unix 编程原则 17条</strong></h4><p><a href="http://blog.csdn.net/chgaowei/article/details/6635910" target="_blank" rel="external">unix设计十七条原则之一（unix编程艺术笔记）</a></p>
<p><a href="http://blog.csdn.net/chgaowei/article/details/6645640" target="_blank" rel="external">unix设计十七条原则之二（unix编程艺术笔记）</a></p>
<p>最近在学习《<strong>unix编程艺术</strong>》。第一章非常不错，讲了很多Unix的历史，哲学基础，其中最重要的是提到的十七条设计原则。很多原则自己也知道，但是从来没有总结的如此详细深刻。<br>下面的内容大部分来自《unix编程艺术》这本书，少部分是我的一些理解。这是我读书的一个习惯，对于我认为重要的，我会把它打出来，在打字的过程中我会根据深入的思考理解。所以，笔记对我来说是一个思考和记忆的辅助手段。</p>
<h5 id="1-、模块原则：使用简单的接口拼接简单的部件"><a href="#1-、模块原则：使用简单的接口拼接简单的部件" class="headerlink" title="(1)、模块原则：使用简单的接口拼接简单的部件"></a>(1)、模块原则：使用简单的接口拼接简单的部件</h5><p>“计算机编程的本质就是控制复杂度”。<br>要编制复杂软件而又不至于一败涂地的唯一的方法就是降低其整体复杂度——用清晰的接口把若干个简单的模块组合成一个复杂的软件。如此一来，多数问题就只会局限于某个局部，那么还有希望对局部进行改进而不至于牵动全身。<br>注：控制复杂度，我在多个地方都看到过。把整体的结构搭建好后，各个模块也可以独立的演进而相互之间没有影响。</p>
<h5 id="2-、清晰原则：清晰胜于机巧"><a href="#2-、清晰原则：清晰胜于机巧" class="headerlink" title="(2)、清晰原则：清晰胜于机巧"></a>(2)、清晰原则：清晰胜于机巧</h5><p>程序是给人看的，而不是机器。<br>这个原则不仅仅是指可读性，同时也指在选择算法和实现时就应该考虑到未来的可扩展性。不要为了提升一丁点的程序的性能就增加技术的复杂性和晦涩性——因为复杂的代码更容易滋生bug，也因为它会使日后的阅读和维护工作更加艰难。<br>优雅而清晰的代码不仅不容易崩溃——而且更利于后来的修改者立刻理解。</p>
<h5 id="3-、组合原则：设计时考虑拼接组合"><a href="#3-、组合原则：设计时考虑拼接组合" class="headerlink" title="(3)、组合原则：设计时考虑拼接组合"></a>(3)、组合原则：设计时考虑拼接组合</h5><p>如果程序间不能有效的通信，那么软件就难免会陷入复杂度的泥淖。<br>Unix传统极力提倡采用简单，文本化，面向流，设备无关的格式。<br>要想让程序具有组合性，就必须是程序彼此独立。在文本流这一端的程序应该尽可能不要考虑文本流另一端的程序。将一端的程序替换为一个截然不同的程序，而完全不惊扰另一端的程序应该很容易做到。<br>对于协议的设计，尽量采用简单的文本数据格式。</p>
<h5 id="4-、分离原则：策略同机制分离，接口同引擎分离"><a href="#4-、分离原则：策略同机制分离，接口同引擎分离" class="headerlink" title="(4)、分离原则：策略同机制分离，接口同引擎分离"></a>(4)、分离原则：策略同机制分离，接口同引擎分离</h5><p>什么是机制：提供的功能；什么是策略：如何使用功能；这两个词有些费解。<br>策略的变化要远远大于机制的变化。将两者分离，可以使机制相对保持稳定，而同时支持策略的变化。<br>这条准则在GUI环境之外也被广泛应用。总而言之，这条准则告诉我们要将接口和引擎剥离开来。<br>“接口和引擎”？又是两个费解的概念。作者列举了两个实例，一个是Emacs，它是用LISP驱动C的程序来实现的——也就是使用内嵌脚本语言驱动c服务程序：C语言编写底层服务（引擎），给脚本语言调用，使用脚本语言实现流程。另一个实例是将应用程序分为协作的前端和后端，前端实现策略，后端实现机制。<br>可以认为接口就是策略（用户接口），引擎就是机制。<br>注：代码大全中提到“隔离变化”的概念，以及设计模式中提到的将易变化的部分和不易变化的部分分离也是这个思路。</p>
<h5 id="5-、简洁原则：设计要简洁，复杂度能低则低"><a href="#5-、简洁原则：设计要简洁，复杂度能低则低" class="headerlink" title="(5)、简洁原则：设计要简洁，复杂度能低则低"></a>(5)、简洁原则：设计要简洁，复杂度能低则低</h5><p>来自多方面的压力使程序变得复杂，其中一种压力就是技术上的虚荣心。程序员都很聪明，常常以玩转复杂的东西和耍弄抽象概念的能力为傲。“看看谁能鼓捣出最错综复杂的美妙事物”：<br>“听起来自相矛盾，Unix程序员相互比的是谁能够做到“简洁而漂亮”，并以此为荣。<br>另一个眼里来自软件营销策略：看谁提供更多的功能——这会扼杀优秀的设计。<br>要鼓励一种文化，以简洁为美，对复杂的东西群起而攻之。</p>
<h5 id="6-、吝啬原则：除非确无它法，不要编写庞大的程序"><a href="#6-、吝啬原则：除非确无它法，不要编写庞大的程序" class="headerlink" title="(6)、吝啬原则：除非确无它法，不要编写庞大的程序"></a>(6)、吝啬原则：除非确无它法，不要编写庞大的程序</h5><p>大的含义：体积大，复杂度高；<br>避免编写庞大程序的方法的分割程序。一个程序只做好一件事情。</p>
<h5 id="7-、透明性原则：设计要可见，以便审查和调试"><a href="#7-、透明性原则：设计要可见，以便审查和调试" class="headerlink" title="(7)、透明性原则：设计要可见，以便审查和调试"></a>(7)、透明性原则：设计要可见，以便审查和调试</h5><p>调试占看法的四分之三的时间，一个减少调试工作量的有效的方法就是在设计之初充分的考虑透明性和显见性。<br>软件系统的透明性是指你一眼就能看出软件在做什么以及怎么做的。显见性是指程序带有监视和显示内部状态的功能。这样的程序不仅能够运行良好，而且还可以看出它以何种方式运行。<br>设计时如果充分考虑这些，会对项目全过程带来好处。</p>
<h5 id="8-、健壮原则：健壮源于透明和简洁"><a href="#8-、健壮原则：健壮源于透明和简洁" class="headerlink" title="(8)、健壮原则：健壮源于透明和简洁"></a>(8)、健壮原则：健壮源于透明和简洁</h5><p>软件的健壮性是指软件不仅在正常的情况下运行良好，而且在超出设计者设想的意外条件下也能够运行良好。<br>大多数软件缺乏健壮性，是因为过于复杂。<br>获得健壮性的方法：让程序的内部逻辑更易于理解。主要有两种方法：透明化和简洁化。程序越简洁，越透明，也就越健壮。<br>模块性（代码简朴，接口简洁）是组织程序以达到更简洁目的的一个方法。</p>
<h5 id="9-、-表示原则：把知识叠入数据以求逻辑质朴而健壮"><a href="#9-、-表示原则：把知识叠入数据以求逻辑质朴而健壮" class="headerlink" title="(9)、  表示原则：把知识叠入数据以求逻辑质朴而健壮"></a>(9)、  表示原则：把知识叠入数据以求逻辑质朴而健壮</h5><p>即使最简单的程序逻辑让人类来验证也很困难，但是就算是很复杂的数据，对人类来说，还是相对容易地就能够推导和建模的。<br>数据比编程逻辑更容易驾驭。在复杂数据和复杂代码中选择，宁可选择前者。在设计中，你应该主动的将代码的复杂度转移到数据中去。<br>Rob Pick讲到的第五个原则：<br>数据压倒一切。如果你已经选择了合适的数据结构并且把一切都组织得井井有条，正确的算法也就不言自明。编程的核心是数据结构，而不是算法。</p>
<h5 id="10-、-通俗原则：接口设计避免标新立异"><a href="#10-、-通俗原则：接口设计避免标新立异" class="headerlink" title="(10)、  通俗原则：接口设计避免标新立异"></a>(10)、  通俗原则：接口设计避免标新立异</h5><p>也就是众所周知的“最少惊奇原则”。<br>最易用的程序就是用户学习新东西最少的程序。<br>另一个方面是避免表象相同而实际却略有不同，这会及其危险。最好让不同事物有明显区别，而不要看起来几乎一模一样。</p>
<h5 id="11-、-缄默原则：如果一个程序没有什么好说的，就保持沉默"><a href="#11-、-缄默原则：如果一个程序没有什么好说的，就保持沉默" class="headerlink" title="(11)、  缄默原则：如果一个程序没有什么好说的，就保持沉默"></a>(11)、  缄默原则：如果一个程序没有什么好说的，就保持沉默</h5><p>“简洁是Unix的核心风格。重要的数据不应该混杂在冗长的程序内部行为信息中。”</p>
<h5 id="12-、-补救原则：出现异常时，马上退出并给足异常信息"><a href="#12-、-补救原则：出现异常时，马上退出并给足异常信息" class="headerlink" title="(12)、  补救原则：出现异常时，马上退出并给足异常信息"></a>(12)、  补救原则：出现异常时，马上退出并给足异常信息</h5><p>软件要尽可能从容的应付各种错误输入和自身的运行错误。但是，如果做不到这一点，就让程序尽可能以一种容易诊断错误的方式终止操作。<br>对于协议：要宽进严出。</p>
<h5 id="13-、-经济原则：宁花机器一分，不花程序员一秒"><a href="#13-、-经济原则：宁花机器一分，不花程序员一秒" class="headerlink" title="(13)、  经济原则：宁花机器一分，不花程序员一秒"></a>(13)、  经济原则：宁花机器一分，不花程序员一秒</h5><p>应该采用更加高级的语言，让程序员从自习管理内存的负担重解放出来。</p>
<h5 id="14-、-生成原则：避免手工hack，尽量编写程序去生成程序"><a href="#14-、-生成原则：避免手工hack，尽量编写程序去生成程序" class="headerlink" title="(14)、  生成原则：避免手工hack，尽量编写程序去生成程序"></a>(14)、  生成原则：避免手工hack，尽量编写程序去生成程序</h5><p>也就是教会机器去做更多低层次的编程工作。<br>一个方向就是DSL。</p>
<h5 id="15-、-优化原则：雕琢前先得有原型，跑前先学会走"><a href="#15-、-优化原则：雕琢前先得有原型，跑前先学会走" class="headerlink" title="(15)、  优化原则：雕琢前先得有原型，跑前先学会走"></a>(15)、  优化原则：雕琢前先得有原型，跑前先学会走</h5><p>过早优化时万恶之源，他会损害设计。<br>先给你的设计做个未优化的，运行缓慢的，很耗内存但是正确的实现，然后向进行系统调整，寻找那些可以牺牲最小的局部的简洁性而获得较大的性能提升的地方。</p>
<h5 id="16-、-多样原则：决不相信所谓的“不二法门”的断言"><a href="#16-、-多样原则：决不相信所谓的“不二法门”的断言" class="headerlink" title="(16)、  多样原则：决不相信所谓的“不二法门”的断言"></a>(16)、  多样原则：决不相信所谓的“不二法门”的断言</h5><p>即使最出色的软件也常常会受限于设计者的想象力。<br>Unix奉行的是广泛采用多种语言、开发的可扩展机制和用户定制机制。</p>
<h5 id="17-、-扩展原则：设计着眼未来，未来总比预想快"><a href="#17-、-扩展原则：设计着眼未来，未来总比预想快" class="headerlink" title="(17)、  扩展原则：设计着眼未来，未来总比预想快"></a>(17)、  扩展原则：设计着眼未来，未来总比预想快</h5><p>设计协议或者文本格式时，应使其具有充分的自描述性以便扩展。<br>设计代码是，要有很好的组织，让将来的开发者增加新功能时无需拆毁或重建整个架构。</p>
<h4 id="KISS"><a href="#KISS" class="headerlink" title="KISS"></a>KISS</h4><p>Unix哲学一言以蔽之：<br>KISS原则：Keep It Simple，stupid！</p>
<p>态度：<br>如果不确定什么是对的，那么就只做最少量的工作，确保完成任务就行，直到明白什么是对的。<br>软件设计是一门技艺。<br>我们应该不断追求卓越。<br>不要重复制造轮子。<br>善用工具，尽可能将一切都自动化。</p>
<h4 id="Unix编程艺术-pdf"><a href="#Unix编程艺术-pdf" class="headerlink" title="Unix编程艺术.pdf"></a>Unix编程艺术.pdf</h4>

	<div class="row">
	  <iframe src="http://nagland.github.io/viewer/web/viewer.html?val=http://7xpc28.com1.z0.glb.clouddn.com/Unix_Coding_Art.pdf" style="width:100%; height:550px"></iframe>
	</div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文章出处，原创于 &lt;a href=&quot;https://HawkingOuYang.github.io/&quot;&gt;https://HawkingOuYang.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/HawkingOuYang
    
    </summary>
    
      <category term="Unix" scheme="https://HawkingOuYang.github.io/categories/Unix/"/>
    
    
      <category term="Unix" scheme="https://HawkingOuYang.github.io/tags/Unix/"/>
    
  </entry>
  
  <entry>
    <title>Wireshark、Socket、TCP-UDP-IP、HTTP、WebDAV</title>
    <link href="https://HawkingOuYang.github.io/2016/10/10/29_Wireshark-about-Socket-TCP-UDP-IP-HTTP/"/>
    <id>https://HawkingOuYang.github.io/2016/10/10/29_Wireshark-about-Socket-TCP-UDP-IP-HTTP/</id>
    <published>2016-10-09T16:00:00.000Z</published>
    <updated>2019-01-17T03:35:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章出处，原创于 <a href="https://HawkingOuYang.github.io/">https://HawkingOuYang.github.io/</a></p>
<p><a href="https://github.com/HawkingOuYang/" target="_blank" rel="external">我的GitHub</a></p>
<hr>
<p>wireshark + 网络知识</p>
<p>frame<br>ip<br>tcp socket、udp socket<br>http、https</p>
<p>tcp<br>flag：syc、syc ack、ack<br>         fni、ack wait1、wait2 ack、fni</p>
<p>详见下图</p>
<p>网关 getway<br>路由器 前往哪个ip<br>交换机 局域网通信</p>
<p>浅谈Socket学习中的那些事<br><a href="http://iipanda.com/2016/01/16/Socket/" target="_blank" rel="external">http://iipanda.com/2016/01/16/Socket/</a></p>
<p>Socket是为网络服务提供的一种机制，希望经过此次的学习，能够揭开Socket神秘面纱。在此仅想记录自己的学习历程和一些学习心得。</p>
<p>OSI、TCP\IP参考模型</p>
<p>图片1<br><img src="http://7xpc28.com1.z0.glb.clouddn.com/Wireshark-about-Socket-TCP-UDP-IP-HTTP__1_OSI_TCPIP.png" alt=""></p>
<p>简单解释</p>
<p>1、物理层：主要定义物理设备标准，如网线的接口类型、各种传输介质的传输速率等。</p>
<p>2、数据链路层：主要将从物理层接收的数据进行MAC地址的封装与解封装。<br>3、网络层：选择合适的网间路由和交换结点，确保数据及时传送，将从下层接收到的数据进行IP地址的封装与解封装。</p>
<p>4、传输层：定义了一些传输数据的协议和端口，如TCP、UDP协议，主要将从下层接收的数据进行分段和传输，到达目的地址后再进行重组，以往把这一层数据叫做段。</p>
<p>5、会话层：通过传输层建立数据传输通路。</p>
<p>6、表示层：主要是进行对接收的数据进行解释、压缩与解压缩等，即把计算机能够识别的东西转化成人能够识别的东西（如图片、声音等）。</p>
<p>7、应用层：主要是一些终端的应用，比如说FTP（各种文件下载）、浏览器、QQ等，可以将其理解为在电脑屏幕上可以看到的东西，也就是终端应用。</p>
<p>网络通讯要素</p>
<p>IP地址：网络中设备的标示</p>
<p>端口号：用来标示进程的逻辑地址，不同进程的标示</p>
<p>传输协议：用什么样的方式进行交互，常见协议TCP UDP</p>
<p>TCP UDP</p>
<p>TCP (传输控制协议)</p>
<p>1、建立连接，形成数据传输的通道</p>
<p>2、在连接中可进行大数据传输（数据的大小不受限制）</p>
<p>3、通过三次握手建立连接，可靠协议，安全送达</p>
<p>4、先建立连接，效率较低</p>
<p>UDP（用户数据报协议）</p>
<p>1、不需要建立连接，将数据封装在数据包中</p>
<p>2、每个数据包得大小限制在64k之内</p>
<p>3、无需连接，是不可靠协议</p>
<p>4、不需要连接，速度较快</p>
<p>Socket</p>
<p>简单解释</p>
<p>1、网络提供服务的一种机制</p>
<p>2、通信的两端都是socket</p>
<p>3、网络通信其实就是socket间的通信</p>
<p>4、数据在两个socket间通过IO传输</p>
<p>图片2<br><img src="http://7xpc28.com1.z0.glb.clouddn.com/Wireshark-about-Socket-TCP-UDP-IP-HTTP__2_shake_hands.png" alt=""></p>
<p>iOS中常用的两种Socket类型</p>
<p>流式Socket（SOCK_STREAM）：流式是一种面向连接的Socket，针对于面向连接的TCP服务应用</p>
<p>数据报式Socket（SOCK_DGRAM）：数据报式Socket是一种无连接的Socket，对应于无连接的UDP服务应用</p>
<p>Http与Socket的区别</p>
<p>1、Http是基于Socket的实现；Http应用层协议，主要解决如何包装数据</p>
<p>2、Http传输的数据格式是规定好的，Socket实现数据传输是最原始，Socket实现的数据传输格式可自定义</p>
<p>3、Http建立的连接称为短连接，Socket建立的连接为长连接</p>
<p>4、Socket是对TCP/IP协议的封装，Socket本身并不是协议，而是一个调用接口(API),通过Socket我们才能使用TCP/IP协议</p>
<p>最后</p>
<p>在学习的过程中会模仿微信做类似的demo，涉及到的一些相关地址如下：</p>
<p>1、iOS XMPP框架：<a href="https://github.com/robbiehanson/XMPPFramework" target="_blank" rel="external">https://github.com/robbiehanson/XMPPFramework</a></p>
<p>2、Server：<a href="http://www.igniterealtime.org/downloads/index.jsp" target="_blank" rel="external">http://www.igniterealtime.org/downloads/index.jsp</a></p>
<p>3、数据库：<a href="http://dev.mysql.com/downloads/mysql/" target="_blank" rel="external">http://dev.mysql.com/downloads/mysql/</a></p>
<p>wireshark图1<br><img src="http://7xpc28.com1.z0.glb.clouddn.com/Wireshark-about-Socket-TCP-UDP-IP-HTTP__3_wireshark_webDAV_captureData_1.png" alt=""></p>
<p>wireshark图2<br><img src="http://7xpc28.com1.z0.glb.clouddn.com/Wireshark-about-Socket-TCP-UDP-IP-HTTP__3_wireshark_webDAV_captureData_2.png" alt=""></p>
<p>wireshark图3<br><img src="http://7xpc28.com1.z0.glb.clouddn.com/Wireshark-about-Socket-TCP-UDP-IP-HTTP__3_wireshark_webDAV_captureData_3.png" alt=""></p>
<p>wireshark图4<br><img src="http://7xpc28.com1.z0.glb.clouddn.com/Wireshark-about-Socket-TCP-UDP-IP-HTTP__3_wireshark_webDAV_captureData_4.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文章出处，原创于 &lt;a href=&quot;https://HawkingOuYang.github.io/&quot;&gt;https://HawkingOuYang.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/HawkingOuYang
    
    </summary>
    
      <category term="Tool" scheme="https://HawkingOuYang.github.io/categories/Tool/"/>
    
    
      <category term="Tool" scheme="https://HawkingOuYang.github.io/tags/Tool/"/>
    
  </entry>
  
  <entry>
    <title>CoreData + 多线程 + 工厂模式 + 单例模式</title>
    <link href="https://HawkingOuYang.github.io/2016/09/21/10_iOS-CoreData-MultiThreading-FactoryPattern-Singleton/"/>
    <id>https://HawkingOuYang.github.io/2016/09/21/10_iOS-CoreData-MultiThreading-FactoryPattern-Singleton/</id>
    <published>2016-09-20T16:00:00.000Z</published>
    <updated>2019-01-17T03:35:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章出处，原创于 <a href="https://HawkingOuYang.github.io/">https://HawkingOuYang.github.io/</a></p>
<p><a href="https://github.com/HawkingOuYang/" target="_blank" rel="external">我的GitHub</a></p>
<hr>
<p>&copy; OYXJ </p>
<h5 id="并发编程：API-及挑战"><a href="#并发编程：API-及挑战" class="headerlink" title="并发编程：API 及挑战"></a><a href="https://objccn.io/issue-2-1/" target="_blank" rel="external">并发编程：API 及挑战</a></h5><p><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-CoreData-MultiThreading-FactoryPattern-Singleton_0_StoryBegin1.png" alt=""><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-CoreData-MultiThreading-FactoryPattern-Singleton_0_StoryBegin2.png" alt=""><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-CoreData-MultiThreading-FactoryPattern-Singleton_0_StoryBegin3.png" alt=""></p>
<h5 id="Core-Data-Lightweight-Migration"><a href="#Core-Data-Lightweight-Migration" class="headerlink" title="Core Data Lightweight Migration"></a>Core Data Lightweight Migration</h5><p>Ref：</p>
<p>（1）<a href="http://www.objc.io/issue-4/core-data-migration.html" target="_blank" rel="external">http://www.objc.io/issue-4/core-data-migration.html</a></p>
<p>（2）<a href="http://stackoverflow.com/questions/1830079/iphone-core-data-automatic-lightweight-migration" target="_blank" rel="external">http://stackoverflow.com/questions/1830079/iphone-core-data-automatic-lightweight-migration</a> (这个好，具体到步骤)</p>
<p>（3）<a href="http://www.raywenderlich.com/86136/lightweight-migrations-core-data-tutorial" target="_blank" rel="external">http://www.raywenderlich.com/86136/lightweight-migrations-core-data-tutorial</a></p>
<p>（4）<a href="http://www.raywenderlich.com/27657/how-to-perform-a-lightweight-core-data-migration" target="_blank" rel="external">http://www.raywenderlich.com/27657/how-to-perform-a-lightweight-core-data-migration</a></p>
<p>（5）<a href="https://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/CoreDataVersioning/Articles/vmLightweightMigration.html" target="_blank" rel="external">https://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/CoreDataVersioning/Articles/vmLightweightMigration.html</a></p>
<p>（6）<a href="http://stackoverflow.com/questions/13897348/managed-object-in-core-data-entity-causing-is-not-key-value-coding-compliant-fo" target="_blank" rel="external">http://stackoverflow.com/questions/13897348/managed-object-in-core-data-entity-causing-is-not-key-value-coding-compliant-fo</a></p>
<p>（7）<a href="http://stackoverflow.com/questions/2730832/how-can-i-duplicate-or-copy-a-core-data-managed-object" target="_blank" rel="external">http://stackoverflow.com/questions/2730832/how-can-i-duplicate-or-copy-a-core-data-managed-object</a></p>
<p>（8）<a href="http://stackoverflow.com/questions/3256195/how-to-deal-with-temporary-nsmanagedobject-instances" target="_blank" rel="external">http://stackoverflow.com/questions/3256195/how-to-deal-with-temporary-nsmanagedobject-instances</a></p>
<h5 id="CoreData数据库轻量迁移"><a href="#CoreData数据库轻量迁移" class="headerlink" title="CoreData数据库轻量迁移"></a>CoreData数据库轻量迁移</h5><p>CoreData数据库轻量迁移，针对于同一个iOSApp在版本升级(更新安装App)的过程中，需要注意的数据库迁移；如果不进行数据库迁移，则会导致，覆盖安装闪退。这里说的数据库迁移，特指：CoreData轻量数据库迁移。</p>
<p>CoreData轻量数据库迁移，具体步骤如下：</p>
<p>iPhone Core Data “Automatic Lightweight Migration”</p>
<p><a href="http://stackoverflow.com/questions/1830079/iphone-core-data-automatic-lightweight-migration" target="_blank" rel="external">http://stackoverflow.com/questions/1830079/iphone-core-data-automatic-lightweight-migration</a></p>
<p>To recap/Full guide:</p>
<p>1、 Before making any change, create a new model version.</p>
<p>In Xcode 4: Select your .xcdatamodel –&gt;&gt; Editor –&gt;&gt; Add Model Version.</p>
<p>In Xcode 3: Design –&gt;&gt; Data Model –&gt;&gt; Add Model Version.</p>
<p>You will see that a new .xcdatamodel is created in your .xcdatamodeld folder (which is also created if you have none).</p>
<p>2、    Save.</p>
<p>3、    Select your new .xcdatamodel and make the change you wish to employ in accordance withthe Lightweight Migration documentation.</p>
<p>4、 Save.</p>
<p>5、    Set the current/active schema to the newly created schema.</p>
<p>With the .xcdatamodeld folder selected:</p>
<p>In Xcode 4: Utilities sidebar –&gt;&gt; File Inspector –&gt;&gt; Versioned Core Data Model –&gt;&gt; Select the new schema.</p>
<p>In Xcode 3: Design –&gt;&gt; Data Model –&gt;&gt; Set Current Version.</p>
<p>The green tick on the .xcdatamodel icon will move to the new schema.</p>
<p>6、    Save.</p>
<p>7、    Implement the necessary code to perform migration at runtime.</p>
<p>Where your NSPersistentStoreCoordinator is created (usually AppDelegate class), for the options parameter, replace nil with the following code:</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[NSDictionary dictionaryWithObjectsAndKeys:</div><div class="line">[NSNumber numberWithBool:YES], NSMigratePersistentStoresAutomaticallyOption,</div><div class="line">[NSNumber numberWithBool:YES], NSInferMappingModelAutomaticallyOption, nil]</div></pre></td></tr></table></figure>
<p>8、    Run your app. If there’s no crash, you’ve probably successfully migrated :)</p>
<p>9、    When you have successfully migrated, the migration code (step 7) can be removed. (It is up to the developer to determine when the users of a published app can be deemed to have migrated.)</p>
<p><strong>IMPORTANT</strong>: Do not delete old model versions/schemas. Core Data needs the old version to migrate to the new version.</p>
<p>中文如下：</p>
<p>1、选中DB.xcdatamodeld  (对，那个绿色钩)<br><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-CoreData-MultiThreading-FactoryPattern-Singleton-migration_1.jpg" alt=""></p>
<p>2、Xcode工具栏中，Editor —&gt; Add Model Version<br>特别注意：先备份，再更改数据库。<br> v0.6.0_20150828_01.xcdatamodel<br>   其中：v0.6.0 —&gt; 数据库版本号<br>               20150828 —&gt; 日期,即哪天改动的。<br>               01 —&gt; 上面这个日期的第几次更改数据<br><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-CoreData-MultiThreading-FactoryPattern-Singleton-migration_2.jpg" alt=""></p>
<p> 表结构<br>    一般来说：<br>    数据表schema 由iOS开发组的一个成员来维护，以便减少 数据表schema 更改的次数。<br>    特别来说：<br>    对于已经上架AppStore的版本，一定要做好CoreData的数据迁移，否则在覆盖安装之后，app重新launch(启动)的时候，会闪退。</p>
<p>3、更改表结构，即编辑DB.xcdatamodeld文件。</p>
<p>特别说明：</p>
<p>如果 跳过第二步：2、Xcode工具栏中，Editor —&gt; Add Model Version<br>直接到第三部：3、更改表结构，即编辑DB.xcdatamodeld文件。<br>已经导致：覆盖安装崩溃。</p>
<p>补救方法如下：</p>
<p>1、不管你是用Git还是SVN，回到你更改数据库之前的一个时间点(代码的snapshot)，在那个时候备份数据模型文件(即对DB.xcdatamodeld 增加Model Version)。<br><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-CoreData-MultiThreading-FactoryPattern-Singleton-migration_3.jpg" alt=""></p>
<p>2、把这个增加的Model Version，添加到现在的DB.xcdatamodeld中。<br><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-CoreData-MultiThreading-FactoryPattern-Singleton-migration_4.jpg" alt=""></p>
<p>测试验证：覆盖安装，不崩溃。</p>
<h5 id="CoreData使用参考"><a href="#CoreData使用参考" class="headerlink" title="CoreData使用参考"></a>CoreData使用参考</h5><p><a href="http://blog.csdn.net/kesalin/article/details/6739319" target="_blank" rel="external">深入浅出 Cocoa 之 Core Data（1）- 框架详解</a></p>
<p><a href="http://blog.csdn.net/ryantang03/article/details/7794226" target="_blank" rel="external">IOS学习笔记16——Core Data</a></p>
<p><a href="http://blog.csdn.net/xiaowenwen1010/article/details/39534303" target="_blank" rel="external">iOS Coredata安全之多线程</a></p>
<p><a href="http://blog.csdn.net/a2657222/article/details/7551435" target="_blank" rel="external">iphone开发之数据库CoreData</a></p>
<p><a href="http://www.oschina.net/news/49051/core-data-10-errors" target="_blank" rel="external">iOS 开发中使用 Core Data 应避免的十个错误</a></p>
<p><a href="http://www.cnblogs.com/xiaodao/archive/2012/10/08/2715477.html" target="_blank" rel="external">iphone数据存储之－－ Core Data的使用（一）</a></p>
<p><a href="http://itjoy.org/?p=446" target="_blank" rel="external">IOS数据持久化–Core Data(一)</a></p>
<h5 id="CoreData使用特别注意"><a href="#CoreData使用特别注意" class="headerlink" title="CoreData使用特别注意"></a>CoreData使用特别注意</h5><p>1、每个NSThread实例，必须有各自的NSManagedObjectContext实例，该Context实际上是把db.sqlite文件读取到内存中(使用<strong>fault</strong>这种内存策略，建立索引，以减小内存占用)。</p>
<p>2、CoreData的数据库实体（即 Entity，继承自NSManagedObject），存在于各自所属NSThread实例的NSManagedObjectContext实例中，并且Entity <strong>不能</strong> 跨线程传递；如果 一定要 <strong>跨线程</strong> 传递Entity，请传递该Entity的主键(比如 myEntity.entityUUID)，然后在 <strong>另一个线程</strong> 使用 myEntity.entityUUID 从这个所谓 <strong>另一个线程</strong>  的Context，查找到这个Entity。</p>
<p>3、临时Entity数据，即 不打算 持久化的Entity，请使用 临时的Context，并且一定不能 [临时Context save]</p>
<p>4、Entity深拷贝？上面有代码。</p>
<p>5、CoreData 数据库迁移？CoreData 关系建立与移除？上面链接有。</p>
<h5 id="CoreData多线程数据合并、多线程数据同步"><a href="#CoreData多线程数据合并、多线程数据同步" class="headerlink" title="CoreData多线程数据合并、多线程数据同步"></a>CoreData多线程数据合并、多线程数据同步</h5><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"><span class="type">Updates</span> the persistent properties <span class="keyword">of</span> a managed <span class="keyword">object</span> to use the latest values <span class="keyword">from</span> the persistent store.</div><div class="line">                 </div><div class="line"><span class="type">If</span> flag <span class="keyword">is</span> <span class="type">YES</span>, this <span class="keyword">method</span> does <span class="keyword">not</span> affect <span class="built_in">any</span> transient properties; <span class="keyword">if</span> flag <span class="keyword">is</span> <span class="type">NO</span>, transient properties are disposed <span class="keyword">of</span>.</div><div class="line">*/</div><div class="line">[self refreshObject:obj mergeChanges:<span class="type">YES</span>];//参数<span class="type">YES</span></div></pre></td></tr></table></figure>
<p><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-CoreData-MultiThreading-FactoryPattern-Singleton-MultiThreadDataMerge.png" alt=""></p>
<h5 id="业务管理类的抽象基类"><a href="#业务管理类的抽象基类" class="headerlink" title="业务管理类的抽象基类"></a>业务管理类的抽象基类</h5><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">/* .h */</span></div><div class="line"></div><div class="line"><span class="comment">/*! @brief 业务管理类 的抽象基类</span></div><div class="line"> *  @author modify by OYXJ</div><div class="line"> */</div><div class="line"><span class="variable">@interface</span> <span class="attribute">AbstractManager </span>: NSObject</div><div class="line"><span class="comment">/**</span></div><div class="line"> *  @note 相信我，｀operationQueue｀ 不会为 nil 。</div><div class="line"> *  @attention 特别地，使用当前 `操作队列`， 进行 ｀读取、写入(特别注意写入) CoreData数据库的操作｀。</div><div class="line"> *  @see BusinessBlockOperation</div><div class="line"> *  @see BusinessSelectorOperation</div><div class="line"> *  @see 文档：`CoreData + 多线程 + 工厂模式 + 单例模式`</div><div class="line"> */</div><div class="line"><span class="variable">@property</span> (weak,readonly) CustomOperationQueue *operationQueue;</div></pre></td></tr></table></figure>
<h5 id="自定义操作（基于：Block）"><a href="#自定义操作（基于：Block）" class="headerlink" title="自定义操作（基于：Block）"></a>自定义操作（基于：Block）</h5><figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">/* .h */</span></div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> 自定义操作（基于：Block），说明 by OYXJ on 2016.08.30</div><div class="line"> </div><div class="line"> <span class="doctag">@note</span> 当前类依赖于这个方法：</div><div class="line">    ｀</div><div class="line">        合并数据</div><div class="line">        合并对象：调用这个方法后，当前线程上下文将合并其它线程有更改的对象。</div><div class="line">        此函数一般用在运行时间比较长的线程，比如循环比较多的线程。</div><div class="line">        [[BaseAccessor sharedBaseAccessor] mergeChangesManagedObjectsOnCurrentThread];</div><div class="line">    ｀</div><div class="line"> </div><div class="line"> <span class="doctag">@attention</span> 特别地，使用当前类处理 ｀读取、写入(特别注意写入) CoreData数据库的操作｀，因为：</div><div class="line">    ｀</div><div class="line">        当前类 在执行 block 之前，</div><div class="line">        会调用 [[BaseAccessor sharedBaseAccessor] mergeChangesManagedObjectsOnCurrentThread]; </div><div class="line">        从而 使得多个线程之间 的数据完成同步。</div><div class="line">    ｀</div><div class="line"> */</div><div class="line"><span class="meta">@interface</span> <span class="string">BusinessBlockOperation :</span> NSOperation</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> *  ARC, block will be copied</div><div class="line"> *</div><div class="line"> *  <span class="doctag">@param</span> block  block will be copied by `the returned object of current method`</div><div class="line"> *</div><div class="line"> *  <span class="doctag">@return</span> an initialized instance of current class.</div><div class="line"> *</div><div class="line"> *  <span class="doctag">@attention</span> please add the return `operation object` to an operation queue.</div><div class="line"> *</div><div class="line"> *  <span class="doctag">@attention</span> Specially，be sure that `block` will be executed synchronously.</div><div class="line"> *  <span class="doctag">@attention</span> 特别注意：请确保 ｀block｀ 将会 同步执行的。</div><div class="line"> *  <span class="doctag">@attention</span> 特别地，使用当前类处理 ｀读取、写入(特别注意写入) CoreData数据库的操作｀。</div><div class="line"> */</div><div class="line">+ (nullable instancetype)<span class="string">blockOperationWithBlock:</span>(<span class="keyword">void</span> (^ _Nonnull)(<span class="keyword">void</span>))block;</div><div class="line"></div><div class="line"><span class="meta">@end</span></div></pre></td></tr></table></figure>
<h5 id="自定义操作（基于：Selector）"><a href="#自定义操作（基于：Selector）" class="headerlink" title="自定义操作（基于：Selector）"></a>自定义操作（基于：Selector）</h5><figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">/* .h */</span></div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> 自定义操作（基于：Selector），说明 by OYXJ on 2016.08.30</div><div class="line"> </div><div class="line"> <span class="doctag">@note</span> 当前类依赖于这个方法：</div><div class="line">    ｀</div><div class="line">        合并数据</div><div class="line">        合并对象：调用这个方法后，当前线程上下文将合并其它线程有更改的对象。</div><div class="line">        此函数一般用在运行时间比较长的线程，比如循环比较多的线程。</div><div class="line">        [[BaseAccessor sharedBaseAccessor] mergeChangesManagedObjectsOnCurrentThread];</div><div class="line">    ｀</div><div class="line"> </div><div class="line"> <span class="doctag">@attention</span> 特别地，使用当前类处理 ｀读取、写入(特别注意写入) CoreData数据库的操作｀，因为：</div><div class="line">    ｀</div><div class="line">        当前类 在执行 target的sel方法 之前，</div><div class="line">        会调用 [[BaseAccessor sharedBaseAccessor] mergeChangesManagedObjectsOnCurrentThread]; </div><div class="line">        从而 使得多个线程之间 的数据完成同步。</div><div class="line">    ｀</div><div class="line"> */</div><div class="line"><span class="meta">@interface</span> <span class="string">BusinessSelectorOperation :</span> NSOperation</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> *  ARC, strong reference to param objs</div><div class="line"> *</div><div class="line"> *  <span class="doctag">@param</span> target strong referenced by `the returned object of current method`</div><div class="line"> *  <span class="doctag">@param</span> sel    not referenced by `the returned object of current method`</div><div class="line"> *  <span class="doctag">@param</span> arg    strong referenced by `the returned object of current method`, can be nil</div><div class="line"> *</div><div class="line"> *  <span class="doctag">@return</span> an initialized instance of current class.</div><div class="line"> *</div><div class="line"> *  <span class="doctag">@attention</span> please add the return `operation object` to an operation queue.</div><div class="line"> *</div><div class="line"> *  <span class="doctag">@attention</span> Specially，be sure that `sel` will be executed synchronously.</div><div class="line"> *  <span class="doctag">@attention</span> 特别注意：请确保 ｀sel｀ 将会 同步执行的。</div><div class="line"> *  <span class="doctag">@attention</span> 特别地，使用当前类处理 ｀读取、写入(特别注意写入) CoreData数据库的操作｀。</div><div class="line"> */</div><div class="line">- (nullable instancetype)<span class="string">initWithTarget:</span>(id _Nonnull __strong)target</div><div class="line"><span class="symbol">                               selector:</span>(SEL _Nonnull)sel</div><div class="line"><span class="symbol">                                 object:</span>(id _Nullable __strong)arg;</div><div class="line"><span class="meta">@end</span></div></pre></td></tr></table></figure>
<h5 id="自定义操作队列"><a href="#自定义操作队列" class="headerlink" title="自定义操作队列"></a>自定义操作队列</h5><figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">/* .h */</span></div><div class="line"></div><div class="line"><span class="comment">//! 自定义操作队列</span></div><div class="line"><span class="meta">@interface</span> <span class="string">CustomOperationQueue :</span> NSOperationQueue</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> <span class="doctag">@note</span> 单例</div><div class="line"> <span class="doctag">@attention</span> 特别地，使用当前类处理 ｀读取、写入(特别注意写入) CoreData数据库的操作｀，</div><div class="line">            因为：CoreData 多线程，线程之间数据的同步，多个线程上下文的性能。</div><div class="line"> */</div><div class="line">+ (CustomOperationQueue *)sharedCustomOperationQueue;</div></pre></td></tr></table></figure>
<h5 id="举个🌰-栗子-li-zi-for-example"><a href="#举个🌰-栗子-li-zi-for-example" class="headerlink" title="举个🌰(栗子 li zi ) for example"></a>举个🌰(栗子 li zi ) for example</h5><figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">#import</span> &lt;CAbstractManager/<span class="keyword">BusinessBlockOperation.h&gt; </span>//<span class="keyword">block写数据库(CoreData)</span></div><div class="line"></div><div class="line">//! 在后台线程，将所有 从服务端抓取的通话记录 保存到本地数据库中</div><div class="line"><span class="keyword">BusinessBlockOperation </span>*<span class="keyword">bOP </span>= [<span class="keyword">BusinessBlockOperation </span><span class="keyword">blockOperationWithBlock:^&#123;</span></div><div class="line">	// 将所有 从服务端抓取的通话记录 保存到本地数据库中</div><div class="line">	[[[<span class="keyword">BusinessManager </span>sharedManager] callRecordManager] saveCallRecordsThatFetchedFromServerAsDic:aDic]<span class="comment">;</span></div><div class="line">&#125;]<span class="comment">;</span></div><div class="line">// 将所有 从服务端抓取的通话记录 保存到本地数据库中</div><div class="line">[[[<span class="keyword">BusinessManager </span>sharedManager] callRecordManager].operationQueue <span class="keyword">addOperation:bOP];</span></div></pre></td></tr></table></figure>
<p><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-CoreData-MultiThreading-FactoryPattern-Singleton_1.png" alt="iOS-CoreData-MultiThreading-FactoryPattern-Singleton_1"></p>
<p><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-CoreData-MultiThreading-FactoryPattern-Singleton_2.png" alt="iOS-CoreData-MultiThreading-FactoryPattern-Singleton_2"></p>
<p><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-CoreData-MultiThreading-FactoryPattern-Singleton_3.png" alt="iOS-CoreData-MultiThreading-FactoryPattern-Singleton_3"></p>
<p><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-CoreData-MultiThreading-FactoryPattern-Singleton_4.png" alt="iOS-CoreData-MultiThreading-FactoryPattern-Singleton_4"></p>
<h6 id="栗子-1"><a href="#栗子-1" class="headerlink" title="栗子 1"></a>栗子 1</h6><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">//试点<span class="number">1</span>：写入数据库</div><div class="line"></div><div class="line">#import &lt;<span class="symbol">CAbstractManager</span>/<span class="symbol">BusinessBlockOperation</span>.h&gt; //block写数据库(<span class="symbol">CoreData</span>)</div><div class="line"></div><div class="line">dispatch_async(dispatch_get_global_queue(<span class="symbol">DISPATCH_QUEUE_PRIORITY_DEFAULT</span>, <span class="number">0</span>), ^&#123;</div><div class="line">	//! 在后台线程，将所有 从服务端抓取的通话记录 保存到本地数据库中</div><div class="line">	[[[<span class="symbol">BusinessManager</span> sharedManager] callRecordManager] saveCallRecordsThatFetchedFromServerAsDic:aDic];</div><div class="line">&#125;);</div><div class="line"></div><div class="line">//改成：</div><div class="line"></div><div class="line">//! 在自定义操作队列：将所有 从服务端抓取的通话记录 保存到本地数据库<span class="symbol">CoreData</span>中</div><div class="line"><span class="symbol">BusinessBlockOperation</span> *bOP = [<span class="symbol">BusinessBlockOperation</span> blockOperationWithBlock:^&#123;</div><div class="line">	<span class="comment">/*</span></div><div class="line">	特别注意：请确保 读写CoreData数据库的 ｀block｀ 将会 同步执行的。</div><div class="line">	*/</div><div class="line">	// 将所有 从服务端抓取的通话记录 保存到本地数据库<span class="symbol">CoreData</span>中</div><div class="line">	[[[<span class="symbol">BusinessManager</span> sharedManager] callRecordManager] saveCallRecordsThatFetchedFromServerAsDic:aDic];</div><div class="line">&#125;];</div><div class="line">// 将所有 从服务端抓取的通话记录 保存到本地数据库<span class="symbol">CoreData</span>中</div><div class="line">[[[<span class="symbol">BusinessManager</span> sharedManager] callRecordManager].operationQueue addOperation:bOP];</div></pre></td></tr></table></figure>
<h6 id="栗子-2"><a href="#栗子-2" class="headerlink" title="栗子 2"></a>栗子 2</h6><figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//试点2：网络请求，回调 写入数据库</span></div><div class="line"></div><div class="line">dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, <span class="number">0</span>), ^&#123;</div><div class="line"></div><div class="line">	<span class="comment">// 读写 本地数据库CoreData</span></div><div class="line">	HTmAccountEntity *currentAccountEntity = [[[BusinessManager sharedManager] systemAccountManager] currentLoginSystemAccount];</div><div class="line">	</div><div class="line">	<span class="keyword">if</span> (currentAccountEntity.portraitURL.length &gt; <span class="number">0</span>) &#123;<span class="comment">// 获取网络头像URL</span></div><div class="line">		</div><div class="line">		<span class="comment">// `逻辑层` 传递参数到 `网络层`，使用 字典(易于扩展) 或者 数据模型(编写时、编译时 有类型检查)，我选“字典”。</span></div><div class="line">	    NSDictionary *dic = @&#123;@<span class="string">"URLString"</span> : aPortraitURL?:@<span class="string">""</span>   ,   	  <span class="comment">//头像图片 URL地址</span></div><div class="line">                            @<span class="string">"fileAbsolutePath"</span> : tmp_aFileAbsolutePath?:@<span class="string">""</span>  <span class="comment">//头像图片 绝对路径，下载之后保存在本地的路径(临时文件)</span></div><div class="line">                            &#125;;</div><div class="line">	</div><div class="line">		<span class="comment">// processor属于｀处理层｀(捕获异常 放在 `网络层` 做吧)，可以 同步 或者 异步，看具体业务啦~</span></div><div class="line">		[processor <span class="string">requestService_query_portraitInfo:</span>dic <span class="string">success:</span>^(NSDictionary *serverResponse) &#123;</div><div class="line">                </div><div class="line">		    <span class="comment">/*</span></div><div class="line">		    注意：如果此处，要 读写CoreData数据库，那么取消注释 此代码。</div><div class="line">		    // 合并对象：调用这个方法后，当前线程上下文将合并其它线程有更改的对象。</div><div class="line">		    [[BaseAccessor sharedBaseAccessor] mergeChangesManagedObjectsOnCurrentThread];</div><div class="line">		    */</div><div class="line">	</div><div class="line">		    <span class="comment">// handle success</span></div><div class="line">		    <span class="comment">// DDLogVerbose (Debug时用)</span></div><div class="line"></div><div class="line">	    &#125;<span class="string">failure:</span>^(NSDictionary *errorDic) &#123;</div><div class="line">	    </div><div class="line">			<span class="comment">// handle error</span></div><div class="line">			<span class="comment">//  DDLogError (Debug/Release时用，然后 `反馈日志` 定时上传)</span></div><div class="line">	    &#125;];</div><div class="line"></div><div class="line">	&#125;<span class="keyword">else</span>&#123;</div><div class="line"></div><div class="line">		dispatch_async(dispatch_get_main_queue(), ^&#123;</div><div class="line">			<span class="keyword">if</span> (failure) &#123;</div><div class="line">				<span class="comment">//人为构造 errorDic：获取网络头像URL为nil</span></div><div class="line">	            failure(errorDic); <span class="comment">// <span class="doctag">TODO:</span> errorDic</span></div><div class="line">			&#125;</div><div class="line">		&#125;);</div><div class="line">	&#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">//改成：</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">//! 在自定义操作队列：读写 本地数据库CoreData</span></div><div class="line">BusinessBlockOperation *bOP = [BusinessBlockOperation <span class="string">blockOperationWithBlock:</span>^&#123;</div><div class="line">       </div><div class="line">	<span class="comment">// processor属于｀处理层｀(捕获异常 放在 `网络层` 做吧)，可以 同步 或者 异步，看具体业务啦~</span></div><div class="line">	[processor <span class="string">requestService_query_portraitInfo:</span>dic <span class="string">success:</span>^(NSDictionary *serverResponse) &#123;</div><div class="line">	</div><div class="line">        <span class="comment">//! 在自定义操作队列：读写 本地数据库CoreData</span></div><div class="line">        BusinessBlockOperation *blockOP = [BusinessBlockOperation <span class="string">blockOperationWithBlock:</span>^&#123;</div><div class="line">	        <span class="comment">/*</span></div><div class="line">	        特别注意：请确保 读写CoreData数据库的 ｀block｀ 将会 同步执行的。</div><div class="line">	        */</div><div class="line">	        <span class="keyword">if</span> ([serverResponse[@<span class="string">"ResultCode"</span>] <span class="string">isEqualToString:</span>@<span class="string">"0"</span>]) <span class="comment">//此App中，所有网络请求成功statusCode用字符串@"0"，要不要 使用数据模型呢？用起来好一些，后期再优化，独立开发App，时间来不及了。</span></div><div class="line">	        &#123;<span class="comment">//&lt;-- 解析数据 begin--&gt;//</span></div><div class="line">        </div><div class="line">	            NSDictionary *responseObject = serverResponse[@<span class="string">"ResponseObject"</span>];<span class="comment">//此App中，所有网络请求成功response数据用字典KEY为@"ResponseObject"，要不要 使用数据模型呢？用起来好一些，后期再优化，独立开发App，时间来不及了。</span></div><div class="line">            </div><div class="line">	            HTmAccountEntity *curAccountEntity = [[[BusinessManager sharedManager] systemAccountManager] currentLoginSystemAccount];</div><div class="line">	            <span class="comment">//! 更新 头像图片的 本地相对路径</span></div><div class="line">	            curAccountEntity.portraitPath = [fileAbsolutePath lastPathComponent];</div><div class="line">	            [accessor save]; <span class="comment">/* 每个业务管理Manager有个 accessor (数据存取器)*/</span></div><div class="line">                        </div><div class="line">	        &#125;<span class="comment">//&lt;-- 解析数据 end--&gt;//</span></div><div class="line">        </div><div class="line">	        dispatch_async(dispatch_get_main_queue(), ^&#123;</div><div class="line">		        <span class="keyword">if</span> (success) &#123;</div><div class="line">					success(serverResponse);</div><div class="line">		        &#125;</div><div class="line">            &#125;);<span class="comment">// &lt;-- dispatch async -- main queue --&gt; //</span></div><div class="line">        &#125;];<span class="comment">//&lt;— 在自定义操作队列：读写 本地数据库CoreData —&gt;//                </span></div><div class="line">    </div><div class="line">        <span class="comment">// 在自定义操作队列：读写 本地数据库CoreData</span></div><div class="line">        [[[BusinessManager sharedManager] systemAccountManager].operationQueue <span class="string">addOperation:</span>blockOP];</div><div class="line">                </div><div class="line"></div><div class="line">    &#125; <span class="string">failure:</span>^(NSDictionary *errorDic) &#123;</div><div class="line">                    </div><div class="line">                    </div><div class="line">        dispatch_async(dispatch_get_main_queue(), ^&#123;</div><div class="line">            <span class="keyword">if</span> (failure) &#123;</div><div class="line">                failure(errorDic);</div><div class="line">            &#125;</div><div class="line">        &#125;);<span class="comment">// &lt;-- dispatch async -- main queue --&gt; //</span></div><div class="line">                    </div><div class="line">    &#125;];</div><div class="line"></div><div class="line">&#125;];<span class="comment">// &lt;-- 在自定义操作队列：读写 本地数据库CoreData --&gt; //</span></div><div class="line">    </div><div class="line"><span class="comment">// 在自定义操作队列：读写 本地数据库CoreData</span></div><div class="line">[[[BusinessManager sharedManager] systemAccountManager].operationQueue <span class="string">addOperation:</span>bOP];</div></pre></td></tr></table></figure>
<p>这个例子好长，来，看两张美图，放松一下😌。</p>
<p><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-CoreData-MultiThreading-FactoryPattern-Singleton_5.png" alt="iOS-CoreData-MultiThreading-FactoryPattern-Singleton_5"></p>
<p><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-CoreData-MultiThreading-FactoryPattern-Singleton_6.png" alt="iOS-CoreData-MultiThreading-FactoryPattern-Singleton_6"></p>
<h6 id="栗子-3"><a href="#栗子-3" class="headerlink" title="栗子 3"></a>栗子 3</h6><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">#import <span class="meta-string">&lt;CAbstractManager/BusinessBlockOperation.h&gt;</span> //block写数据库(CoreData)</span></div><div class="line"></div><div class="line"><span class="built_in">dispatch_async</span>(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, <span class="number">0</span>), ^&#123;</div><div class="line">	<span class="comment">// 合并对象：调用这个方法后，当前线程上下文将合并其它线程有更改的对象。</span></div><div class="line">	[[BaseAccessor sharedBaseAccessor] mergeChangesManagedObjectsOnCurrentThread];  </div><div class="line">	</div><div class="line">	<span class="comment">/*</span></div><div class="line">	特别注意：请确保 读写CoreData数据库的 ｀block｀ 将会 同步执行的。</div><div class="line">	*/</div><div class="line"></div><div class="line">	<span class="comment">// do something here ....</span></div><div class="line"></div><div class="line">	<span class="built_in">dispatch_async</span>(dispatch_get_main_queue(), ^&#123;</div><div class="line">		<span class="keyword">if</span> (success) &#123;</div><div class="line">			success(responseDic);</div><div class="line">		&#125;</div><div class="line">	&#125;);<span class="comment">// &lt;-- dispatch async -- main queue --&gt; //</span></div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// 改成：</span></div><div class="line"></div><div class="line"><span class="comment">//! 在自定义操作队列：读写 本地数据库CoreData</span></div><div class="line">BusinessBlockOperation *bOP = [BusinessBlockOperation blockOperationWithBlock:^&#123;</div><div class="line">	<span class="comment">/*</span></div><div class="line">	 特别注意：请确保 读写CoreData数据库的 ｀block｀ 将会 同步执行的。</div><div class="line">	*/</div><div class="line"></div><div class="line">	<span class="comment">// do something here ...</span></div><div class="line"></div><div class="line">	<span class="built_in">dispatch_async</span>(dispatch_get_main_queue(), ^&#123;</div><div class="line">		<span class="keyword">if</span> (success) &#123;</div><div class="line">			success(responseDic);</div><div class="line">		&#125;</div><div class="line">	&#125;);<span class="comment">// &lt;-- dispatch async -- main queue --&gt; //</span></div><div class="line">&#125;];</div><div class="line"><span class="comment">// 在自定义操作队列：读写 本地数据库CoreData</span></div><div class="line">[[[BusinessManager sharedManager] systemAccountManager].operationQueue addOperation:bOP];</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">// 从 </span></div><div class="line"></div><div class="line"><span class="built_in">dispatch_async</span>(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, <span class="number">0</span>), ^&#123;</div><div class="line">	<span class="comment">/*</span></div><div class="line">	 特别注意：请确保 读写CoreData数据库的 ｀block｀ 将会 同步执行的。</div><div class="line">	*/</div><div class="line">	<span class="comment">//do something</span></div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// 改成：</span></div><div class="line"></div><div class="line"><span class="comment">//! 在自定义操作队列：读写 本地数据库CoreData</span></div><div class="line">BusinessBlockOperation *bOP = [BusinessBlockOperation blockOperationWithBlock:^&#123;</div><div class="line">	<span class="comment">/*</span></div><div class="line">	 特别注意：请确保 读写CoreData数据库的 ｀block｀ 将会 同步执行的。</div><div class="line">	*/</div><div class="line">	<span class="comment">//do something</span></div><div class="line">&#125;];<span class="comment">//&lt;—— 在自定义操作队列：读写 本地数据库CoreData ——&gt;//</span></div><div class="line"><span class="comment">// 在自定义操作队列：读写 本地数据库CoreData</span></div><div class="line">[[[BusinessManager sharedManager] systemAccountManager].operationQueue addOperation:bOP];</div></pre></td></tr></table></figure>
<h5 id="CoreData-谓词NSPredicate"><a href="#CoreData-谓词NSPredicate" class="headerlink" title="CoreData 谓词NSPredicate"></a>CoreData 谓词NSPredicate</h5><p><a href="http://nshipster.cn/nspredicate/" target="_blank" rel="external">nshipster.cn NSPredicate</a> NSPredicate是一个Foundation类，它指定数据被获取或者过滤的方式。它的查询语言就像SQL的WHERE和正则表达式的交叉一样，提供了具有表现力的，自然语言界面来定义一个集合被搜寻的逻辑条件。</p>
<p><a href="http://stackoverflow.com/questions/2740933/nspredicate-that-is-the-equivalent-of-sqls-like" target="_blank" rel="external">NSPredicate that is the equivalent of SQL’s LIKE</a></p>
<p><a href="http://userguide.icu-project.org/strings/regexp" target="_blank" rel="external">Regular Expressions</a></p>
<p><a href="http://nshipster.cn/nsexpression/" target="_blank" rel="external">nshipster.cn NSExpression</a></p>
<p><a href="http://nshipster.cn/kvc-collection-operators/" target="_blank" rel="external">KVC Collection Operators</a></p>
<p><a href="http://stackoverflow.com/questions/1164338/core-data-nspredicate-and-to-many-key?rq=1" target="_blank" rel="external">Core Data, NSPredicate and to-many key (CoreData数据关系 的 谓词1)</a><br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">NSPredicate</span> * dayIsNotExcludedPredicate = [NSPredicate predicateWithFormat: </div><div class="line">	@<span class="string">"excludedDays.<span class="variable">@count</span> == 0 || (excludedDays.<span class="variable">@count</span> &gt; 0 &amp;&amp; NONE excludedDays.day == %@))"</span>, </div><div class="line">	today];</div></pre></td></tr></table></figure></p>
<p><a href="http://stackoverflow.com/questions/1347776/how-to-correctly-setup-a-nspredicate-for-a-to-many-relationship-when-using-core?rq=1" target="_blank" rel="external">How to correctly setup a NSPredicate for a to-many relationship when using Core Data? (CoreData数据关系 的 谓词2)</a><br><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[NSPredicate predicateWithFormat:</div><div class="line">	<span class="meta">@"(excludedOccurrences.</span><span class="meta">@count</span> == 0) OR (0 == SUBQUERY(excludedOccurrences, $sub, $sub.day == %<span class="meta">@).</span><span class="meta">@count)",</span> </div><div class="line">	today]</div></pre></td></tr></table></figure></p>
<p><a href="http://stackoverflow.com/questions/2006927/whats-better-way-to-build-nspredicate-with-to-many-deep-relationships" target="_blank" rel="external">What’s better way to build NSPredicate with to-many deep relationships?  (CoreData数据关系 的 谓词3)</a></p>
<h5 id="CoreData的关系型数据"><a href="#CoreData的关系型数据" class="headerlink" title="CoreData的关系型数据"></a>CoreData的关系型数据</h5><p><img src="http://7xpc28.com1.z0.glb.clouddn.com/MyAppExample_CoreData_Schema.png" alt=""></p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*! @brief 联系人－数据模型</span></div><div class="line"> *  @author OuYangXiaoJin 2016.03.21</div><div class="line"> */</div><div class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">HTmContactEntity</span> : <span class="title">BaseManagedObject</span></span></div><div class="line"></div><div class="line"><span class="comment">// 这张table的其他field</span></div><div class="line"></div><div class="line"><span class="comment">// 下面是这张table与其他table的数据关系</span></div><div class="line"></div><div class="line"><span class="comment">//! 数据关系：当前联系人 所属 群组 （to-many）</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSSet</span>&lt;HTmGroupEntity*&gt;  *belongGroups;</div><div class="line"></div><div class="line"><span class="comment">//! 数据关系：当前联系人 包含 callee通话记录（to-many）</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSSet</span>&lt;HTmCallRecordEntity*&gt;  *hasCalleeRecords;</div><div class="line"></div><div class="line"><span class="comment">//! 数据关系：当前联系人 包含 caller通话记录（to-many）</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSSet</span>&lt;HTmCallRecordEntity*&gt;  *hasCallerRecords;</div><div class="line"></div><div class="line"><span class="comment">//! 数据关系：当前联系人 拥有 已经绑定的设备（to-many）</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSSet</span>&lt;HTmBindDeviceEntity *&gt;  *hasBindDevices;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">/*! @brief  CoreData关系型数据：联系人HTmContactEntity 和 其它Entity 的关系。</span></div><div class="line"> *  @author OuYangXiaoJin 2016.04.13</div><div class="line"> */</div><div class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">HTmContactEntity</span> (<span class="title">CoreDataGeneratedAccessors</span>)</span></div><div class="line"></div><div class="line"><span class="comment">//! 数据关系：当前联系人 所属 群组</span></div><div class="line">- (<span class="keyword">void</span>)addBelongGroupsObject:(HTmGroupEntity *)value;</div><div class="line">- (<span class="keyword">void</span>)removeBelongGroupsObject:(HTmGroupEntity *)value;</div><div class="line">- (<span class="keyword">void</span>)addBelongGroups:(<span class="built_in">NSSet</span> *)values;</div><div class="line">- (<span class="keyword">void</span>)removeBelongGroups:(<span class="built_in">NSSet</span> *)values;</div><div class="line"></div><div class="line"><span class="comment">//! 数据关系：当前联系人 包含 callee通话记录</span></div><div class="line">- (<span class="keyword">void</span>)addHasCalleeRecordsObject:(HTmCallRecordEntity *)value;</div><div class="line">- (<span class="keyword">void</span>)removeHasCalleeRecordsObject:(HTmCallRecordEntity *)value;</div><div class="line">- (<span class="keyword">void</span>)addHasCalleeRecords:(<span class="built_in">NSSet</span> *)values;</div><div class="line">- (<span class="keyword">void</span>)removeHasCalleeRecords:(<span class="built_in">NSSet</span> *)values;</div><div class="line"></div><div class="line"><span class="comment">//! 数据关系：当前联系人 包含 caller通话记录</span></div><div class="line">- (<span class="keyword">void</span>)addHasCallerRecordsObject:(HTmCallRecordEntity *)value;</div><div class="line">- (<span class="keyword">void</span>)removeHasCallerRecordsObject:(HTmCallRecordEntity *)value;</div><div class="line">- (<span class="keyword">void</span>)addHasCallerRecords:(<span class="built_in">NSSet</span> *)values;</div><div class="line">- (<span class="keyword">void</span>)removeHasCallerRecords:(<span class="built_in">NSSet</span> *)values;</div><div class="line"></div><div class="line"><span class="comment">//! 数据关系：当前联系人 拥有 已经绑定的设备</span></div><div class="line">- (<span class="keyword">void</span>)addHasBindDevicesObject:(HTmBindDeviceEntity *)value;</div><div class="line">- (<span class="keyword">void</span>)removeHasBindDevicesObject:(HTmBindDeviceEntity *)value;</div><div class="line">- (<span class="keyword">void</span>)addHasBindDevices:(<span class="built_in">NSSet</span> *)values;</div><div class="line">- (<span class="keyword">void</span>)removeHasBindDevices:(<span class="built_in">NSSet</span> *)values;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line">移除 数据关系 (many-many)</div><div class="line"> */</div><div class="line">[obj                  removeBelongAccountsObject: currentAccountEntity];</div><div class="line">[currentAccountEntity removeHasBindDevicesObject: obj];</div><div class="line">                                                </div><div class="line"><span class="comment">/**</span></div><div class="line">建立 数据关系 (many-many)</div><div class="line">*/</div><div class="line">[currentAccountEntity addHasBindDevicesObject: aBdEntity];</div><div class="line">[aBdEntity            addBelongAccountsObject: currentAccountEntity];</div></pre></td></tr></table></figure>
<h5 id="CoreData的Entity深拷贝"><a href="#CoreData的Entity深拷贝" class="headerlink" title="CoreData的Entity深拷贝"></a>CoreData的Entity深拷贝</h5><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*! @brief  深拷贝</span></div><div class="line"> *</div><div class="line"> *  @param  source 拷贝源。</div><div class="line"> *  @param  context 上下文，可以为nil。</div><div class="line"> *</div><div class="line"> *  @return 实体，使用时请强制转换成 相应的实体。</div><div class="line"> */</div><div class="line">+ (<span class="built_in">NSManagedObject</span> *)clone:(<span class="built_in">NSManagedObject</span> *)source</div><div class="line">                 inContext:(<span class="built_in">NSManagedObjectContext</span> *)context</div><div class="line">&#123;</div><div class="line">    <span class="comment">//  预处理</span></div><div class="line">    <span class="keyword">if</span> (<span class="literal">nil</span> == context) &#123;<span class="comment">//参数context上下文为nil，则与拷贝源source使用同一个上下文。</span></div><div class="line">        context = [source managedObjectContext];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (<span class="literal">nil</span> == [source managedObjectContext]) &#123;<span class="comment">//拷贝源source的上下文不存在，说明此拷贝源source 已经是拷贝的了。</span></div><div class="line">        <span class="keyword">return</span> source;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/*</span></div><div class="line">     How can I duplicate, or copy a Core Data Managed Object?</div><div class="line">     Ref.:  http://stackoverflow.com/questions/2730832/how-can-i-duplicate-or-copy-a-core-data-managed-object</div><div class="line">     */</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">/*</span></div><div class="line">     //注释这里。不能把 克隆的数据cloned 插入 source的上下文context，因为会导致上下文context中 数据重复。</div><div class="line">     //create new object in data store</div><div class="line">     NSManagedObject *cloned = [NSEntityDescription</div><div class="line">                                insertNewObjectForEntityForName:entityName</div><div class="line">                                inManagedObjectContext:context];</div><div class="line">     */</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">/*</span></div><div class="line">     How to Deal with Temporary NSManagedObject instances?</div><div class="line">     Ref.:  http://stackoverflow.com/questions/3256195/how-to-deal-with-temporary-nsmanagedobject-instances</div><div class="line">     */</div><div class="line">    <span class="built_in">NSEntityDescription</span> *entity = [source entity];</div><div class="line">    <span class="built_in">NSManagedObject</span> *cloned = [[<span class="built_in">NSManagedObject</span> alloc] initWithEntity:entity</div><div class="line">                                       insertIntoManagedObjectContext:<span class="literal">nil</span>];</div><div class="line"></div><div class="line"></div><div class="line">    <span class="built_in">NSString</span> *entityName = [[source entity] name];</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">//loop through all attributes and assign then to the clone</span></div><div class="line">    <span class="built_in">NSDictionary</span> *attributes = [[<span class="built_in">NSEntityDescription</span></div><div class="line">                                 entityForName:entityName</div><div class="line">                                 inManagedObjectContext:context] attributesByName];</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (<span class="built_in">NSString</span> *attr <span class="keyword">in</span> attributes) &#123;</div><div class="line">        [cloned setValue:[source valueForKey:attr] forKey:attr];</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//Loop through all relationships, and clone them.</span></div><div class="line">    <span class="built_in">NSDictionary</span> *relationships = [[<span class="built_in">NSEntityDescription</span></div><div class="line">                                    entityForName:entityName</div><div class="line">                                    inManagedObjectContext:context] relationshipsByName];</div><div class="line">    <span class="keyword">for</span> (<span class="built_in">NSRelationshipDescription</span> *rel <span class="keyword">in</span> relationships)&#123;</div><div class="line">        <span class="built_in">NSString</span> *keyName = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%@"</span>,rel];</div><div class="line">        <span class="comment">//get a set of all objects in the relationship</span></div><div class="line">        <span class="built_in">NSMutableSet</span> *sourceSet = [source mutableSetValueForKey:keyName];</div><div class="line">        <span class="built_in">NSMutableSet</span> *clonedSet = [cloned mutableSetValueForKey:keyName];</div><div class="line">        <span class="built_in">NSEnumerator</span> *e = [sourceSet objectEnumerator];</div><div class="line">        <span class="built_in">NSManagedObject</span> *relatedObject;</div><div class="line">        <span class="keyword">while</span> ( relatedObject = [e nextObject])&#123;</div><div class="line">            <span class="comment">//Clone it, and add clone to set</span></div><div class="line">            <span class="built_in">NSManagedObject</span> *clonedRelatedObject = [<span class="keyword">self</span> clone:relatedObject</div><div class="line">                                                     inContext:context];</div><div class="line">            [clonedSet addObject:clonedRelatedObject];</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> cloned;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>CoreData实体Entity深度拷贝(每一个‘字段’、每一个‘数据关系’)，Context上下文 数据重复，导致PersistentStoreFile数据库重复 —&gt; fix BUG —&gt; 自测 通过。</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#pragma mark - 实体更新 - private</span></div><div class="line"></div><div class="line"><span class="comment">/*! @brief  实体更新：把 sourceEntity实体的所有字段 覆盖 destinationEntity实体的所有字段 (除了attributeNames这些字段)。</span></div><div class="line"> *</div><div class="line"> *  @param  sourceEntity 源头 数据实体。</div><div class="line"> *  @param  context 源头 数据实体，所在的 上下文。</div><div class="line"> *  @param  destinationEntity 目标 数据实体。</div><div class="line"> *  @param  attributeNames 跳过 这些字段。</div><div class="line"> *</div><div class="line"> *  @return 把 sourceEntity实体的所有字段 覆盖 destinationEntity实体的所有字段 (除了attributeNames这些字段)；</div><div class="line"> 若 成功，则YES；否则 NO。</div><div class="line"> */</div><div class="line">+ (<span class="built_in">BOOL</span>)p_cloneSourceEntity:(<span class="built_in">NSManagedObject</span> *_Nonnull)sourceEntity</div><div class="line">                  inContext:(<span class="built_in">NSManagedObjectContext</span> *_Nullable)sourceEntityInContext</div><div class="line">      intoDestinationEntity:(<span class="built_in">NSManagedObject</span> *_Nonnull __<span class="keyword">strong</span> *_Nonnull)destinationEntity</div><div class="line">            insertInContext:(<span class="built_in">NSManagedObjectContext</span> *_Nonnull __<span class="keyword">strong</span> *_Nonnull)destinationEntityInsertContext</div><div class="line">           ignoreAttributes:(<span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span>*&gt; *_Nullable)ignoreAttributeNames</div><div class="line">    relationshipDescription:(<span class="built_in">NSMutableArray</span>&lt;<span class="built_in">NSRelationshipDescription</span>*&gt; *_Nonnull __<span class="keyword">strong</span> *_Nonnull)hasLoopThroughRelationshipDescription;</div><div class="line">&#123;</div><div class="line">    <span class="built_in">BOOL</span> isSuccess = <span class="literal">NO</span>;</div><div class="line">    </div><div class="line">    <span class="comment">/**</span></div><div class="line">     注意：&amp;errorOnMain，是double pointer。</div><div class="line">     How do pointer to pointers work in C? ------ double pointer</div><div class="line">     http://stackoverflow.com/questions/897366/how-do-pointer-to-pointers-work-in-c</div><div class="line">     by OYXJ 2015-09－02</div><div class="line">     */</div><div class="line">    <span class="built_in">NSManagedObject</span> *source = sourceEntity;       <span class="comment">// 注意，这里一定是 strong reference。</span></div><div class="line">    <span class="built_in">NSManagedObject</span> *cloned = *destinationEntity; <span class="comment">// 注意，这里一定是 strong reference。</span></div><div class="line">    </div><div class="line">    </div><div class="line">    <span class="comment">//  预处理</span></div><div class="line">    <span class="keyword">if</span> (<span class="literal">nil</span> == sourceEntityInContext) &#123;<span class="comment">//参数context上下文为nil，则与拷贝源source使用同一个上下文。</span></div><div class="line">        sourceEntityInContext = [source managedObjectContext];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (<span class="literal">nil</span> == [source managedObjectContext]) &#123;</div><div class="line">        <span class="comment">// 注意，context一定不能为nil。</span></div><div class="line">        DDLogError(<span class="string">@"%@ %@, %@"</span>, THIS_FILE,THIS_METHOD, <span class="string">@"注意，context一定不能为nil。"</span>);</div><div class="line">        isSuccess = <span class="literal">NO</span>;</div><div class="line">        <span class="keyword">return</span> isSuccess; <span class="comment">// 返回NO</span></div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    </div><div class="line">    <span class="comment">/*</span></div><div class="line">     How can I duplicate, or copy a Core Data Managed Object?</div><div class="line">     Ref.:  http://stackoverflow.com/questions/2730832/how-can-i-duplicate-or-copy-a-core-data-managed-object</div><div class="line">     */</div><div class="line">    </div><div class="line">    &#123;<span class="comment">//[begin] --- 实体拷贝</span></div><div class="line">        <span class="comment">/**</span></div><div class="line">         拷贝对象cloned  每个'字段'、每个'数据关系' 重新赋值</div><div class="line">         */</div><div class="line">        <span class="built_in">NSString</span> *entityName = [[source entity] name];<span class="comment">//表名</span></div><div class="line">        </div><div class="line">        </div><div class="line">        <span class="comment">//loop through all attributes and assign then to the clone</span></div><div class="line">        <span class="built_in">NSDictionary</span>&lt;<span class="built_in">NSString</span> *, <span class="built_in">NSAttributeDescription</span> *&gt; *attributes =</div><div class="line">            [[<span class="built_in">NSEntityDescription</span> entityForName: entityName</div><div class="line">                         inManagedObjectContext: sourceEntityInContext] <span class="comment">//Raises NSInternalInconsistencyException if context is nil.</span></div><div class="line">             attributesByName];</div><div class="line">        <span class="keyword">for</span> (<span class="built_in">NSString</span> *attr <span class="keyword">in</span> attributes) &#123;<span class="comment">//遍历 每个字段</span></div><div class="line">            <span class="built_in">BOOL</span> isIgnoreAttr = <span class="literal">NO</span>;<span class="comment">//是否 忽略该字段</span></div><div class="line">            <span class="keyword">for</span> (<span class="built_in">NSString</span> *each_ignoreAttr <span class="keyword">in</span> ignoreAttributeNames) &#123;</div><div class="line">                <span class="keyword">if</span> ([attr isEqualToString:each_ignoreAttr]) &#123;</div><div class="line">                    isIgnoreAttr = <span class="literal">YES</span>;<span class="comment">//是否 忽略该字段 --- YES</span></div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span> (isIgnoreAttr==<span class="literal">NO</span>) &#123;<span class="comment">//是否 忽略该字段 --- NO</span></div><div class="line">                [cloned setValue:[source valueForKey:attr] forKey:attr];<span class="comment">//loop through all attributes and assign then to the clone</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        <span class="comment">//Loop through all relationships, and clone them.</span></div><div class="line">        <span class="built_in">NSDictionary</span>&lt;<span class="built_in">NSString</span> *, <span class="built_in">NSRelationshipDescription</span> *&gt; *relationships =</div><div class="line">            [[<span class="built_in">NSEntityDescription</span> entityForName: entityName</div><div class="line">                         inManagedObjectContext: sourceEntityInContext] <span class="comment">//Raises NSInternalInconsistencyException if context is nil.</span></div><div class="line">                relationshipsByName];</div><div class="line">        <span class="keyword">for</span> (<span class="built_in">NSRelationshipDescription</span> *rel <span class="keyword">in</span> relationships)&#123;<span class="comment">//遍历 每个‘数据关系’</span></div><div class="line">            <span class="keyword">if</span> ([*hasLoopThroughRelationshipDescription containsObject:rel])&#123;<span class="comment">//退出"递归"的条件</span></div><div class="line">                <span class="keyword">continue</span>;<span class="comment">// 这个是，退出“递归”。</span></div><div class="line">            &#125;<span class="keyword">else</span>&#123;</div><div class="line">                <span class="comment">//根据 CoreData每一张表的数据关系链，遍历。记录此数据关系；以便之后 退出“递归”。</span></div><div class="line">                [*hasLoopThroughRelationshipDescription addObject:rel];</div><div class="line">            &#125;</div><div class="line">            </div><div class="line">            <span class="built_in">NSString</span> *keyName = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%@"</span>,rel];</div><div class="line">            </div><div class="line">            <span class="built_in">BOOL</span> isIgnoreRel = <span class="literal">NO</span>;<span class="comment">//是否 忽略该'数据关系'</span></div><div class="line">            <span class="keyword">for</span> (<span class="built_in">NSString</span> *each_ignoreAttr <span class="keyword">in</span> ignoreAttributeNames) &#123;</div><div class="line">                <span class="keyword">if</span> ([keyName isEqualToString:each_ignoreAttr]) &#123;</div><div class="line">                    isIgnoreRel = <span class="literal">YES</span>;<span class="comment">//是否 忽略该'数据关系' --- YES</span></div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span> (isIgnoreRel==<span class="literal">YES</span>) &#123;<span class="comment">//是否 忽略该'数据关系' --- YES</span></div><div class="line">                <span class="keyword">continue</span>;<span class="comment">//忽略该'数据关系'</span></div><div class="line">            &#125;</div><div class="line">            </div><div class="line">            </div><div class="line">            <span class="comment">//to-one relationship ？</span></div><div class="line">            <span class="comment">//- (nullable id)valueForKey:(NSString *)key;</span></div><div class="line">            </div><div class="line">            <span class="comment">//to-many relationship ？</span></div><div class="line">            <span class="comment">//- (NSMutableSet *)mutableSetValueForKey:(NSString *)key;</span></div><div class="line">            </div><div class="line">            <span class="comment">/*</span></div><div class="line">             NSKeyValueCoding.h   valueForKey</div><div class="line">             </div><div class="line">             Ref.:  Apple Document</div><div class="line">             </div><div class="line">            Given a key that identifies an attribute or to-one relationship, return the attribute value or the related object. Given a key that identifies a to-many relationship, return an immutable array or an immutable set that contains all of the related objects.</div><div class="line">            */</div><div class="line">            <span class="keyword">id</span> sourceId = [source valueForKey:keyName];<span class="comment">//to-one relationship OR to-many relationship</span></div><div class="line">            <span class="comment">// id clonedID = [cloned valueForKey:keyName];//to-one relationship OR to-many relationship</span></div><div class="line">            <span class="keyword">if</span> (sourceId) &#123;</div><div class="line">                </div><div class="line">                <span class="keyword">if</span> ([sourceId isKindOfClass:[<span class="built_in">NSArray</span> <span class="keyword">class</span>]] || [sourceId isKindOfClass:[<span class="built_in">NSSet</span> <span class="keyword">class</span>]]) &#123;<span class="comment">//to-many relationship</span></div><div class="line">                    </div><div class="line">                    <span class="comment">/*</span></div><div class="line">                     NSKeyValueCoding.h   mutableSetValueForKey</div><div class="line">                     </div><div class="line">                     Ref.:  Apple Document</div><div class="line">                     </div><div class="line">                     Given a key that identifies an _unordered_ and uniquing to-many relationship, return a mutable set that provides read-write access to the related objects. Objects added to the mutable set will become related to the receiver, and objects removed from the mutable set will become unrelated.</div><div class="line">                     */</div><div class="line">                    <span class="comment">//get a set of all objects in the relationship</span></div><div class="line">                    <span class="built_in">NSMutableSet</span> *sourceSet = [source mutableSetValueForKey:keyName];<span class="comment">//to-many relationship</span></div><div class="line">                    <span class="built_in">NSMutableSet</span> *clonedSet = [cloned mutableSetValueForKey:keyName];<span class="comment">//to-many relationship</span></div><div class="line">                    <span class="built_in">NSEnumerator</span> *e = [[sourceSet mutableCopy] objectEnumerator];<span class="comment">// <span class="doctag">TODO:</span> mutableCopy <span class="doctag">TODO:</span> ??</span></div><div class="line">                    <span class="built_in">NSManagedObject</span> *relatedObject;</div><div class="line">                    <span class="keyword">while</span> ( relatedObject = [e nextObject])&#123;</div><div class="line">                        <span class="comment">//Clone it, and add clone to set</span></div><div class="line">                        </div><div class="line">                        <span class="comment">/*</span></div><div class="line">                         注释 此处的代码 --- [begin]</div><div class="line">                         </div><div class="line">                         NSManagedObject *clonedRelatedObject = [self clone: relatedObject</div><div class="line">                                                                  inContext: context];</div><div class="line">                         [clonedSet addObject: clonedRelatedObject];</div><div class="line">                         </div><div class="line">                         注释 此处的代码 --- [end]</div><div class="line">                         */</div><div class="line">                        </div><div class="line">                        </div><div class="line">                        <span class="comment">/*</span></div><div class="line">                         How to Deal with Temporary NSManagedObject instances?</div><div class="line">                         Ref.:  http://stackoverflow.com/questions/3256195/how-to-deal-with-temporary-nsmanagedobject-instances</div><div class="line">                         */</div><div class="line"><span class="comment">//                        NSEntityDescription *local_entityDesc = [relatedObject entity];</span></div><div class="line"><span class="comment">//                        NSManagedObject *local_clonedRelatedObject =</span></div><div class="line"><span class="comment">//                            [[NSManagedObject alloc] initWithEntity: local_entityDesc</span></div><div class="line"><span class="comment">//                                     insertIntoManagedObjectContext: *destinationEntityInsertContext];//这里会导致数据库的数据重复，所以注释。</span></div><div class="line">                        </div><div class="line">                        <span class="built_in">NSManagedObject</span> *local_clonedRelatedObject = [<span class="keyword">self</span> p_existingObjectWithID: relatedObject.objectID</div><div class="line">                                                                                        inContext: *destinationEntityInsertContext];</div><div class="line">                        <span class="keyword">if</span> (local_clonedRelatedObject) &#123;</div><div class="line"></div><div class="line">                            <span class="comment">// // NSManagedObjectContext *local_context = [relatedObject managedObjectContext];</span></div><div class="line">                            </div><div class="line">                            <span class="built_in">BOOL</span> isSuc = [<span class="keyword">self</span> p_cloneSourceEntity: relatedObject</div><div class="line">                                                         inContext: sourceEntityInContext</div><div class="line">                                             intoDestinationEntity: &amp;local_clonedRelatedObject              <span class="comment">//double pointer</span></div><div class="line">                                                   insertInContext: destinationEntityInsertContext          <span class="comment">//double pointer</span></div><div class="line">                                                  ignoreAttributes: ignoreAttributeNames</div><div class="line">                                           relationshipDescription: hasLoopThroughRelationshipDescription]; <span class="comment">//double pointer</span></div><div class="line">                            </div><div class="line">                            <span class="keyword">if</span> (isSuc) &#123;</div><div class="line">                                <span class="comment">//Objects added to the mutable set will become related to the receiver, and objects removed from the mutable set will become unrelated.</span></div><div class="line">                                [clonedSet addObject:local_clonedRelatedObject];<span class="comment">//Loop through all relationships, and clone them.</span></div><div class="line">                            &#125;</div><div class="line">                        &#125;</div><div class="line">                    &#125;<span class="comment">//&lt;--- while遍历 ---&gt;//</span></div><div class="line">                    </div><div class="line">                &#125;<span class="keyword">else</span>&#123;<span class="comment">//to-one relationship</span></div><div class="line">                    </div><div class="line">                    <span class="built_in">NSManagedObject</span> *relatedObject = sourceId;</div><div class="line">                    </div><div class="line">                    <span class="comment">/*</span></div><div class="line">                     How to Deal with Temporary NSManagedObject instances?</div><div class="line">                     Ref.:  http://stackoverflow.com/questions/3256195/how-to-deal-with-temporary-nsmanagedobject-instances</div><div class="line">                     */</div><div class="line"><span class="comment">//                    NSEntityDescription *local_entityDesc = [relatedObject entity];</span></div><div class="line"><span class="comment">//                    NSManagedObject *local_clonedRelatedObject =</span></div><div class="line"><span class="comment">//                        [[NSManagedObject alloc] initWithEntity: local_entityDesc</span></div><div class="line"><span class="comment">//                                 insertIntoManagedObjectContext: *destinationEntityInsertContext];//这里会导致数据库的数据重复，所以注释。</span></div><div class="line">                    </div><div class="line">                    <span class="built_in">NSManagedObject</span> *local_clonedRelatedObject = [<span class="keyword">self</span> p_existingObjectWithID: relatedObject.objectID</div><div class="line">                                                                                    inContext: *destinationEntityInsertContext];</div><div class="line">                    <span class="keyword">if</span> (local_clonedRelatedObject) &#123;</div><div class="line">                        </div><div class="line">                        <span class="comment">// // NSManagedObjectContext *local_context = [relatedObject managedObjectContext];</span></div><div class="line"></div><div class="line">                        <span class="built_in">BOOL</span> isSuc = [<span class="keyword">self</span> p_cloneSourceEntity: relatedObject</div><div class="line">                                                     inContext: sourceEntityInContext</div><div class="line">                                         intoDestinationEntity: &amp;local_clonedRelatedObject                  <span class="comment">//double pointer</span></div><div class="line">                                               insertInContext: destinationEntityInsertContext              <span class="comment">//double pointer</span></div><div class="line">                                              ignoreAttributes: ignoreAttributeNames</div><div class="line">                                       relationshipDescription: hasLoopThroughRelationshipDescription];     <span class="comment">//double pointer</span></div><div class="line"></div><div class="line">                        <span class="keyword">if</span> (isSuc) &#123;</div><div class="line">                            <span class="comment">//Objects added to the mutable set will become related to the receiver, and objects removed from the mutable set will become unrelated.</span></div><div class="line">                            <span class="comment">// // id clonedID = [cloned valueForKey:keyName];//to-one relationship OR to-many relationship</span></div><div class="line">                            <span class="comment">// // clonedID = local_clonedRelatedObject;</span></div><div class="line">                            [cloned setValue:local_clonedRelatedObject forKey:keyName];<span class="comment">//Loop through all relationships, and clone them.</span></div><div class="line">                        &#125;</div><div class="line">                        </div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            </div><div class="line">        &#125;<span class="comment">//&lt;--- for遍历 ---&gt;//</span></div><div class="line">        </div><div class="line">        </div><div class="line">        isSuccess = <span class="literal">YES</span>; <span class="comment">// 这个很重要 ！</span></div><div class="line">    &#125;<span class="comment">//[end] --- 实体拷贝</span></div><div class="line">    </div><div class="line">    </div><div class="line">    <span class="keyword">return</span> isSuccess;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> 依赖方法： - (NSManagedObject *)existingObjectWithID:(NSManagedObjectID *)objectID error:(NSError **)error</div><div class="line"> </div><div class="line"> Return Value：</div><div class="line"> The object specified by objectID. If the object cannot be fetched, or does not exist, or cannot be faulted, it returns nil.</div><div class="line"> </div><div class="line"> Discussion：</div><div class="line"> If there is a managed object with the given ID already registered in the context, that object is returned directly; otherwise the corresponding object is faulted into the context.</div><div class="line"> </div><div class="line"> This method might perform I/O if the data is uncached.</div><div class="line"> </div><div class="line"> Unlike objectWithID:, this method never returns a fault.</div><div class="line"> */</div><div class="line">+ (<span class="built_in">NSManagedObject</span> *)p_existingObjectWithID:(<span class="built_in">NSManagedObjectID</span> *)aObjectID</div><div class="line">                                  inContext:(<span class="built_in">NSManagedObjectContext</span> *)aContext</div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span>(!aObjectID)</div><div class="line">    &#123;</div><div class="line">        DDLogError(<span class="string">@"%@ %@ ,%@"</span>, THIS_FILE,THIS_METHOD, <span class="string">@"参数 aObjectID is nil"</span>);</div><div class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">NSManagedObject</span> *object = <span class="literal">nil</span>;</div><div class="line">    <span class="built_in">NSError</span> * opError = <span class="literal">nil</span>;</div><div class="line">    &#123;</div><div class="line">        object = [aContext existingObjectWithID:aObjectID error:&amp;opError];</div><div class="line">        <span class="keyword">if</span>(opError)</div><div class="line">        &#123;</div><div class="line">            DDLogError(<span class="string">@"%@ %@ , error:%@"</span>, THIS_FILE,THIS_METHOD, opError);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(!object)</div><div class="line">        &#123;</div><div class="line">            DDLogError(<span class="string">@"%@ %@ , %@ %@"</span>, THIS_FILE,THIS_METHOD, aObjectID, <span class="string">@"查询：object is nil"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    DDLogError(<span class="string">@"%@ %@ , %@ %@"</span>, THIS_FILE,THIS_METHOD, aObjectID, <span class="string">@"查询：object is found"</span>);</div><div class="line">    <span class="keyword">return</span> object;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>entity深拷贝，举例：</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div></pre></td><td class="code"><pre><div class="line">应用于  HTmLocalAddressBookInviteController.m （本地通讯录-邀请页面）</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> *  关联 临时实体 的 临时上下文</div><div class="line"> *  @attention 临时上下文 可以insert 临时实体；</div><div class="line"> *  @attention 临时上下文 一定不能save，切记切记！</div><div class="line"> *</div><div class="line"> *  @return 临时上下文</div><div class="line"> */</div><div class="line">- (<span class="built_in">NSManagedObjectContext</span> *)tempMainQueueContext</div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> (!_tempMainQueueContext) &#123;</div><div class="line"><span class="comment">//        _tempMainQueueContext = (&#123;</span></div><div class="line">        </div><div class="line">        </div><div class="line">            <span class="comment">//! 当前线程 的托管对象上下文</span></div><div class="line">            <span class="built_in">NSManagedObjectContext</span> *curThreadContext = [[DataBaseManager sharedDataBaseManager]</div><div class="line">                                                        currentThreadManagedObjectContext];</div><div class="line">            </div><div class="line">            </div><div class="line">            <span class="comment">/**</span></div><div class="line">             临时的 主队列Context：关联 临时实体 的 临时上下文</div><div class="line">             @attention 临时上下文 可以insert 临时实体；</div><div class="line">             @attention 临时上下文 一定不能save，切记切记！</div><div class="line">             */</div><div class="line">        _tempMainQueueContext</div><div class="line">            <span class="comment">/*NSManagedObjectContext *mainQueueContext*/</span> = [[<span class="built_in">NSManagedObjectContext</span> alloc] initWithConcurrencyType:</div><div class="line">                                                        <span class="built_in">NSMainQueueConcurrencyType</span>];</div><div class="line">            [_tempMainQueueContext setPersistentStoreCoordinator: curThreadContext.persistentStoreCoordinator];<span class="comment">//共用一个Coordinator</span></div><div class="line">            [_tempMainQueueContext setMergePolicy:                curThreadContext.mergePolicy];</div><div class="line">            [_tempMainQueueContext setUndoManager: <span class="literal">nil</span>];</div><div class="line">            </div><div class="line">        </div><div class="line">        </div><div class="line">            &#123;<span class="comment">//</span></div><div class="line">                <span class="built_in">NSMutableArray</span>&lt;HTmContactEntity *&gt;  *myArr = [[<span class="built_in">NSMutableArray</span> alloc] initWithCapacity:<span class="number">2</span>];</div><div class="line">                </div><div class="line">                <span class="comment">//! iPhoneAddressBook通讯录 不支持HomeTime 的联系人 (这是 临时上下文 的 临时实体)</span></div><div class="line">                <span class="built_in">NSArray</span>&lt;HTmContactEntity *&gt;  *tmpCEArr = [[[BusinessManager sharedManager] localContactManager]</div><div class="line">                                                          getNonHomeTimeContactEntitys];</div><div class="line">                [tmpCEArr enumerateObjectsUsingBlock:^(HTmContactEntity * _Nonnull obj, <span class="built_in">NSUInteger</span> idx, <span class="built_in">BOOL</span> * _Nonnull stop) &#123;</div><div class="line">                    HTmContactEntity *sourceEntity = obj;</div><div class="line">                    <span class="built_in">NSManagedObjectContext</span> *destinationEntityInsertContext = _tempMainQueueContext;</div><div class="line">                    </div><div class="line">                    <span class="comment">// 克隆 实体</span></div><div class="line">                    <span class="built_in">NSEntityDescription</span> *entityDesc = [sourceEntity entity];</div><div class="line">                    HTmContactEntity *cloned = (HTmContactEntity*)[[<span class="built_in">NSManagedObject</span> alloc] initWithEntity: entityDesc</div><div class="line">                                                                    insertIntoManagedObjectContext: destinationEntityInsertContext];</div><div class="line">                    </div><div class="line">                    <span class="built_in">BOOL</span> isSuc = [HTmContactEntity cloneSourceEntity: sourceEntity</div><div class="line">                                                           inContext: sourceEntity.managedObjectContext</div><div class="line">                                               intoDestinationEntity: &amp;cloned                            <span class="comment">//double pointer</span></div><div class="line">                                                     insertInContext: &amp;destinationEntityInsertContext];  <span class="comment">//double pointer</span></div><div class="line">                    <span class="keyword">if</span> (isSuc) &#123;</div><div class="line">                        [myArr addObject:cloned];</div><div class="line">                    &#125;</div><div class="line">                &#125;];</div><div class="line">                </div><div class="line">                </div><div class="line">                _tempNonHomeTimeContacts = [myArr <span class="keyword">copy</span>];</div><div class="line">            &#125;<span class="comment">//</span></div><div class="line">            </div><div class="line">            </div><div class="line">            <span class="comment">//! 把 临时数据 插入到 临时的主队列Context；一定不能 保存！</span></div><div class="line"><span class="comment">//            NSArray&lt;HTmContactEntity *&gt;  *tmpNonHomeTimeContacts = [self tempNonHomeTimeContacts];</span></div><div class="line"><span class="comment">//            NSArray&lt;HTmContactEntity *&gt;  *tmpNonHomeTimeContacts = _tempNonHomeTimeContacts;</span></div><div class="line">        </div><div class="line"><span class="comment">//            //步骤一：</span></div><div class="line"><span class="comment">//            [tmpNonHomeTimeContacts enumerateObjectsUsingBlock:^(HTmContactEntity * _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) &#123;</span></div><div class="line"><span class="comment">//                // 删除 临时实体</span></div><div class="line"><span class="comment">//                [_tempMainQueueContext deleteObject:obj];</span></div><div class="line"><span class="comment">//            &#125;];</span></div><div class="line"><span class="comment">//            //步骤二：</span></div><div class="line"><span class="comment">//            [tmpNonHomeTimeContacts enumerateObjectsUsingBlock:^(HTmContactEntity * _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) &#123;</span></div><div class="line"><span class="comment">//                /**</span></div><div class="line"><span class="comment">//                 插入 临时实体</span></div><div class="line"><span class="comment">//                 临时上下文 一定不能save，切记切记！</span></div><div class="line"><span class="comment">//                 */</span></div><div class="line"><span class="comment">//                [_tempMainQueueContext insertObject:obj];</span></div><div class="line"><span class="comment">//            &#125;];</span></div><div class="line"> </div><div class="line">            </div><div class="line"><span class="comment">//            mainQueueContext; //返回：主队列Context</span></div><div class="line"><span class="comment">//        &#125;);</span></div><div class="line">    </div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> _tempMainQueueContext;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line">(lldb) po relationships</div><div class="line">&#123;</div><div class="line">    belongGroups = "(&lt;NSRelationshipDescription: 0x1270031f0&gt;), name belongGroups, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier belongGroups, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, destination entity HTmGroupEntity, inverseRelationship hasContacts, minCount 0, maxCount 0, isOrdered 0, deleteRule 1";</div><div class="line">    hasBindDevices = "(&lt;NSRelationshipDescription: 0x1270032a0&gt;), name hasBindDevices, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier hasBindDevices, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, destination entity HTmBindDeviceEntity, inverseRelationship belongContacts, minCount 0, maxCount 0, isOrdered 0, deleteRule 1";</div><div class="line">    hasCalleeRecords = "(&lt;NSRelationshipDescription: 0x127003350&gt;), name hasCalleeRecords, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier hasCalleeRecords, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, destination entity HTmCallRecordEntity, inverseRelationship belongCalleeContact, minCount 0, maxCount 0, isOrdered 0, deleteRule 1";</div><div class="line">    hasCallerRecords = "(&lt;NSRelationshipDescription: 0x125eefc80&gt;), name hasCallerRecords, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier hasCallerRecords, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, destination entity HTmCallRecordEntity, inverseRelationship belongCallerContact, minCount 0, maxCount 0, isOrdered 0, deleteRule 1";</div><div class="line">&#125;</div><div class="line"></div><div class="line">(lldb) </div><div class="line"></div><div class="line">Printing description of attributes:</div><div class="line">&#123;</div><div class="line">    abRecordID = "(&lt;NSAttributeDescription: 0x141047d20&gt;), name abRecordID, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier abRecordID, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 700 , attributeValueClassName NSString, defaultValue (null)";</div><div class="line">    blackListPhoneNumbers = "(&lt;NSAttributeDescription: 0x141047db0&gt;), name blackListPhoneNumbers, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier blackListPhoneNumbers, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 700 , attributeValueClassName NSString, defaultValue (null)";</div><div class="line">    colorHexValue = "(&lt;NSAttributeDescription: 0x141047e40&gt;), name colorHexValue, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier colorHexValue, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 200 , attributeValueClassName NSNumber, defaultValue 0";</div><div class="line">    contactTypeBitmask = "(&lt;NSAttributeDescription: 0x141047ed0&gt;), name contactTypeBitmask, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier contactTypeBitmask, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 100 , attributeValueClassName NSNumber, defaultValue 0";</div><div class="line">    dataSourceType = "(&lt;NSAttributeDescription: 0x141047f60&gt;), name dataSourceType, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier dataSourceType, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 100 , attributeValueClassName NSNumber, defaultValue 0";</div><div class="line">    "data_1" = "(&lt;NSAttributeDescription: 0x141047ff0&gt;), name data_1, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier data_1, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 700 , attributeValueClassName NSString, defaultValue (null)";</div><div class="line">    "data_2" = "(&lt;NSAttributeDescription: 0x141048080&gt;), name data_2, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier data_2, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 700 , attributeValueClassName NSString, defaultValue (null)";</div><div class="line">    "data_3" = "(&lt;NSAttributeDescription: 0x141048110&gt;), name data_3, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier data_3, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 700 , attributeValueClassName NSString, defaultValue (null)";</div><div class="line">    "data_4" = "(&lt;NSAttributeDescription: 0x1410481a0&gt;), name data_4, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier data_4, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 700 , attributeValueClassName NSString, defaultValue (null)";</div><div class="line">    "data_5" = "(&lt;NSAttributeDescription: 0x141048230&gt;), name data_5, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier data_5, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 700 , attributeValueClassName NSString, defaultValue (null)";</div><div class="line">    deviceID = "(&lt;NSAttributeDescription: 0x1410482c0&gt;), name deviceID, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier deviceID, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 700 , attributeValueClassName NSString, defaultValue (null)";</div><div class="line">    entityUUID = "(&lt;NSAttributeDescription: 0x141048350&gt;), name entityUUID, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier entityUUID, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 700 , attributeValueClassName NSString, defaultValue (null)";</div><div class="line">    etag = "(&lt;NSAttributeDescription: 0x1410483e0&gt;), name etag, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier etag, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 700 , attributeValueClassName NSString, defaultValue (null)";</div><div class="line">    firstLetterSpell = "(&lt;NSAttributeDescription: 0x141048470&gt;), name firstLetterSpell, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier firstLetterSpell, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 700 , attributeValueClassName NSString, defaultValue (null)";</div><div class="line">    foreignKeyAccountUserID = "(&lt;NSAttributeDescription: 0x141048500&gt;), name foreignKeyAccountUserID, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier foreignKeyAccountUserID, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 700 , attributeValueClassName NSString, defaultValue (null)";</div><div class="line">    fullSpell = "(&lt;NSAttributeDescription: 0x141048590&gt;), name fullSpell, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier fullSpell, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 700 , attributeValueClassName NSString, defaultValue (null)";</div><div class="line">    headIconPath = "(&lt;NSAttributeDescription: 0x141048620&gt;), name headIconPath, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier headIconPath, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 700 , attributeValueClassName NSString, defaultValue (null)";</div><div class="line">    hometimePhoneNumbers = "(&lt;NSAttributeDescription: 0x1410486b0&gt;), name hometimePhoneNumbers, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier hometimePhoneNumbers, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 700 , attributeValueClassName NSString, defaultValue (null)";</div><div class="line">    indexMark = "(&lt;NSAttributeDescription: 0x141048740&gt;), name indexMark, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier indexMark, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 700 , attributeValueClassName NSString, defaultValue (null)";</div><div class="line">    isAddedContactBySyncingServer = "(&lt;NSAttributeDescription: 0x1410487d0&gt;), name isAddedContactBySyncingServer, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier isAddedContactBySyncingServer, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 800 , attributeValueClassName NSNumber, defaultValue (null)";</div><div class="line">    isBlackList = "(&lt;NSAttributeDescription: 0x141048860&gt;), name isBlackList, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier isBlackList, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 800 , attributeValueClassName NSNumber, defaultValue (null)";</div><div class="line">    isLetvBindDeviceContact = "(&lt;NSAttributeDescription: 0x1410488f0&gt;), name isLetvBindDeviceContact, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier isLetvBindDeviceContact, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 800 , attributeValueClassName NSNumber, defaultValue (null)";</div><div class="line">    isLetvContact = "(&lt;NSAttributeDescription: 0x141048980&gt;), name isLetvContact, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier isLetvContact, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 800 , attributeValueClassName NSNumber, defaultValue (null)";</div><div class="line">    isRemovedFromAddressBook = "(&lt;NSAttributeDescription: 0x141048a10&gt;), name isRemovedFromAddressBook, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier isRemovedFromAddressBook, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 800 , attributeValueClassName NSNumber, defaultValue (null)";</div><div class="line">    isShouldDelete = "(&lt;NSAttributeDescription: 0x141048aa0&gt;), name isShouldDelete, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier isShouldDelete, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 800 , attributeValueClassName NSNumber, defaultValue (null)";</div><div class="line">    isVIPContact = "(&lt;NSAttributeDescription: 0x141048b30&gt;), name isVIPContact, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier isVIPContact, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 800 , attributeValueClassName NSNumber, defaultValue (null)";</div><div class="line">    "is_voip_number" = "(&lt;NSAttributeDescription: 0x141048bc0&gt;), name is_voip_number, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier is_voip_number, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 700 , attributeValueClassName NSString, defaultValue (null)";</div><div class="line">    lastConnectDate = "(&lt;NSAttributeDescription: 0x141048c50&gt;), name lastConnectDate, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier lastConnectDate, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 900 , attributeValueClassName NSDate, defaultValue (null)";</div><div class="line">    letvAccountPhoneNumber = "(&lt;NSAttributeDescription: 0x141048ce0&gt;), name letvAccountPhoneNumber, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier letvAccountPhoneNumber, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 700 , attributeValueClassName NSString, defaultValue (null)";</div><div class="line">    letvPicture = "(&lt;NSAttributeDescription: 0x141048d70&gt;), name letvPicture, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier letvPicture, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 700 , attributeValueClassName NSString, defaultValue (null)";</div><div class="line">    letvUserName = "(&lt;NSAttributeDescription: 0x141048e00&gt;), name letvUserName, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier letvUserName, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 700 , attributeValueClassName NSString, defaultValue (null)";</div><div class="line">    nameFirstChar = "(&lt;NSAttributeDescription: 0x141048e90&gt;), name nameFirstChar, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier nameFirstChar, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 700 , attributeValueClassName NSString, defaultValue (null)";</div><div class="line">    nickname = "(&lt;NSAttributeDescription: 0x141048f20&gt;), name nickname, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier nickname, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 700 , attributeValueClassName NSString, defaultValue (null)";</div><div class="line">    nonHometimePhoneNumbers = "(&lt;NSAttributeDescription: 0x141048fb0&gt;), name nonHometimePhoneNumbers, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier nonHometimePhoneNumbers, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 700 , attributeValueClassName NSString, defaultValue (null)";</div><div class="line">    phoneNumberInAddressBookCheckExistResultType = "(&lt;NSAttributeDescription: 0x141049040&gt;), name phoneNumberInAddressBookCheckExistResultType, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier phoneNumberInAddressBookCheckExistResultType, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 100 , attributeValueClassName NSNumber, defaultValue 0";</div><div class="line">    "phone_number" = "(&lt;NSAttributeDescription: 0x1410490d0&gt;), name phone_number, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier phone_number, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 700 , attributeValueClassName NSString, defaultValue (null)";</div><div class="line">    remarkName = "(&lt;NSAttributeDescription: 0x141049160&gt;), name remarkName, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier remarkName, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 700 , attributeValueClassName NSString, defaultValue (null)";</div><div class="line">    sourceID = "(&lt;NSAttributeDescription: 0x1410491f0&gt;), name sourceID, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier sourceID, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 700 , attributeValueClassName NSString, defaultValue (null)";</div><div class="line">    syncStatus = "(&lt;NSAttributeDescription: 0x141049280&gt;), name syncStatus, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier syncStatus, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 100 , attributeValueClassName NSNumber, defaultValue 0";</div><div class="line">    telephoneNumbers = "(&lt;NSAttributeDescription: 0x141049310&gt;), name telephoneNumbers, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier telephoneNumbers, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, attributeType 700 , attributeValueClassName NSString, defaultValue (null)";</div><div class="line">&#125;</div><div class="line">(lldb) </div><div class="line"></div><div class="line"></div><div class="line">Printing description of relationships:</div><div class="line">&#123;</div><div class="line">    belongGroups = "(&lt;NSRelationshipDescription: 0x14104a0f0&gt;), name belongGroups, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier belongGroups, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, destination entity HTmGroupEntity, inverseRelationship hasContacts, minCount 0, maxCount 0, isOrdered 0, deleteRule 1";</div><div class="line">    hasBindDevices = "(&lt;NSRelationshipDescription: 0x14104a1a0&gt;), name hasBindDevices, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier hasBindDevices, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, destination entity HTmBindDeviceEntity, inverseRelationship belongContacts, minCount 0, maxCount 0, isOrdered 0, deleteRule 1";</div><div class="line">    hasCalleeRecords = "(&lt;NSRelationshipDescription: 0x14104a250&gt;), name hasCalleeRecords, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier hasCalleeRecords, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, destination entity HTmCallRecordEntity, inverseRelationship belongCalleeContact, minCount 0, maxCount 0, isOrdered 0, deleteRule 1";</div><div class="line">    hasCallerRecords = "(&lt;NSRelationshipDescription: 0x14104a300&gt;), name hasCallerRecords, isOptional 1, isTransient 0, entity HTmContactEntity, renamingIdentifier hasCallerRecords, validation predicates (<span class="symbol">\n</span>), warnings (<span class="symbol">\n</span>), versionHashModifier (null)<span class="symbol">\n</span> userInfo &#123;<span class="symbol">\n</span>&#125;<span class="symbol">\n</span>, destination entity HTmCallRecordEntity, inverseRelationship belongCallerContact, minCount 0, maxCount 0, isOrdered 0, deleteRule 1";</div><div class="line">&#125;</div><div class="line">(lldb) </div><div class="line"></div><div class="line"></div><div class="line">(lldb) po rel</div><div class="line">belongGroups</div><div class="line"></div><div class="line">(lldb) po hasLoopThroughRelationshipDescription</div><div class="line">0x000000016e892478</div><div class="line"></div><div class="line">(lldb) po *hasLoopThroughRelationshipDescription</div><div class="line">&lt;__NSArrayM 0x1411da430&gt;(</div><div class="line">belongGroups,</div><div class="line">hasBindDevices,</div><div class="line">hasCalleeRecords,</div><div class="line">belongCalleeContact</div><div class="line">)</div></pre></td></tr></table></figure>
<h5 id="CoreData的内存策略-fault"><a href="#CoreData的内存策略-fault" class="headerlink" title="CoreData的内存策略(fault)"></a>CoreData的内存策略(fault)</h5><p><a href="http://stackoverflow.com/questions/7304257/coredata-error-data-fault" target="_blank" rel="external">Coredata Error “ data: fault ”</a></p>
<p><a href="https://code.tutsplus.com/tutorials/what-is-a-core-data-fault--cms-25157" target="_blank" rel="external">What Is a Core Data Fault?</a></p>
<p>Entity不能跨线程使用(特别是修改)，否则：</p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="number">2016</span><span class="number">-10</span><span class="number">-24</span> <span class="number">11</span>:<span class="number">47</span>:<span class="number">25.864</span> HomeTime[<span class="number">8345</span>:<span class="number">5086261</span>] CRASH: CoreData could not fulfill a fault <span class="keyword">for</span> <span class="string">'0xd000000000040002 &lt;x-coredata://FB88D6DC-A39B-4590-8A7F-4BC8A53F4E24/HTmContactEntity/p1&gt;'</span></div><div class="line"></div><div class="line">Stack trace:</div><div class="line"><span class="meta">#0  CoreFoundation                      000000000183192DB0 &lt;redacted&gt;()</span></div><div class="line"><span class="meta">#1  libobjc.A.dylib                     0000000001827F7F80 objc_exception_throw()</span></div><div class="line"><span class="meta">#2  CoreData                            00000000018500C750 &lt;redacted&gt;()</span></div><div class="line"><span class="meta">#3  CoreData                            00000000018501C8C4 &lt;redacted&gt;()</span></div><div class="line"><span class="meta">#4  CoreData                            00000000018501C610 &lt;redacted&gt;()</span></div><div class="line"><span class="meta">#5  HomeTime                            000000000100136398 __87-[HTmLocalContactManager request_query_letvAccountInfoForPhoneNumbers:success:failure:]_block_invoke.458()</span></div><div class="line"><span class="meta">#6  CoreFoundation                      000000000183184F58 &lt;redacted&gt;()</span></div><div class="line"><span class="meta">#7  HomeTime                            000000000100135384 __87-[HTmLocalContactManager request_query_letvAccountInfoForPhoneNumbers:success:failure:]_block_invoke_2.409()</span></div><div class="line"><span class="meta">#8  CAbstractManager                    000000000101B10E9C -[BusinessBlockOperation main]</span></div><div class="line"><span class="meta">#9  Foundation                          000000000183A8EE48 -[__NSOperationInternal _start:]</span></div><div class="line"><span class="meta">#10 Foundation                          000000000183B4E934 &lt;redacted&gt;()</span></div><div class="line"><span class="meta">#11 libdispatch.dylib                   000000000101B75A3C _dispatch_client_callout()</span></div><div class="line"><span class="meta">#12 libdispatch.dylib                   000000000101B82554 _dispatch_queue_drain()</span></div><div class="line"><span class="meta">#13 libdispatch.dylib                   000000000101B7972C _dispatch_queue_invoke()</span></div><div class="line"><span class="meta">#14 libdispatch.dylib                   000000000101B8466C _dispatch_root_queue_drain()</span></div><div class="line"><span class="meta">#15 libdispatch.dylib                   000000000101B84364 _dispatch_worker_thread3()</span></div><div class="line"><span class="meta">#16 libsystem_pthread.dylib             000000000182DF5470 _pthread_wqthread()</span></div><div class="line"><span class="meta">#17 libsystem_pthread.dylib             000000000182DF5020 start_wqthread())</span></div><div class="line"><span class="number">2016</span><span class="number">-10</span><span class="number">-24</span> <span class="number">11</span>:<span class="number">47</span>:<span class="number">25.864</span> HomeTime[<span class="number">8345</span>:<span class="number">5086261</span>] *** Terminating app due to uncaught exception <span class="string">'NSObjectInaccessibleException'</span>, reason: <span class="string">'CoreData could not fulfill a fault for '</span><span class="number">0xd000000000040002</span> &lt;x-coredata:<span class="comment">//FB88D6DC-A39B-4590-8A7F-4BC8A53F4E24/HTmContactEntity/p1&gt;''</span></div><div class="line">*** First throw call stack:</div><div class="line">(<span class="number">0x183192db0</span> <span class="number">0x1827f7f80</span> <span class="number">0x18500c750</span> <span class="number">0x18501c8c4</span> <span class="number">0x18501c610</span> <span class="number">0x100136398</span> <span class="number">0x183184f58</span> <span class="number">0x100135384</span> <span class="number">0x101b10e9c</span> <span class="number">0x183a8ee48</span> <span class="number">0x183b4e934</span> <span class="number">0x101b75a3c</span> <span class="number">0x101b82554</span> <span class="number">0x101b7972c</span> <span class="number">0x101b8466c</span> <span class="number">0x101b84364</span> <span class="number">0x182df5470</span> <span class="number">0x182df5020</span>)</div><div class="line">libc++abi.dylib: terminating with uncaught exception of type _NSCoreDataException</div><div class="line">(lldb)</div></pre></td></tr></table></figure>
<p>Coredata Error “data: <fault>”<br><a href="http://stackoverflow.com/questions/7304257/coredata-error-data-fault" target="_blank" rel="external">http://stackoverflow.com/questions/7304257/coredata-error-data-fault</a></fault></p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[request setReturnsObjectsAsFaults:NO]</div></pre></td></tr></table></figure>
<p>This is expected behaviour, core data won’t return full objects until you need to access the persistent values of the objects. Each of your returned objects will be a ‘fault’ until this point.</p>
<p>You can force the fetch request to return full objects using [request setReturnsObjectsAsFaults:NO], but in most cases what you have will be fine. Look at the documentation for NSFetchRequest for more information.</p>
<p>If you access one of the properties, core data will go to the persistent store and fetch the rest of your values, then you’ll get the full description in the logs.</p>
<p>This seems to be such a common misunderstanding that I decided to write about it, here.</p>
<p>“Core Data could not fulfill a fault” for objects that were created in the appDelegate managedObjectContext on the main thread<br><a href="http://stackoverflow.com/questions/20006689/core-data-could-not-fulfill-a-fault-for-objects-that-were-created-in-the-appde" target="_blank" rel="external">http://stackoverflow.com/questions/20006689/core-data-could-not-fulfill-a-fault-for-objects-that-were-created-in-the-appde</a></p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">HTmLocalContactManager.m</div><div class="line"></div><div class="line">	<span class="comment">/*</span></div><div class="line">     CoreData使用特别注意</div><div class="line">     1、每个NSThread实例，必须有各自的NSManagedObjectContext实例，该Context实际上是把db.sqlite文件读取到内存中。</div><div class="line">     2、CoreData的数据库实体（即 Entity，继承自NSManagedObject），存在于各自所属NSThread实例的NSManagedObjectContext实例中，并且Entity 不能 跨线程传递；如果 一定要 跨线程 传递Entity，请传递该Entity的主键(比如 myEntity.entityUUID)，然后在 另一个线程 使用 myEntity.entityUUID 从这个所谓 另一个线程 的Context，查找到这个Entity。</div><div class="line">     3、临时Entity数据，即 不打算 持久化的Entity，请使用 临时的Context，并且一定不能 [临时Context save]</div><div class="line">     4、Entity深拷贝？上面链接有。</div><div class="line">     5、CoreData 数据库迁移？CoreData 关系建立与移除？上面链接有。</div><div class="line">     */</div><div class="line">    __block <span class="built_in">NSMutableArray</span>&lt;HTmContactEntity*&gt; *oldHomeTimePersons;</div><div class="line">    __block <span class="built_in">NSMutableArray</span>&lt;<span class="built_in">NSDictionary</span>*&gt; *newestHomeTimePersons;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">//请求查询前，先缓存上次启动保存到数据库的联系人信息</span></div><div class="line"><span class="built_in">dispatch_sync</span>(dispatch_get_main_queue(), ^&#123;<span class="comment">//[begin] 没错，使用 同步 dispatch_sync</span></div><div class="line">	<span class="keyword">static</span> <span class="built_in">dispatch_once_t</span> onceToken;</div><div class="line">	<span class="built_in">dispatch_once</span>(&amp;onceToken, ^&#123;</div><div class="line">		oldHomeTimePersons = (<span class="built_in">NSMutableArray</span> *)[<span class="keyword">self</span> allHomeTimeContacts];</div><div class="line">		<span class="built_in">NSLog</span>(<span class="string">@"oldHomeTimePersons number %ld"</span>, [oldHomeTimePersons count]);</div><div class="line">	&#125;);</div><div class="line">&#125;);<span class="comment">//[end] 没错，使用 同步 dispatch_sync</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">/*  oldHomeTimePersons 元素是  CoreData的数据库实体 ——&gt;  不能 “跨线程 修改”。 */</span></div><div class="line"></div><div class="line"></div><div class="line">用这个 把 代码，包围起来。</div><div class="line"></div><div class="line">&#123;<span class="comment">//CoreData数据库中 把原来支持现在变为不支持hometime联系人标记出来 --- begin ---//</span></div><div class="line"><span class="built_in">dispatch_sync</span>(dispatch_get_main_queue(), ^&#123;<span class="comment">//[begin]没错，使用 同步 dispatch_sync。因为：CoreData的数据库实体Entity不能跨线程使用，而oldHomeTimePersons是在主线程创建的，所以 必须在 主线程修改oldHomeTimePersons。</span></div><div class="line"></div><div class="line">&#125;);<span class="comment">//[end]没错，使用 同步 dispatch_sync</span></div><div class="line">&#125;<span class="comment">//CoreData数据库中 把原来支持现在变为不支持hometime联系人标记出来  --- end ---//</span></div></pre></td></tr></table></figure>
<p>上述代码<br><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">dispatch_sync</span>(dispatch_get_main_queue(), ^&#123;</div><div class="line">	<span class="comment">// 一些在主线程 操作数据库的代码</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>改成<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">BusinessBlockOperation </span>*<span class="keyword">blockOp </span>= [<span class="keyword">BusinessBlockOperation </span><span class="keyword">blockOperationWithBlock:^&#123;</span></div><div class="line"></div><div class="line">	// some <span class="meta">code</span></div><div class="line"></div><div class="line">&#125;]<span class="comment">;// blockOp</span></div><div class="line"></div><div class="line">[[[<span class="keyword">BusinessManager </span>sharedManager] localContactManager].serialOperationQueue <span class="keyword">addOperation:blockOp];</span></div></pre></td></tr></table></figure></p>
<p>更为合理。</p>
<h5 id="CoreData性能优化"><a href="#CoreData性能优化" class="headerlink" title="CoreData性能优化"></a>CoreData性能优化</h5><p>指定字段<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&#123;<span class="comment">//&lt;---优化查找--begin---&gt;//</span></div><div class="line">	<span class="comment">// 指定 返回类型</span></div><div class="line">	fetchRequest.resultType = <span class="built_in">NSDictionaryResultType</span>;</div><div class="line">	<span class="comment">// 指定 查找字段</span></div><div class="line">	[fetchRequest setPropertiesToFetch:[<span class="built_in">NSArray</span> arrayWithObjects:<span class="string">@"entityUUID"</span>,<span class="string">@"telephoneNumbers"</span>, <span class="literal">nil</span>]];</div><div class="line">&#125;<span class="comment">//&lt;---优化查找--end---&gt;//</span></div></pre></td></tr></table></figure></p>
<p>数据分页</p>
<p>线程池中，并发数量 控制 (使用 操作队列)</p>
<p>在<strong>主线程</strong>操作数据库 ——&gt; 不可避免有这样的场景，数据量很小(三五条数据)。 </p>
<p>其他情况，批量写入数据库，都在 worker 线程。——&gt;  这样的worker 线程，只有3个(太多导致 context增多，同时context合并数据 也耗性能)。</p>
<p>问题：以后<strong>数据越来越多</strong>，问题就明显了 ？——&gt; 不会，因为：必须有一个 主线程的Context，而 Context的内存策略是 fault（这个不会 阻塞 线程 很久；如果数据量很大，使用 worker线程，不要用主线程）。</p>
<h5 id="CoreData-NSFetchedResultsController"><a href="#CoreData-NSFetchedResultsController" class="headerlink" title="CoreData + NSFetchedResultsController"></a>CoreData + NSFetchedResultsController</h5><p>NSFetchedResultsController 通过KVO/Notification模式，在一个线程(一般是主线程) 观察CoreData的一个NSManagedObjectContext(一般是主线程的Context)的变化(增、删、改)，定义一个NSFetchRequest将数据(包括数据的增删改)通过delegate模式绑定到view(一般是tableView 或 collectionView)。</p>
<p>具体做法，这里 <a href="https://itunes.apple.com/cn/course/id1104579961" target="_blank" rel="external">Stanford公开课-iOS9-Swift-第10课 Core Data</a> 和 这里 <a href="https://itunes.apple.com/cn/course/id733644550" target="_blank" rel="external">Stanford公开课-iOS7-ObjectiveC-第13课 Core Data and Tale View</a> ,  Stanford(美国斯坦福大学)的iOS开发公开课 <a href="https://HawkingOuYang.github.io/2016/07/12/9_iOS-Study-Lectures-Docs/">下载方式在这</a> , Stanford的官网下载代码：<a href="http://web.stanford.edu/class/cs193p/cgi-bin/drupal/" target="_blank" rel="external">cs193p iPhone App Dev</a> 和 <a href="http://web.stanford.edu/class/cs193p/cgi-bin/drupal/downloads-2013-fall" target="_blank" rel="external">cs193p iPhone App Dev downloads-2013-fall</a> </p>
<h5 id="做framework的脚本"><a href="#做framework的脚本" class="headerlink" title="做framework的脚本"></a>做framework的脚本</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/bin/bash -e -x</span></div><div class="line"></div><div class="line">PROJECT_NAME=CCoreData</div><div class="line">SRCROOT=<span class="variable">$PWD</span></div><div class="line"></div><div class="line"><span class="comment"># 来源Ref. http://years.im/Home/Article/detail/id/52.html</span></div><div class="line"></div><div class="line"><span class="comment"># Sets the target folders and the final framework product.</span></div><div class="line"><span class="comment"># 如果工程名称和Framework的Target名称不一样的话，要自定义FMKNAME</span></div><div class="line"><span class="comment"># 例如: FMK_NAME = "MyFramework"</span></div><div class="line">FMK_NAME=<span class="variable">$&#123;PROJECT_NAME&#125;</span></div><div class="line"></div><div class="line"><span class="comment"># Install dir will be the final output to the framework.</span></div><div class="line"><span class="comment"># The following line create it in the root folder of the current project.</span></div><div class="line"></div><div class="line"><span class="comment">#$&#123;FMK_NAME&#125;.framework</span></div><div class="line"></div><div class="line"><span class="comment">#CONFIG=Debug </span></div><div class="line">CONFIG=Release</div><div class="line"></div><div class="line"><span class="comment"># Working dir will be deleted after the framework creation.</span></div><div class="line">WRK_DIR=build</div><div class="line">DEVICE_DIR=<span class="variable">$&#123;WRK_DIR&#125;</span>/<span class="variable">$&#123;CONFIG&#125;</span>-iphoneos/<span class="variable">$&#123;FMK_NAME&#125;</span>.framework</div><div class="line">SIMULATOR_DIR=<span class="variable">$&#123;WRK_DIR&#125;</span>/<span class="variable">$&#123;CONFIG&#125;</span>-iphonesimulator/<span class="variable">$&#123;FMK_NAME&#125;</span>.framework</div><div class="line">INSTALL_DIR=<span class="variable">$&#123;SRCROOT&#125;</span>/Products/</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Clean and Building both architectures.</span></div><div class="line">xcodebuild -configuration <span class="variable">$CONFIG</span> -target <span class="string">"<span class="variable">$&#123;FMK_NAME&#125;</span>"</span> -project CCoreData.xcodeproj -sdk iphoneos build </div><div class="line">xcodebuild -configuration <span class="variable">$CONFIG</span> -target <span class="string">"<span class="variable">$&#123;FMK_NAME&#125;</span>"</span> -project CCoreData.xcodeproj -sdk iphonesimulator build</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Cleaning the oldest.</span></div><div class="line"><span class="keyword">if</span> [ <span class="_">-d</span> <span class="string">"<span class="variable">$&#123;INSTALL_DIR&#125;</span>"</span> ]</div><div class="line"><span class="keyword">then</span></div><div class="line">    rm -rf <span class="string">"<span class="variable">$&#123;INSTALL_DIR&#125;</span>"</span></div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line">mkdir -p <span class="string">"<span class="variable">$&#123;INSTALL_DIR&#125;</span>"</span></div><div class="line"></div><div class="line">cp -r <span class="string">"<span class="variable">$&#123;DEVICE_DIR&#125;</span>"</span> <span class="string">"<span class="variable">$INSTALL_DIR</span>"</span></div><div class="line"></div><div class="line"><span class="comment"># Uses the Lipo Tool to merge both binary files (i386 + armv6/armv7) into one Universal final product.</span></div><div class="line">lipo -create <span class="string">"<span class="variable">$&#123;DEVICE_DIR&#125;</span>/<span class="variable">$&#123;FMK_NAME&#125;</span>"</span> <span class="string">"<span class="variable">$&#123;SIMULATOR_DIR&#125;</span>/<span class="variable">$&#123;FMK_NAME&#125;</span>"</span> -output <span class="string">"<span class="variable">$&#123;INSTALL_DIR&#125;</span>/<span class="variable">$&#123;FMK_NAME&#125;</span>.framework/<span class="variable">$&#123;FMK_NAME&#125;</span>"</span></div><div class="line"></div><div class="line"><span class="comment"># rm -r "$&#123;WRK_DIR&#125;"</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"done."</span></div><div class="line"></div><div class="line">open <span class="string">"<span class="variable">$&#123;INSTALL_DIR&#125;</span>"</span></div></pre></td></tr></table></figure>
<h5 id="CCoreData-framework-CAbstractManager-framework"><a href="#CCoreData-framework-CAbstractManager-framework" class="headerlink" title="CCoreData.framework + CAbstractManager.framework"></a>CCoreData.framework + CAbstractManager.framework</h5><p><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-CoreData-MultiThreading-FactoryPattern-Singleton-1031-4.png" alt=""></p>
<p>基于Apple的 <em> CoreData.framework </em> ，根据CoreData的线程安全、多线程数据合并、数据库迁移、关系型数据 等特点，使用Objective-C，封装成为 <em> CCoreData.framework </em>。</p>
<p>基于｀工厂模式｀，｀单例模式｀，｀多线程并发｀ ，｀通知＋block 进行线程通讯｀，｀GCD + Operation Queue｀ 等，并依赖于CoreData的线程安全、多线程数据合并(即自己封装的 <em> CCoreData.framework </em> )，使用Objective-C，封装成为 <em> CAbstractManager.framework </em> 。</p>
<p><img src="http://7xpc28.com1.z0.glb.clouddn.com/CAbstractManager_CCoreData_Frameworks_files_1.png" alt=""></p>
<p><img src="http://7xpc28.com1.z0.glb.clouddn.com/CAbstractManager_CCoreData_Frameworks_files_2.png" alt=""></p>
<p>App Store Review 需要支持bitcode，所以自己造的framework也得支持bitcode，那么，修改工程配置的bitcode为YES，如下图：</p>
<p><img src="http://7xpc28.com1.z0.glb.clouddn.com/AppStoreReview_bitCodeSupport_Required.png" alt=""></p>
<p><img src="http://7xpc28.com1.z0.glb.clouddn.com/CAbstractManager_framework_bitCodeSupport.png" alt=""></p>
<p><img src="http://7xpc28.com1.z0.glb.clouddn.com/CCoreData_framework_bitCodeSupport.png" alt=""></p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="built_in">CAbstractManager</span>.framework/<span class="built_in">CAbstractManagerDefine</span>.h</div><div class="line"><span class="comment">/**</span></div><div class="line"> @brief 线程最大运行个数</div><div class="line"> @attention 请勿在其他地方 重复定义｀此常量｀</div><div class="line"> @note ｀此常量｀的含义为：AbstractManager的'操作队列' 线程并发操作数</div><div class="line"> */</div><div class="line"><span class="keyword">static</span> <span class="built_in">NSInteger</span> <span class="keyword">const</span> MY_THREAD_CONCURRENT_OPERATION_COUNT  =  <span class="number">3</span> ;</div></pre></td></tr></table></figure>
<p>by OYXJ thinking carefully at night on 2016.10.26, and in the morning on 2016.10.27,<br>resulting in a conclusion that:</p>
<p>change <strong>MY_THREAD_CONCURRENT_OPERATION_COUNT</strong> after —&gt; CAbstractManager.framework is complied into “Unix executable” file named “CAbstractManager”, WON’T re-compile CAbstractManager, thus the effort of trying changing MY_THREAD_CONCURRENT_OPERATION_COUNT does not work.</p>
<p>so, revert back to AS IS.</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">CAbstractManager.framework/CAbstractManager<span class="selector-class">.h</span></div><div class="line"></div><div class="line"><span class="selector-id">#import</span> &lt;CAbstractManager/AbstractManager.h&gt;		<span class="comment">//注意这里的顺序，项目中实际应用，编译报错了。</span></div><div class="line"><span class="selector-id">#import</span> &lt;CAbstractManager/CAbstractManagerDefine.h&gt;	<span class="comment">//注意这里的顺序，项目中实际应用，编译报错了。</span></div><div class="line"><span class="selector-id">#import</span> &lt;CAbstractManager/BusinessBlockOperation.h&gt;</div><div class="line"><span class="selector-id">#import</span> &lt;CAbstractManager/BusinessSelectorOperation.h&gt;</div></pre></td></tr></table></figure>
<figure class="highlight tap"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">➜  ~ git:(文稿+音乐) ✗ cd  CustomFramework/WebRTC.framework</div><div class="line">➜  WebRTC.framework git:(文稿+音乐) ✗ l</div><div class="line">total 19272</div><div class="line">drwxr-xr-x  <span class="number"> 7 </span>OYXJ  staff   238B<span class="number"> 10 </span>21 13:21 .</div><div class="line">drwxr-xr-x@ <span class="number"> 9 </span>OYXJ  staff   306B<span class="number"> 10 </span>27 10:06 ..</div><div class="line">-rw-r--r--@ <span class="number"> 1 </span>OYXJ  staff   6.0K<span class="number"> 10 </span>21 13:22 .DS_Store</div><div class="line">drwxr-xr-x <span class="number"> 37 </span>OYXJ  staff   1.2K <span class="number"> 9 </span>19 12:04 Headers</div><div class="line">-rw-r--r--  <span class="number"> 1 </span>OYXJ  staff   778B<span class="number"> 10 </span>14 01:05 Info.plist</div><div class="line">drwxr-xr-x  <span class="number"> 3 </span>OYXJ  staff   102B <span class="number"> 9 </span>19 12:04 Modules</div><div class="line">-rwxr-xr-x  <span class="number"> 1 </span>OYXJ  staff   9.4M<span class="number"> 10 </span>14 01:05 WebRTC</div></pre></td></tr></table></figure>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">HTmSyncServerContactManager.m</span></div><div class="line"></div><div class="line">同步联系人：读、写 数据库的操作，放在 串行队列上，避免 多线程 写 数据库，导致 数据重复。</div><div class="line"><span class="symbol">.operationQueue</span> 变成 .serialOperationQueue </div><div class="line"></div><div class="line"><span class="symbol">#import</span> &lt;CAbstractManager/<span class="keyword">BusinessBlockOperation.h&gt;</span></div><div class="line"></div><div class="line"><span class="keyword">BusinessBlockOperation </span>*<span class="keyword">blockOp </span>= [<span class="keyword">BusinessBlockOperation </span><span class="keyword">blockOperationWithBlock:^&#123;</span></div><div class="line"></div><div class="line">	// some <span class="meta">code</span></div><div class="line"></div><div class="line">&#125;]<span class="comment">;// blockOp</span></div><div class="line"></div><div class="line">[[<span class="keyword">BusinessManager </span>sharedManager].syncServerContactManager.operationQueue <span class="keyword">addOperation:blockOp];</span></div><div class="line"></div><div class="line">比如</div><div class="line">[[<span class="keyword">BusinessManager </span>sharedManager].syncServerContactManager.operationQueue <span class="keyword">addOperation:blockOp]</span></div><div class="line">变成</div><div class="line">[[<span class="keyword">BusinessManager </span>sharedManager].syncServerContactManager.serialOperationQueue <span class="keyword">addOperation:blockOp];</span></div></pre></td></tr></table></figure>
<p><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-CoreData-MultiThreading-FactoryPattern-Singleton-1031-5.png" alt=""></p>
<p><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-CoreData-MultiThreading-FactoryPattern-Singleton-1031-1.png" alt=""><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-CoreData-MultiThreading-FactoryPattern-Singleton-1031-2.png" alt=""><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-CoreData-MultiThreading-FactoryPattern-Singleton-1031-3.png" alt=""></p>
<p>Base 查看沙盒 数据库，分享一<a href="http://7xpc28.com1.z0.glb.clouddn.com/Base249.dmg" target="_blank" rel="external">下</a>。</p>
<p><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-CoreData-MultiThreading-FactoryPattern-Singleton-1101-1.png" alt=""></p>
<p><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-CoreData-MultiThreading-FactoryPattern-Singleton-1101-2.png" alt=""></p>
<h5 id="踩过的坑-amp-Debug"><a href="#踩过的坑-amp-Debug" class="headerlink" title="踩过的坑 &amp; Debug"></a>踩过的坑 &amp; Debug</h5><h6 id="CoreData-多个Context的数据同步"><a href="#CoreData-多个Context的数据同步" class="headerlink" title="CoreData 多个Context的数据同步"></a>CoreData 多个Context的数据同步</h6><p>以下数据，已经洗白，避免泄漏公司项目的关键信息。</p>
<p>多线程数据同步<br>对比<br>etag<br>sourceID<br>syncStatus</p>
<figure class="highlight subunit"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">/*</div><div class="line">特别说明：by OYXJ on 2016.11.02</div><div class="line">此处 此线程(简称线程A) 使用 此mAllLocalList内存数据(即 objContact.sourceID)，</div><div class="line">在此处之前或者之后 还有另一个线程(即[BusinessManager sharedManager].syncServerContactManager.serialOperationQueue)的线程(简称线程B)</div><div class="line">在写入 数据库，包括更改 mAllLocalList所引用的数据库实体(对应沙盒中持久化StoreFile的数据库Record)，</div><div class="line">但是 此文件中，并没有 把“线程B的context”更改、插入的数据 同步至 “线程A的context“ ---&gt; 目前来说，是不合理的、不正确的。</div><div class="line">所以  在 “线程B”更改、插入的数据 [线程B的context save]; 之后，需要在“线程A”，执行： [[BaseAccessor sharedBaseAccessor] mergeChangesManagedObjectsOnCurrentThread];</div><div class="line">*/</div><div class="line"></div><div class="line"></div><div class="line">// HTmContactEntity *contact = objContact;</div><div class="line">LELOGD(@"contactEtag---- before entityUUID = %@, nickname = %@  etag = %@   sorceid=%@",</div><div class="line">	objContact.entityUUID, objContact.nickname, objContact.etag, objContact.sourceID );</div><div class="line">[[BaseAccessor sharedBaseAccessor] mergeChangesManagedObjectsOnCurrentThread];</div><div class="line">// HTmContactEntity *contact1 = objContact;</div><div class="line">LELOGD(@"contactEtag---- after  entityUUID = %@, nickname = %@  etag=  %@   sorceid=%@",</div><div class="line">	objContact.entityUUID, objContact.nickname, objContact.etag, objContact.sourceID );</div><div class="line">                           </div><div class="line"></div><div class="line"></div><div class="line">(lldb) po mDumpID</div><div class="line">&lt;__NSArrayM 0x17445f530&gt;(</div><div class="line">B8ECCAEF<span class="string">-72</span>C8<span class="string">-422</span>C-B5A4<span class="string">-43</span>EBD0C19CA7,</div><div class="line">16635605<span class="string">-811</span>A<span class="string">-4</span>B3C-B287<span class="string">-105</span>AEDC4E07C,</div><div class="line">34497B8E<span class="string">-26</span>F7<span class="string">-469</span>C-AF02-C3AF3C850315,</div><div class="line">72D55B7E<span class="string">-880</span>A<span class="string">-4</span>FAE<span class="string">-8</span>D84<span class="string">-38</span>FA56EC6FDC,</div><div class="line">B11BE4EA<span class="string">-0</span>D89<span class="string">-422</span>F-B1C9-EB1C811568B4,</div><div class="line">7FE10CF1-B8C9<span class="string">-4</span>A72-A872<span class="string">-43</span>FDDED253D5,</div><div class="line">D36F6A52<span class="string">-0671</span><span class="string">-4</span>A7A-B321<span class="string">-984</span>F6D8D0FD3,</div><div class="line">4AE29811<span class="string">-6</span>D30<span class="string">-4</span>C06-B865-C0E0FEF3BE67,</div><div class="line">95F071E9-F538<span class="string">-4</span>BAA<span class="string">-8</span>F15<span class="string">-49</span>B513984CA7,</div><div class="line">685957E3-AA52<span class="string">-49</span>BA-B643-D7355F1F2FE5,</div><div class="line">9ADEFDD9-B995<span class="string">-4</span>E44<span class="string">-88</span>F9<span class="string">-0</span>B74770381BD,</div><div class="line">2E38B92F<span class="string">-9991</span><span class="string">-4</span>CFF-B2DB<span class="string">-5</span>FEC4F83DC2F</div><div class="line">)</div><div class="line"></div><div class="line"></div><div class="line">2016<span class="string">-11</span><span class="string">-02</span> 18:30:23:244 HomeTime[17319:3112341] LeNet.h:477 TaskHeartBeat(0x1aac2ac40)  hbElapse=10 status=logined last_recv_data_time=1478082570012 last_heart_beat_time=0 elapse_last_heart_beat=0 elapse_last_recv_data=53232 recv_heart_beat_timeused=0</div><div class="line">(lldb) po mAllLocalList.count</div><div class="line">12</div><div class="line"></div><div class="line">2016<span class="string">-11</span><span class="string">-02</span> 18:30:33.945822 HomeTime[17319:3112341] reportEvt:ext:2,pri:1</div><div class="line">2016<span class="string">-11</span><span class="string">-02</span> 18:30:23:244 HomeTime[17319:3112341] LeNet.h:658 LeNet.sendHeartBeat</div><div class="line">2016<span class="string">-11</span><span class="string">-02</span> 18:30:23:245 HomeTime[17319:3112341] LeNet.h:635 LeNet.send cmd=9 length=7</div><div class="line">(lldb) po objContact</div><div class="line">&lt;NSManagedObject: 0x1704c7d90&gt; (entity: HTmContactEntity; id: 0xd000000000200000 &lt;x-coredata://650B8F90<span class="string">-9</span>C0C<span class="string">-47</span>F0<span class="string">-9235</span>-EAF231E02CF5/HTmContactEntity/p8&gt; ; data: &#123;</div><div class="line">	nameFirstChar = 金;</div><div class="line">	hasCallerRecords = &lt;relationship fault: 0x1706277a0 'hasCallerRecords'&gt;;</div><div class="line">	isRemovedFromAddressBook = 0;</div><div class="line">	contactTypeBitmask = 1;</div><div class="line">	nickname = 欧阳孝金;</div><div class="line">	hasBindDevices = &lt;relationship fault: 0x170626040 'hasBindDevices'&gt;;</div><div class="line">	belongGroups = &lt;relationship fault: 0x1706249e0 'belongGroups'&gt;;</div><div class="line">	isAddedContactBySyncingServer = nil;</div><div class="line">	firstLetterSpell = oyxj;</div><div class="line">	phoneNumberInAddressBookCheckExistResultType = 2;</div><div class="line">	hasCalleeRecords = &lt;relationship fault: 0x1706280c0 'hasCalleeRecords'&gt;;</div><div class="line">	dataSourceType = 2;</div><div class="line">	foreignKeyAccountUserID = nil;</div><div class="line">	abRecordID = 381;</div><div class="line">	etag = nil;		//“线程B”更改此数据，然后[线程B的context save];</div><div class="line">	syncStatus = 1;		//“线程B”更改此数据, 然后[线程B的context save];</div><div class="line">	deviceID = nil;</div><div class="line">	sourceID = B8ECCAEF<span class="string">-72</span>C8<span class="string">-422</span>C-B5A4<span class="string">-43</span>EBD0C19CA7;</div><div class="line">	fullSpell = ouyangxiaojin;</div><div class="line">	entityUUID = B8ECCAEF<span class="string">-72</span>C8<span class="string">-422</span>C-B5A4<span class="string">-43</span>EBD0C19CA7;</div><div class="line">	isShouldDelete = 0;</div><div class="line">	colorHexValue = 16240213;</div><div class="line">&#125;</div><div class="line">)</div><div class="line"></div><div class="line">此前，断点调试,</div><div class="line">此处，执行这行代码，</div><div class="line">**[[BaseAccessor sharedBaseAccessor] mergeChangesManagedObjectsOnCurrentThread];**</div><div class="line">此后，接着 断点调试。</div><div class="line"></div><div class="line"></div><div class="line">(lldb) po objContact</div><div class="line">&lt;NSManagedObject: 0x1704c7d90&gt; (entity: HTmContactEntity; id: 0xd000000000200000 &lt;x-coredata://650B8F90<span class="string">-9</span>C0C<span class="string">-47</span>F0<span class="string">-9235</span>-EAF231E02CF5/HTmContactEntity/p8&gt; ; data: &lt;fault&gt;)</div><div class="line"></div><div class="line">(lldb) po objContact.entityUUID</div><div class="line">B8ECCAEF<span class="string">-72</span>C8<span class="string">-422</span>C-B5A4<span class="string">-43</span>EBD0C19CA7</div><div class="line"></div><div class="line">(lldb) po objContact</div><div class="line">&lt;NSManagedObject: 0x1704c7d90&gt; (entity: HTmContactEntity; id: 0xd000000000200000 &lt;x-coredata://650B8F90<span class="string">-9</span>C0C<span class="string">-47</span>F0<span class="string">-9235</span>-EAF231E02CF5/HTmContactEntity/p8&gt; ; data: &#123;</div><div class="line">	nameFirstChar = 金;</div><div class="line">	hasCallerRecords = &lt;relationship fault: 0x17043cf40 'hasCallerRecords'&gt;;</div><div class="line">	isRemovedFromAddressBook = 0;</div><div class="line">	contactTypeBitmask = 1;</div><div class="line">	nickname = 欧阳孝金;</div><div class="line">	hasBindDevices = &lt;relationship fault: 0x17042f700 'hasBindDevices'&gt;;</div><div class="line">	belongGroups = &lt;relationship fault: 0x17043d6a0 'belongGroups'&gt;;</div><div class="line">	isAddedContactBySyncingServer = nil;</div><div class="line">	firstLetterSpell = oyxj;</div><div class="line">	phoneNumberInAddressBookCheckExistResultType = 2;</div><div class="line">	hasCalleeRecords = &lt;relationship fault: 0x170238360 'hasCalleeRecords'&gt;;</div><div class="line">	dataSourceType = 2;</div><div class="line">	foreignKeyAccountUserID = nil;</div><div class="line">	abRecordID = 381;</div><div class="line">	etag = W/"675d32ae1439229aefaf949ae0cd1abe";		//“线程A”已经同步了“线程B”对数据的更改。</div><div class="line">	syncStatus = 0;						//“线程A”已经同步了“线程B”对数据的更改。</div><div class="line">	deviceID = nil;</div><div class="line">	sourceID = B8ECCAEF<span class="string">-72</span>C8<span class="string">-422</span>C-B5A4<span class="string">-43</span>EBD0C19CA7;</div><div class="line">	fullSpell = ouyangxiaojin;</div><div class="line">	entityUUID = B8ECCAEF<span class="string">-72</span>C8<span class="string">-422</span>C-B5A4<span class="string">-43</span>EBD0C19CA7;</div><div class="line">	isShouldDelete = 0;</div><div class="line">	colorHexValue = 16240213;</div><div class="line">&#125;</div><div class="line">)</div><div class="line"></div><div class="line">(lldb)</div></pre></td></tr></table></figure>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">NSEntityDescription</span>搞错，导致KVO时崩溃。</div><div class="line"></div><div class="line">local_entityDesc这个东西搞错，local_clonedRelatedObject是个HTmCallRecordEntity，</div><div class="line">				但是local_entityDesc描述HTmContactEntity。</div><div class="line"></div><div class="line"><span class="built_in">NSEntityDescription</span> *local_entityDesc = [relatedObject entity]; </div><div class="line"><span class="built_in">NSManagedObject</span> *local_clonedRelatedObject = </div><div class="line">		[[<span class="built_in">NSManagedObject</span> alloc] initWithEntity: local_entityDesc</div><div class="line">         		insertIntoManagedObjectContext: *destinationEntityInsertContext];</div><div class="line"></div><div class="line"><span class="number">2016</span><span class="number">-11</span><span class="number">-02</span> <span class="number">22</span>:<span class="number">46</span>:<span class="number">26.787</span> HomeTime[<span class="number">1387</span>:<span class="number">409219</span>] CRASH: [&lt;<span class="built_in">NSManagedObject</span> <span class="number">0x13eecc8a0</span>&gt; setValue:forUndefinedKey:]: the entity HTmContactEntity is not key value coding-compliant <span class="keyword">for</span> the key <span class="string">"callee"</span>.</div></pre></td></tr></table></figure>
<figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">to-many 和 to-one 数据关系，克隆时，崩溃。</div><div class="line"></div><div class="line">2016-11-03 <span class="attribute">10</span>:<span class="number">39</span>:<span class="number">43.920</span> HomeTime[<span class="number">1454</span>:<span class="number">434979</span>] <span class="attribute">CRASH</span>: NSManagedObjects of entity <span class="string">'HTmCallRecordEntity'</span> do not support <span class="attribute">-mutableSetValueForKey</span>: for the property <span class="string">'belongCalleeContact'</span></div><div class="line"></div><div class="line">因为：</div><div class="line"></div><div class="line"><span class="comment">//! 数据关系：所属 Callee联系人 （to-one）</span></div><div class="line"><span class="variable">@property</span> (nonatomic, strong) HTmContactEntity *belongCalleeContact;</div><div class="line"></div><div class="line"><span class="comment">//! 数据关系：所属 Caller联系人 （to-one）</span></div><div class="line"><span class="variable">@property</span> (nonatomic, strong) HTmContactEntity *belongCallerContact;</div><div class="line"><span class="variable">@end</span></div><div class="line"></div><div class="line">调试信息：</div><div class="line"></div><div class="line">(lldb) po [[source <span class="attribute">valueForKey</span>:@<span class="string">"belongCalleeContact"</span>] class]</div><div class="line">NSManagedObject</div><div class="line"></div><div class="line">(lldb) po [[source <span class="attribute">mutableSetValueForKey</span>:@<span class="string">"belongCalleeContact"</span>]]</div><div class="line"><span class="attribute">error</span>: expected identifier</div><div class="line">(lldb) po [source <span class="attribute">mutableSetValueForKey</span>:@<span class="string">"belongCalleeContact"</span>]</div><div class="line"><span class="attribute">error</span>: Execution was interrupted, <span class="attribute">reason</span>: internal ObjC exception breakpoint(-<span class="number">3</span>)..</div><div class="line">The process has been returned to the state before expression evaluation.</div><div class="line">(lldb) po [[source <span class="attribute">mutableSetValueForKey</span>:@<span class="string">"belongCalleeContact"</span>] class]</div><div class="line"><span class="attribute">error</span>: Execution was interrupted, <span class="attribute">reason</span>: internal ObjC exception breakpoint(-<span class="number">3</span>)..</div><div class="line">The process has been returned to the state before expression evaluation.</div><div class="line">(lldb) </div><div class="line"></div><div class="line"><span class="comment">//to-one relationship OR to-many relationship</span></div><div class="line"><span class="comment">//- (nullable id)valueForKey:(NSString *)key;</span></div><div class="line">            </div><div class="line"><span class="comment">//to-many relationship</span></div><div class="line"><span class="comment">//- (NSMutableSet *)mutableSetValueForKey:(NSString *)key;</span></div></pre></td></tr></table></figure>
<p><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-CoreData-MultiThreading-FactoryPattern-Singleton_kvo_dataRelationship_1107.png" alt=""></p>
<figure class="highlight nix"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">不同contexts之间的数据库实体Entity，企图建立“数据关系”，导致崩溃。</div><div class="line"></div><div class="line">*** Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: 'Illegal attempt to establish a relationship 'belongCalleeContact' between objects <span class="keyword">in</span> different contexts</div><div class="line"></div><div class="line"></div><div class="line">Stack trace:</div><div class="line"><span class="comment">#0  CoreFoundation                      00000000018203ADB0 &lt;redacted&gt;()</span></div><div class="line"><span class="comment">#1  libobjc.A.dylib                     00000000018169FF80 objc_exception_throw()</span></div><div class="line"><span class="comment">#2  CoreData                            000000000183EC5F80 &lt;redacted&gt;()</span></div><div class="line"><span class="comment">#3  CoreData                            000000000183EC462C &lt;redacted&gt;()</span></div><div class="line"><span class="comment">#4  CoreData                            000000000183ED2270 -[NSManagedObject _maintainInverseRelationship:forProperty:forChange:onSet:]</span></div><div class="line"><span class="comment">#5  CoreData                            000000000183ECE0E0 -[NSManagedObject _didChangeValue:forRelationship:named:withInverse:]</span></div><div class="line"><span class="comment">#6  Foundation                          000000000182937F64 &lt;redacted&gt;()</span></div><div class="line"><span class="comment">#7  Foundation                          000000000182937A8C &lt;redacted&gt;()</span></div><div class="line"><span class="comment">#8  Foundation                          00000000018299CBD8 -[NSObject didChangeValueForKey:withSetMutation:usingObjects:]</span></div><div class="line"><span class="comment">#9  CoreData                            000000000183ED20E8 -[NSManagedObject didChangeValueForKey:withSetMutation:usingObjects:]</span></div><div class="line"><span class="comment">#10 CoreData                            000000000183EF4D48 -[_NSNotifyingWrapperMutableSet addObject:]</span></div><div class="line"><span class="comment">#11 HomeTime                            000000000100193A88 +[BaseManagedObject p_cloneSourceEntity:inContext:intoDestinationEntity:ignoreAttributes:]</span></div><div class="line"><span class="comment">#12 HomeTime                            000000000100193030 +[BaseManagedObject cloneSourceEntity:intoDestinationEntity:ignoreAttributes:]</span></div><div class="line"><span class="comment">#13 HomeTime                            00000000010014AB34 -[HTmContactAccessor syncServerContact_insertOrUpdateContact:]</span></div><div class="line"><span class="comment">#14 HomeTime                            000000000100112ED8 -[HTmLocalContactManager syncServerContact_insertOrUpdateContact:]</span></div><div class="line"><span class="comment">#15 HomeTime                            0000000001001D1A94 __47-[HTmSyncServerContactManager p_pullNew:local:]_block_invoke_3()</span></div><div class="line"><span class="comment">#16 CoreFoundation                      000000000181F32584 &lt;redacted&gt;()</span></div><div class="line"><span class="comment">#17 CoreFoundation                      000000000181F292D4 -[__NSArrayI enumerateObjectsWithOptions:usingBlock:]</span></div><div class="line"><span class="comment">#18 HomeTime                            0000000001001D1230 __47-[HTmSyncServerContactManager p_pullNew:local:]_block_invoke_2.1035()</span></div><div class="line"><span class="comment">#19 CAbstractManager                    000000000101B14B88 -[BusinessBlockOperation main]</span></div><div class="line"><span class="comment">#20 Foundation                          000000000182936E48 -[__NSOperationInternal _start:]</span></div><div class="line"><span class="comment">#21 Foundation                          0000000001829F6934 &lt;redacted&gt;()</span></div><div class="line"><span class="comment">#22 libdispatch.dylib                   000000000101B61A3C _dispatch_client_callout()</span></div><div class="line"><span class="comment">#23 libdispatch.dylib                   000000000101B6E554 _dispatch_queue_drain()</span></div><div class="line"><span class="comment">#24 libdispatch.dylib                   000000000101B6572C _dispatch_queue_invoke()</span></div><div class="line"><span class="comment">#25 libdispatch.dylib                   000000000101B7066C _dispatch_root_queue_drain()</span></div><div class="line"><span class="comment">#26 libdispatch.dylib                   000000000101B70364 _dispatch_worker_thread3()</span></div><div class="line"><span class="comment">#27 libsystem_pthread.dylib             000000000181C9D470 _pthread_wqthread()</span></div><div class="line"><span class="comment">#28 libsystem_pthread.dylib             000000000181C9D020 start_wqthread())</span></div><div class="line"><span class="number">2016</span>-<span class="number">11</span>-<span class="number">03</span> <span class="number">11</span>:<span class="number">52</span>:<span class="number">01.538</span> HomeTime[<span class="number">1508</span>:<span class="number">449017</span>] *** Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: 'Illegal attempt to establish a relationship 'belongCalleeContact' between objects <span class="keyword">in</span> different contexts (<span class="attr">source</span> = &lt;NSManagedObject: <span class="number">0</span>x15d90da50&gt; (entity: HTmCallRecordEntity; id: <span class="number">0</span>x15d93dd80 &lt;x-coredata:///HTmCallRecordEntity/t4DF25175-A3C3-<span class="number">489</span>A-AF24-<span class="number">6</span>E661B4175C119&gt; ; data: &#123;</div><div class="line">	<span class="attr">oppositeName</span> = 😄Aaa;</div><div class="line">	<span class="attr">isCalleeTalk</span> = nil;</div><div class="line">	<span class="attr">isOppositeDeviceSelf</span> = nil;</div><div class="line">	<span class="attr">oppositeFirstLetterSpell</span> = A;</div><div class="line">	<span class="attr">oppositeContactEntityUUID</span> = FD8B75F0-<span class="number">92</span>D4-<span class="number">4</span>AB0-A19B-<span class="number">59</span>D14F194B55;</div><div class="line">	<span class="attr">callee</span> = <span class="number">13661248236</span>;</div><div class="line">	<span class="attr">tsTalk</span> = <span class="number">0</span>;</div><div class="line">	<span class="attr">inviteTimeIntervalToLocalDate</span> = <span class="number">2016</span>-<span class="number">11</span>-<span class="number">02</span> <span class="number">09</span>:<span class="number">01</span>:<span class="number">15</span> +<span class="number">0000</span>;</div><div class="line">	<span class="attr">oppositeColorHexValue</span> = <span class="number">6675144</span>;</div><div class="line">	<span class="attr">oppositePhoneNumberLocation</span> = 北京;</div><div class="line">	<span class="attr">calleeName</span> = 😄Aaa;</div><div class="line">	<span class="attr">oppositeDeviceID</span> = nil;</div><div class="line">	<span class="attr">indexYearMonth</span> = <span class="number">2016</span>年<span class="number">11</span>月;</div><div class="line">	<span class="attr">oppositePhoneNumberInAddressBookCheckExistResultType</span> = <span class="number">2</span>;</div><div class="line">	<span class="attr">isCallerInvite</span> = <span class="number">1</span>;</div><div class="line">	<span class="attr">type</span> = <span class="number">1</span>;</div><div class="line">	<span class="attr">calleeDevice</span> = --<span class="number">861579030062526</span>;</div><div class="line">	<span class="attr">belongCallerContact</span> = nil;</div><div class="line">	<span class="attr">googRemoteAddress</span> = ;</div><div class="line">	<span class="attr">foreignKeyAccountUserID</span> = <span class="number">107182627797</span>;</div><div class="line">	<span class="attr">callerDevice</span> = <span class="number">2818</span>C121-<span class="number">9048</span>-<span class="number">4</span>D64-B7D0-EDD7CE191529;</div><div class="line">	<span class="attr">oppositeIndexMark</span> = A;</div><div class="line">	<span class="attr">talkTimeIntervalToLocalDate</span> = nil;</div><div class="line">	<span class="attr">googLocalAddress</span> = ;</div><div class="line">	<span class="attr">isCalleeInvite</span> = nil;</div><div class="line">	<span class="attr">isOppositeHomeTimePhoneNumber</span> = nil;</div><div class="line">	<span class="attr">oppositeHeadIconPath</span> = FD8B75F0-<span class="number">92</span>D4-<span class="number">4</span>AB0-A19B-<span class="number">59</span>D14F194B55.jpeg;</div><div class="line">	<span class="attr">tsInviteOver</span> = <span class="number">608526972</span>;</div><div class="line">	<span class="attr">oppositeNameFirstChar</span> = A;</div><div class="line">	<span class="attr">isCallerTalk</span> = nil;</div><div class="line">	<span class="attr">traceError</span> = <span class="number">0</span>;</div><div class="line">	<span class="attr">callerNameFirstChar</span> = 金;</div><div class="line">	<span class="attr">sessionId</span> = <span class="number">69910</span>CFD-<span class="number">956</span>D-<span class="number">4421</span>-<span class="number">8</span>CD0-<span class="number">422957527890</span>;</div><div class="line">	<span class="attr">belongCalleeContact</span> = nil;</div><div class="line">	<span class="attr">isShouldDelete</span> = <span class="number">0</span>;</div><div class="line">	<span class="attr">inviteDurationSeconds</span> = <span class="number">1</span>;</div><div class="line">	<span class="attr">callerName</span> = 欧阳孝金;</div><div class="line">	<span class="attr">talkDurationSeconds</span> = <span class="number">0</span>;</div><div class="line">	<span class="attr">isCaller</span> = <span class="number">1</span>;</div><div class="line">	<span class="attr">googRemoteCandidateType</span> = ;</div><div class="line">	<span class="attr">isPullFromServer</span> = <span class="number">0</span>;</div><div class="line">	<span class="attr">entityUUID</span> = nil;</div><div class="line">	<span class="attr">tsInvite</span> = <span class="number">608525822</span>;</div><div class="line">	<span class="attr">tsTalkOver</span> = <span class="number">0</span>;</div><div class="line">	<span class="attr">isVoiceCall</span> = <span class="number">0</span>;</div><div class="line">	<span class="attr">googLocalCandidateType</span> = ;</div><div class="line">	<span class="attr">oppositeFullSpell</span> = Aaa;</div><div class="line">	<span class="attr">calleeNameFirstChar</span> = A;</div><div class="line">	<span class="attr">isIllegal</span> = <span class="number">0</span>;</div><div class="line">	<span class="attr">oppositeDeviceType</span> = <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line">) , <span class="attr">destination</span> = &lt;NSManagedObject: <span class="number">0</span>x15df7a530&gt; (entity: HTmContactEntity; id: <span class="number">0</span>xd000000000640004 &lt;x-coredata://<span class="number">62</span>D351B5-B043-<span class="number">4</span>AB2-B931-<span class="number">7</span>B2A2E298606/HTmContactEntity/p25&gt; ; data: &#123;</div><div class="line">	<span class="attr">nameFirstChar</span> = A;</div><div class="line">	<span class="attr">hasCallerRecords</span> = &lt;relationship fault: <span class="number">0</span>x15d901270 'hasCallerRecords'&gt;;</div><div class="line">	<span class="attr">isRemovedFromAddressBook</span> = <span class="number">0</span>;</div><div class="line">	<span class="attr">data_5</span> = nil;</div><div class="line">	<span class="attr">contactTypeBitmask</span> = <span class="number">1</span>;</div><div class="line">	<span class="attr">isVIPContact</span> = nil;</div><div class="line">	<span class="attr">data_4</span> = nil;</div><div class="line">	<span class="attr">nickname</span> = Aaa;</div><div class="line">	<span class="attr">hasBindDevices</span> = (</div><div class="line">);</div><div class="line">	<span class="attr">blackListPhoneNumbers</span> = nil;</div><div class="line">	<span class="attr">data_3</span> = nil;</div><div class="line">	<span class="attr">belongGroups</span> = (</div><div class="line">);</div><div class="line">	<span class="attr">isAddedContactBySyncingServer</span> = nil;</div><div class="line">	<span class="attr">firstLetterSpell</span> = A;</div><div class="line">	<span class="attr">phoneNumberInAddressBookCheckExistResultType</span> = <span class="number">2</span>;</div><div class="line">	<span class="attr">data_2</span> = nil;</div><div class="line">	<span class="attr">hasCalleeRecords</span> = (</div><div class="line">	<span class="number">0</span>xd000000000200002 &lt;x-coredata://<span class="number">62</span>D351B5-B043-<span class="number">4</span>AB2-B931-<span class="number">7</span>B2A2E298606/HTmCallRecordEntity/p8&gt;,</div><div class="line">	<span class="number">0</span>x15d93dd80 &lt;x-coredata:///HTmCallRecordEntity/t4DF25175-A3C3-<span class="number">489</span>A-AF24-<span class="number">6</span>E661B4175C119&gt;,</div><div class="line">	<span class="number">0</span>xd000000000080002 &lt;x-coredata://<span class="number">62</span>D351B5-B043-<span class="number">4</span>AB2-B931-<span class="number">7</span>B2A2E298606/HTmCallRecordEntity/p2&gt;,</div><div class="line">	<span class="number">0</span>xd000000000280002 &lt;x-coredata://<span class="number">62</span>D351B5-B043-<span class="number">4</span>AB2-B931-<span class="number">7</span>B2A2E298606/HTmCallRecordEntity/p10&gt;,</div><div class="line">	<span class="number">0</span>xd000000000300002 &lt;x-coredata://<span class="number">62</span>D351B5-B043-<span class="number">4</span>AB2-B931-<span class="number">7</span>B2A2E298606/HTmCallRecordEntity/p12&gt;,</div><div class="line">	<span class="number">0</span>xd0000000002c0002 &lt;x-coredata://<span class="number">62</span>D351B5-B043-<span class="number">4</span>AB2-B931-<span class="number">7</span>B2A2E298606/HTmCallRecordEntity/p11&gt;,</div><div class="line">	<span class="number">0</span>xd000000000340002 &lt;x-coredata://<span class="number">62</span>D351B5-B043-<span class="number">4</span>AB2-B931-<span class="number">7</span>B2A2E298606/HTmCallRecordEntity/p13&gt;,</div><div class="line">	<span class="number">0</span>xd0000000003c0002 &lt;x-coredata://<span class="number">62</span>D351B5-B043-<span class="number">4</span>AB2-B931-<span class="number">7</span>B2A2E298606/HTmCallRecordEntity/p15&gt;,</div><div class="line">	<span class="number">0</span>xd000000000180002 &lt;x-coredata://<span class="number">62</span>D351B5-B043-<span class="number">4</span>AB2-B931-<span class="number">7</span>B2A2E298606/HTmCallRecordEntity/p6&gt;,</div><div class="line">	<span class="number">0</span>xd0000000001c0002 &lt;x-coredata://<span class="number">62</span>D351B5-B043-<span class="number">4</span>AB2-B931-<span class="number">7</span>B2A2E298606/HTmCallRecordEntity/p7&gt;,</div><div class="line">);</div><div class="line">	<span class="attr">dataSourceType</span> = <span class="number">2</span>;</div><div class="line">	<span class="attr">foreignKeyAccountUserID</span> = nil;</div><div class="line">	<span class="attr">isBlackList</span> = nil;</div><div class="line">	<span class="attr">data_1</span> = nil;</div><div class="line">	<span class="attr">isLetvBindDeviceContact</span> = <span class="number">1</span>;</div><div class="line">	<span class="attr">lastConnectDate</span> = nil;</div><div class="line">	<span class="attr">abRecordID</span> = <span class="number">147</span>;</div><div class="line">	<span class="attr">etag</span> = W/<span class="string">"cf7ae8f7e49437b68597498bfddac0e2"</span>;</div><div class="line">	<span class="attr">syncStatus</span> = <span class="number">0</span>;</div><div class="line">	<span class="attr">is_voip_number</span> = <span class="number">1</span>;</div><div class="line">	<span class="attr">deviceID</span> = nil;</div><div class="line">	<span class="attr">sourceID</span> = <span class="number">0</span>A8DDD04-<span class="number">4</span>E99-<span class="number">4742</span>-B172-D48B9F43A9F0;</div><div class="line">	<span class="attr">fullSpell</span> = Aaa;</div><div class="line">	<span class="attr">remarkName</span> = nil;</div><div class="line">	<span class="attr">indexMark</span> = A;</div><div class="line">	<span class="attr">headIconPath</span> = <span class="number">0</span>A8DDD04-<span class="number">4</span>E99-<span class="number">4742</span>-B172-D48B9F43A9F0.jpeg;</div><div class="line">	<span class="attr">entityUUID</span> = <span class="number">0</span>A8DDD04-<span class="number">4</span>E99-<span class="number">4742</span>-B172-D48B9F43A9F0;</div><div class="line">	<span class="attr">nonHometimePhoneNumbers</span> = ;</div><div class="line">	<span class="attr">isShouldDelete</span> = <span class="number">0</span>;</div><div class="line">	<span class="attr">isLetvContact</span> = <span class="number">1</span>;</div><div class="line">	<span class="attr">colorHexValue</span> = <span class="number">6675144</span>;</div><div class="line">&#125;</div><div class="line">))'</div><div class="line">*** First <span class="built_in">throw</span> call stack:</div><div class="line">(<span class="number">0</span>x18203adb0 <span class="number">0</span>x18169ff80 <span class="number">0</span>x183ec5f80 <span class="number">0</span>x183ec462c <span class="number">0</span>x183ed2270 <span class="number">0</span>x183ece0e0 <span class="number">0</span>x182937f64 <span class="number">0</span>x182937a8c <span class="number">0</span>x18299cbd8 <span class="number">0</span>x183ed20e8 <span class="number">0</span>x183ef4d48 <span class="number">0</span>x100193a88 <span class="number">0</span>x100193030 <span class="number">0</span>x10014ab34 <span class="number">0</span>x100112ed8 <span class="number">0</span>x1001d1a94 <span class="number">0</span>x181f32584 <span class="number">0</span>x181f292d4 <span class="number">0</span>x1001d1230 <span class="number">0</span>x101b14b88 <span class="number">0</span>x182936e48 <span class="number">0</span>x1829f6934 <span class="number">0</span>x101b61a3c <span class="number">0</span>x101b6e554 <span class="number">0</span>x101b6572c <span class="number">0</span>x101b7066c <span class="number">0</span>x101b70364 <span class="number">0</span>x181c9d470 <span class="number">0</span>x181c9d020)</div><div class="line">libc++abi.dylib: terminating <span class="keyword">with</span> uncaught exception of type NSException</div><div class="line">(lldb)</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文章出处，原创于 &lt;a href=&quot;https://HawkingOuYang.github.io/&quot;&gt;https://HawkingOuYang.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/HawkingOuYang
    
    </summary>
    
      <category term="iOS" scheme="https://HawkingOuYang.github.io/categories/iOS/"/>
    
    
      <category term="iOS" scheme="https://HawkingOuYang.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS直播调研</title>
    <link href="https://HawkingOuYang.github.io/2016/09/11/36_iOS-LiveStreaming-Research/"/>
    <id>https://HawkingOuYang.github.io/2016/09/11/36_iOS-LiveStreaming-Research/</id>
    <published>2016-09-10T16:00:00.000Z</published>
    <updated>2019-01-17T03:35:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章出处，原创于 <a href="https://HawkingOuYang.github.io/">https://HawkingOuYang.github.io/</a></p>
<p><a href="https://github.com/HawkingOuYang/" target="_blank" rel="external">我的GitHub</a></p>
<hr>
<p><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-LiveStreaming-Research_1.png" alt=""><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-LiveStreaming-Research_2.png" alt=""><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-LiveStreaming-Research_3.png" alt=""><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-LiveStreaming-Research_4.png" alt=""><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-LiveStreaming-Research_5.png" alt=""><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-LiveStreaming-Research_6.png" alt=""><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-LiveStreaming-Research_7.png" alt=""><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-LiveStreaming-Research_8.png" alt=""><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-LiveStreaming-Research_9.png" alt=""><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-LiveStreaming-Research_10.png" alt=""><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-LiveStreaming-Research_11.png" alt=""><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-LiveStreaming-Research_12.png" alt=""><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-LiveStreaming-Research_13.png" alt=""><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-LiveStreaming-Research_14.png" alt=""><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-LiveStreaming-Research_15.png" alt=""><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-LiveStreaming-Research_16.png" alt=""><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-LiveStreaming-Research_17.png" alt=""><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-LiveStreaming-Research_18.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文章出处，原创于 &lt;a href=&quot;https://HawkingOuYang.github.io/&quot;&gt;https://HawkingOuYang.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/HawkingOuYang
    
    </summary>
    
      <category term="iOS" scheme="https://HawkingOuYang.github.io/categories/iOS/"/>
    
    
      <category term="iOS" scheme="https://HawkingOuYang.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS视频通话在GitHub的资料</title>
    <link href="https://HawkingOuYang.github.io/2016/09/11/8_iOS-VideoChat-on-GitHub-and-more/"/>
    <id>https://HawkingOuYang.github.io/2016/09/11/8_iOS-VideoChat-on-GitHub-and-more/</id>
    <published>2016-09-10T16:00:00.000Z</published>
    <updated>2019-01-17T03:35:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章出处，原创于 <a href="https://HawkingOuYang.github.io/">https://HawkingOuYang.github.io/</a></p>
<p><a href="https://github.com/HawkingOuYang/" target="_blank" rel="external">我的GitHub</a></p>
<hr>
<h2 id="原材料："><a href="#原材料：" class="headerlink" title="原材料："></a>原材料：</h2><p><a href="http://ffmpeg.org/" target="_blank" rel="external">FFmpeg</a></p>
<p>A native iOS video chat app based on WebRTC （视频聊天－单发版，这个好）<br>本地文件夹：(8)  GitHub_Technique/apprtc-ios<br>GitHub标星数量：197<br>GitHub地址：<a href="https://github.com/ISBX/apprtc-ios" target="_blank" rel="external">https://github.com/ISBX/apprtc-ios</a></p>
<p>Agora Video Chat Demo App With QR Scan （多发版，这个好！）<br>本地文件夹：(8)  GitHub_Technique/AgoraDemoExtend<br>GitHub标星数量：14<br>GitHub地址：<a href="https://github.com/soapyigu/AgoraDemoExtend" target="_blank" rel="external">https://github.com/soapyigu/AgoraDemoExtend</a></p>
<p>仿微信小视频 （蛮好的）<br>本地文件夹：(8)  GitHub_Technique/WeChatMicroVideo<br>GitHub标星数量：9<br>GitHub地址：<a href="https://github.com/MarineXmh/WeChatMicroVideo" target="_blank" rel="external">https://github.com/MarineXmh/WeChatMicroVideo</a></p>
<p>App for SEVEN<br>本地文件夹：(8)  GitHub_Technique/VideoChatDemo_SnowyWhite<br>GitHub标星数量：2<br>GitHub地址：<a href="https://github.com/SnowyWhite/VideoChatDemo" target="_blank" rel="external">https://github.com/SnowyWhite/VideoChatDemo</a></p>
<p>Demonstration of Video Chat app using opentok （swift写的）<br>本地文件夹：(8)  GitHub_Technique/VideoChatDemo_clevertrevor<br>GitHub标星数量：2<br>GitHub地址：<a href="https://github.com/clevertrevor/VideoChatDemo" target="_blank" rel="external">https://github.com/clevertrevor/VideoChatDemo</a></p>
<p>iOS example app for realtime video chat using cine.io  <a href="https://www.cine.io/products/peer" target="_blank" rel="external">https://www.cine.io/products/peer</a><br>本地文件夹：(8)  GitHub_Technique/cineio-peer-ios-example-app<br>GitHub标星数量：4<br>GitHub地址：<a href="https://github.com/cine-io/cineio-peer-ios-example-app" target="_blank" rel="external">https://github.com/cine-io/cineio-peer-ios-example-app</a></p>
<hr>
<p>iPad video chat that lets you draw your emotions （这个代码好乱啊！）<br><a href="https://github.com/mgregory/SeeMeHearMeTouchMe" target="_blank" rel="external">https://github.com/mgregory/SeeMeHearMeTouchMe</a></p>
<p>Sample-VideoChat-ios （没懂，怎么回事？）<br><a href="https://github.com/duzexu/Sample-VideoChat-ios" target="_blank" rel="external">https://github.com/duzexu/Sample-VideoChat-ios</a></p>
<hr>
<h2 id="问答："><a href="#问答：" class="headerlink" title="问答："></a>问答：</h2><p>可以用WebRTC来做视频直播吗？<br><a href="http://www.zhihu.com/question/25497090" target="_blank" rel="external">http://www.zhihu.com/question/25497090</a></p>
<p>别迷信 WebRtc，WebRtc只适合小范围（8人以内）音视频会议，不适合做直播：</p>
<ol>
<li>视频部分：vpx的编码器太弱，专利原因不能用264，做的好的都要自己改264/265代码才行。</li>
<li>音频部分：音频只适合人声编码，对音乐和其他非人声的效果很糟糕。</li>
<li>网络部分：对国内各种奇葩网络适应性太低，网络糟糕点或者人多点就卡。</li>
<li>信号处理：同时用过 GIPS和 WebRTC 进行对比，可以肯定目前开源的代码是GIPS阉割过的。</li>
<li>使用规模：10人以内使用，超过10人就挂了，WebEx方案支持的人数都比 RTC 强。</li>
</ol>
<p>正确的方法是啥呢？<br>————————- 分割线 ————————-<br>让粉丝们来看直播，如果同时粉丝数&gt;10人，那么不关 WebRtc 鸟事，服务器请使用 nginx rtmp-module架设，架设好了用 ffmpeg 命令行来测试播摄像头。主播客户端请使用rtmp进行推流给rtmp-module，粉丝请使用 rtmp / flv + http stream 进行观看，PC-web端的粉丝请使用 Flash NetStream来观看，移动 web端的粉丝请使用 hls / m3u8 来观看。</p>
<p>如果你试验成功要上线了，出现压力了，那么把nginx分层（接入层+交换层），稍微改两行代码，如果资金不足以全国部署服务器，那么把 nginx-rtmp-module 换为 cdn 的标准直播服务，也可以直接调过 nginx，一开始就用 cdn 的直播服务，比如网宿（斗鱼的直播服务提供商）。</p>
<h2 id="这是正道，别走弯路了。"><a href="#这是正道，别走弯路了。" class="headerlink" title="这是正道，别走弯路了。"></a>这是正道，别走弯路了。</h2><p>作者：韦易笑<br>链接：<a href="http://www.zhihu.com/question/25497090/answer/72397450" target="_blank" rel="external">http://www.zhihu.com/question/25497090/answer/72397450</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>
<p>我所在的项目用这个技术两年多了，先说结论：完全可以！</p>
<p>但是，凡事总有但是，也没那么简单。你以为调用几个Chrome的API就能直播了？too simple</p>
<p>楼上 米小嘉 回答中的猜想是不正确的，WebRTC用的不是插件，是Chrome自带的功能，是原生js的API，也没有什么浏览器自带的插件。<br>楼上 煎饼果子社长 的方法也不对，WebRTC的API不仅仅是给你获取本地信源的，所谓RTC是real time communication的缩写，自然这套API是带传输功能的。所以获取图像信源之后不应该用websocket发送图像数据，而是直接用WebRTC的通信相关API发送图像和声音（这套API是同时支持图像和声音的）数据。</p>
<p>所以，正确的方法是什么呢？<br>1、你得有一个实现了WebRTC相关协议的客户端。比如Chrome浏览器。<br>2、架设一个类似MCU系统的服务器。（不知道MCU是什么？看这：MCU（视频会议系统中心控制设备））</p>
<p>第一步，用你的客户端，比如Chrome浏览器，通过WebRTC相关的媒体API获取图像及声音信源，再用WebRTC中的通信API将图像和声音数据发送到MCU服务器。<br>第二步，MCU服务器根据你的需求对图像和声音数据进行必要的处理，比如压缩、混音等。<br>第三步，需要看直播的用户，通过他们的Chrome浏览器，链接上你的MCU服务器，并收取服务器转发来的图像和声音流。</p>
<p>先说步骤一，如果你只是做着玩玩，完全可以直接用Chrome浏览器做你的直播客户端。把摄像头麦克风连上电脑之后，Chrome可以用相关的js的API获取到摄像头和麦克风的数据。缺点就是如果长时间直播，Chrome的稳定性堪忧，我不是吓唬你。我们项目的经验是，chrome这样运行24小时以上内存占用很厉害，而且容易崩溃。</p>
<p>第二步，你可能要问，WebRTC可以直接在浏览器之间P2P地传输流，为什么还要有中转的MCU服务器？因为Chrome的功能很弱，视频的分辨率控制、多路语音的混音都做不了，所以需要MCU参与。最重要的是，Chrome同时给6个客户端发视频流就很消耗资源了，所以你如果有超过10个用户收看的话，Chrome很容易崩溃。</p>
<p>第三步就比较简单了，没什么好说的。</p>
<p>最后最后，还是老话题，兼容性。你可以查一下现在支持的浏览器有款，IE据说支持，但是我们研究了一下好像他用的协议和Chrome不一样，不能互通。firefox和opera情况也不是很理想。</p>
<p>————————-2015年11月17日 更新————————–<br>韦易笑 的答案中说“10人以内使用，超过10人就挂了”。从我个人的经验来看，我认为WebRTC并没有那么不堪。我不知道他是用什么样的方案，但是我原来的那个项目，13年做的结果是 1人广播，39人收看，在一台i3 + 4G + Centos6.4 mini的机器上跑MCU，连续运行48小时没有出现问题。CPU的使用率大概在60%左右，内存使用率是多少我记不清了，但是印象中不高，而且比较稳定。能不能支持更多的客户端我们没有尝试，因为当时已经满足我们的需求了。</p>
<p>作者：刘津玮<br>链接：<a href="http://www.zhihu.com/question/25497090/answer/43395462" target="_blank" rel="external">http://www.zhihu.com/question/25497090/answer/43395462</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>
<hr>
<p>HTML5新特性之WebRTC<br><a href="http://www.cnblogs.com/jscode/p/3601648.html" target="_blank" rel="external">http://www.cnblogs.com/jscode/p/3601648.html</a></p>
<p>google为什么要开源webrtc</p>
<p>google开源了WebRTC项目，网址是：<a href="http://code.google.com/p/webrtc/。" target="_blank" rel="external">http://code.google.com/p/webrtc/。</a></p>
<p>　　WebRTC实现了基于网页的视频会议，标准是WHATWG 协议，目的是通过浏览器提供简单的javascript就可以达到实时通讯（Real-Time Communications (RTC)）能力。</p>
<p>　　通过对源码的粗略分析，WebRTC提供了视频会议的核心技术，包括音视频的采集、编解码、网络传输、显示等功能，并且还支持跨平台：windows，linux，mac，android。</p>
<p>　　WebRTC的视频处理分析（windows平台）</p>
<p>　　WebRTC的视频部分，包含采集、编解码(I420/VP8)、加密、媒体文件、图像处理、显示、网络传输与流控(RTP/RTCP)等功能。</p>
<p>　　视频采集—video_capture</p>
<p>　　源代码在webrtc\modules\video_capture\main目录下，包含接口和各个平台的源代码。<br>　　在windows平台上，WebRTC采用的是dshow技术，来实现枚举视频的设备信息和视频数据的采集，这意味着可以支持大多数的视频采集设备；对那些需要单独驱动程序的视频采集卡（比如海康高清卡）就无能为力了。<br>　　视频采集支持多种媒体类型，比如I420、YUY2、RGB、UYUY等，并可以进行帧大小和帧率控制。</p>
<p>　　视频编解码—video_coding<br>　　源代码在webrtc\modules\video_coding目录下。<br>　　WebRTC采用I420/VP8编解码技术。VP8是google收购ON2后的开源实现，并且也用在WebM项目中。VP8能以更少的数据提供更高质量的视频，特别适合视频会议这样的需求。</p>
<p>　　视频加密–video_engine_encryption<br>　　视频加密是WebRTC的video_engine一部分，相当于视频应用层面的功能，给点对点的视频双方提供了数据上的安全保证，可以防止在Web上视频数据的泄漏。<br>　　视频加密在发送端和接收端进行加解密视频数据，密钥由视频双方协商，代价是会影响视频数据处理的性能；也可以不使用视频加密功能，这样在性能上会好些。<br>　　视频加密的数据源可能是原始的数据流，也可能是编码后的数据流。估计是编码后的数据流，这样加密代价会小一些，需要进一步研究。</p>
<p>　　视频媒体文件–media_file<br>　　源代码在webrtc\modules\media_file目录下。<br>　　该功能是可以用本地文件作为视频源，有点类似虚拟摄像头的功能；支持的格式有Avi。<br>　　另外，WebRTC还可以录制音视频到本地文件，比较实用的功能。</p>
<p>　　视频图像处理–video_processing<br>　　源代码在webrtc\modules\video_processing目录下。<br>　　视频图像处理针对每一帧的图像进行处理，包括明暗度检测、颜色增强、降噪处理等功能，用来提升视频质量。</p>
<p>　　视频显示–video_render<br>　　源代码在webrtc\modules\video_render目录下。<br>　　在windows平台，WebRTC采用direct3d9和directdraw的方式来显示视频，只能这样，必须这样。</p>
<p>　　网络传输与流控<br>　　对于网络视频来讲，数据的传输与控制是核心价值。WebRTC采用的是成熟的RTP/RTCP技术。</p>
<p>　　WebRTC的音频处理分析（windows平台）</p>
<p>　　WebRTC的音频部分，包含设备、编解码(iLIBC/iSAC/G722/PCM16/RED/AVT、NetEQ)、加密、声音文件、声音处理、声音输出、音量控制、音视频同步、网络传输与流控(RTP/RTCP)等功能。</p>
<p>　　音频设备—audio_device<br>　　源代码在webrtc\modules\audio_device\main目录下，包含接口和各个平台的源代码。<br>　　在windows平台上，WebRTC采用的是Windows Core Audio和Windows Wave技术来管理音频设备，还提供了一个混音管理器。<br>　　利用音频设备，可以实现声音输出，音量控制等功能。</p>
<p>　　音频编解码—audio_coding<br>　　源代码在webrtc\modules\audio_coding目录下。<br>　　WebRTC采用iLIBC/iSAC/G722/PCM16/RED/AVT编解码技术。<br>　　WebRTC还提供NetEQ功能—抖动缓冲器及丢包补偿模块，能够提高音质，并把延迟减至最小。<br>　　另外一个核心功能是基于语音会议的混音处理。</p>
<p>　　声音加密–voice_engine_encryption<br>　　和视频一样，WebRTC也提供声音加密功能。</p>
<p>　　声音文件<br>　　该功能是可以用本地文件作为音频源，支持的格式有Pcm和Wav。<br>　　同样，WebRTC也可以录制音频到本地文件。</p>
<p>　　声音处理–audio_processing<br>　　源代码在webrtc\modules\audio_processing目录下。<br>　　声音处理针对音频数据进行处理，包括回声消除(AEC)、AECM、自动增益(AGC)、降噪处理等功能，用来提升声音质量。</p>
<p>　　网络传输与流控<br>　　和视频一样，WebRTC采用的是成熟的RTP/RTCP技术。</p>
<p>　　WebRTC的官网是<a href="http://www.webrtc.org/，其中的FAQ解答了很多大家关心的问题。有这么几点可以关注：" target="_blank" rel="external">http://www.webrtc.org/，其中的FAQ解答了很多大家关心的问题。有这么几点可以关注：</a><br>　　1.license<br>　　采用BSD licenses，可以用于商业软件；即使你修改了源代码，也不必公开你修改的部分。</p>
<p>　　2.为什么WebRTC要免费<br>　　音视频针对目前的互联网应用，还是至关重要的。google这样做的目的，无非是吸引大量的开发者在chrome平台上开发音视频相关应用，和当年微软windows集成IE是一个道理。</p>
<p>　　3.下载和编译<br>　　a).下载google的源码工具depot_tools：<br>　　svn co <a href="http://src.chromium.org/svn/trunk/tools/depot_tools" target="_blank" rel="external">http://src.chromium.org/svn/trunk/tools/depot_tools</a><br>　　并把depot_tools添加到系统的环境变量PATH里；<br>　　b).下载git工具：并把git添加到系统的环境变量PATH里；<br>　　c).创建webrtc工作目录，并在该目录下运行：<br>　　gclient config <a href="https://webrtc.googlecode.com/svn/trunk" target="_blank" rel="external">https://webrtc.googlecode.com/svn/trunk</a><br>　　gclient sync –force<br>　　<br>　　sync命令也会产生基于本地环境(Linux:make, OSX: XCode, Windows: Visual Studio)的build文件。</p>
<p>　　也可以用命令：<br>　　gclient runhooks –force</p>
<p>　　对windows平台，在trunk目录下，已经有针对Visual Studio的工程文件：<br>　　webrtc.sln</p>
<p>　　好了，打开它，这就可以编译了。<br>　　<br>　　注：<br>　　webrtc默认使用了<br>　　C:\Program Files\Microsoft SDKs\Windows\v7.1\Samples\multimedia\directshow\baseclasses。<br>　　<br>　　我的机器上只有v7.0的sdk，于是构造了一个v7.1的目录，<br>　　仅包含Samples\multimedia\directshow\baseclasses。
　　</p>
<p>重点在这里<br>专注RTC和音视频相关领域，支持开源，相关交流请关注微信公众号:blackerteam，或者发邮件到: blacker@rtc.help<br><a href="http://www.cnblogs.com/lingyunhu/category/626157.html" target="_blank" rel="external">http://www.cnblogs.com/lingyunhu/category/626157.html</a>    (这个很好)<br><a href="http://www.cnblogs.com/fangkm/category/670346.html" target="_blank" rel="external">http://www.cnblogs.com/fangkm/category/670346.html</a>   (这个补充)</p>
<p>基于Web浏览器的实时通信系统（WebRTC）<br><a href="http://blog.chinaunix.net/uid-26000296-id-4841497.html" target="_blank" rel="external">http://blog.chinaunix.net/uid-26000296-id-4841497.html</a></p>
<hr>
<h2 id="webrtc"><a href="#webrtc" class="headerlink" title="webrtc"></a>webrtc</h2><p><a href="http://quickblox.com/developers/Q-municate" target="_blank" rel="external">Q-municate - QuickBlox Developers (API docs, code samples, SDK)</a><br><a href="https://webrtc.org/quick-links/" target="_blank" rel="external">Quick Links | WebRTC</a><br><a href="https://www.webrtc-experiment.com/" target="_blank" rel="external">WebRTC Experiments &amp; Demos ® Muaz Khan</a><br><a href="https://webrtchacks.com/" target="_blank" rel="external">webrtcHacks</a><br><a href="https://www.w3.org/TR/webrtc/" target="_blank" rel="external">WebRTC</a><br><a href="https://webrtc.github.io/samples/" target="_blank" rel="external">WebRTC samples</a><br><a href="https://groups.google.com/forum/#!forum/discuss-webrtc" target="_blank" rel="external">discuss-webrtc</a><br><a href="https://w3c.github.io/webrtc-stats/" target="_blank" rel="external">Identifiers for WebRTC’s Statistics API</a><br><a href="http://webrtc.org.cn/" target="_blank" rel="external">WebRTC中文网-最权威的RTC实时通信平台</a></p>
<p><a href="https://developer.apple.com/library/ios/navigation/" target="_blank" rel="external">ios</a><br><a href="http://en.cppreference.com/w/" target="_blank" rel="external">cpp</a><br><a href="https://openhub.net/" target="_blank" rel="external">Open Hub</a><br><a href="http://www.kjson.com/" target="_blank" rel="external">JSON在线工具</a><br><a href="https://tools.ietf.org/html/" target="_blank" rel="external">IETF</a></p>
<h2 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h2><p><a href="http://linuxtools-rst.readthedocs.io/zh_CN/latest/index.html" target="_blank" rel="external">Linux</a><br><a href="http://www.tldp.org/" target="_blank" rel="external">The Linux Documentation Project</a><br><a href="https://www.freebsd.org/doc/zh_CN.UTF-8/books/handbook/" target="_blank" rel="external">FreeBSD 使用手册</a><br><a href="https://debian-handbook.info/browse/zh-CN/stable/index.html" target="_blank" rel="external">Debian 管理员手册</a></p>
<h2 id="ffmpeg"><a href="#ffmpeg" class="headerlink" title="ffmpeg"></a>ffmpeg</h2><p>Install <code>ffplay</code> from the <code>ffmpeg</code> package.<br><a href="https://github.com/Homebrew/legacy-homebrew/issues/6880" target="_blank" rel="external">https://github.com/Homebrew/legacy-homebrew/issues/6880</a></p>
<p>When you do brew install ffmpeg, it installs: ffmpeg, ffprobe, and ffserver. Missing from this list is ffplay. Can this be fixed? Thanks in advance!</p>
<p>Do you have SDL installed? I think ffplay only builds if the SDL library is available.</p>
<ol>
<li>brew install sdl –use-gcc</li>
<li>brew uninstall ffmpeg</li>
<li>brew install ffmpeg –use-gcc</li>
</ol>
<p>Added a –with-ffplay option in cdcb773 that should take the guesswork out of knowing when installing FFmpeg will build ffplay.</p>
<p>ffplay <a href="http://url-to-gif-or-audio-or-video" target="_blank" rel="external">http://url-to-gif-or-audio-or-video</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文章出处，原创于 &lt;a href=&quot;https://HawkingOuYang.github.io/&quot;&gt;https://HawkingOuYang.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/HawkingOuYang
    
    </summary>
    
      <category term="iOS" scheme="https://HawkingOuYang.github.io/categories/iOS/"/>
    
    
      <category term="iOS" scheme="https://HawkingOuYang.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS团队代码规范（OC版）</title>
    <link href="https://HawkingOuYang.github.io/2016/09/10/7_ObjC-code-style-as-team/"/>
    <id>https://HawkingOuYang.github.io/2016/09/10/7_ObjC-code-style-as-team/</id>
    <published>2016-09-09T16:00:00.000Z</published>
    <updated>2019-01-17T03:35:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章出处 <a href="https://HawkingOuYang.github.io/">https://HawkingOuYang.github.io/</a></p>
<p><a href="https://github.com/HawkingOuYang/" target="_blank" rel="external">我的GitHub</a></p>
<hr>
<h2 id="项目工程目录"><a href="#项目工程目录" class="headerlink" title="项目工程目录"></a>项目工程目录</h2><p>待整理</p>
<p>Modules：存放功能模块。将程序划分为多个功能模块，每个模块基于MVC/MVVM组织代码</p>
<p>Library：存放三方库</p>
<p>Util：存放自己封装的工具类</p>
<p>Catergory：存放扩展类</p>
<p>Custom：存放自定义的其他类</p>
<p>MacroAndConstant：存放宏定义和常量的文件</p>
<p>BaseViewController：基类，单独提出来</p>
<p>SupportingFile：存放项目配置文件</p>
<p>Resource：存放资源，按照图片，音频，视频不同分类存放</p>
<p>Request：封装的网络请求类</p>
<h2 id="总体命名规范（遵循苹果官方规范）"><a href="#总体命名规范（遵循苹果官方规范）" class="headerlink" title="总体命名规范（遵循苹果官方规范）"></a>总体命名规范（遵循苹果官方规范）</h2><p>小驼峰命名法(CamelCase):第一个单词小写字母开头，其他单词首字母大写；</p>
<p>大驼峰命名法(PascalCase):所有首字母大写。</p>
<p>1、类名、协议名：遵循大驼峰命名法；</p>
<p>2、常量：这里的常量指的是宏(#define)、枚举(enum)、常量(const)等，名称遵循大驼峰命名法；</p>
<p>3、方法</p>
<p>方法名和方法参数遵循相同的规则，使用小写开头的小驼峰法；</p>
<p>方法名和参数尽量读起来像是一句话；</p>
<p>方法名不允许使用“get“前缀；</p>
<p>如果方法是为了获取对象的一个属性值，直接用属性名称来命名方法，不要添加 get 或其他的动词：</p>
<p>不要使用 do 或 does 作为名字的一部分，动词本身的暗示就足够了；</p>
<p>-或+与返回类型间留一个空格，但参数列表之间不要留间隔；</p>
<p>如果参数过多，推荐每个参数各占一行；</p>
<p>如果方法名以一个众所周知的大写缩略词开始，该规则不适用；</p>
<p>避免使用下划线作为前缀，苹果公司保留这种使用，由第三方使用可能会导致命名冲突;</p>
<p>4、变量：</p>
<p>类成员变量，属性，局部变量，使用小写开头的小驼峰法，其中类成员变量在名称最前面加一个下划线，比如:myLovalVariable, _myInstanceVariable；变量名的名称尽量可以推测其用途，具有描述性。</p>
<p>5、方法的参数命名：</p>
<p>不要再方法名中使用类似 pointer,ptr这样的字眼去表示指针，参数本身的类型足以说明；</p>
<p>不要使用简写，拼出完整的单词；</p>
<p>6、前缀</p>
<p>前缀是编程接口命名的重要部分，它们区分了软件的不同功能区域：</p>
<p>前缀可以防止第三方开发者与Apple的命名冲突；</p>
<p>同样可以防止Apple内部的命名冲突；</p>
<p>前缀有指定格式：</p>
<p>它由二到三个大写字母组成，不使用下划线和子前缀，</p>
<p>命名类、协议、常量和typedef结构体时使用前缀。</p>
<p>方法名不使用前缀（因为它存在于特定类的命名空间中），私有方法可以加前缀，比如private_XXX。</p>
<p>结构体字段不使用前缀。</p>
<h2 id="语言"><a href="#语言" class="headerlink" title="语言"></a>语言</h2><p>应该使用US英语.</p>
<p>应该:<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">UIColor</span> *myColor = [<span class="built_in">UIColor</span> whiteColor];</div></pre></td></tr></table></figure></p>
<p>不应该:<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">UIColor</span> *myColour = [<span class="built_in">UIColor</span> whiteColor];</div></pre></td></tr></table></figure></p>
<h2 id="代码注释"><a href="#代码注释" class="headerlink" title="代码注释"></a>代码注释</h2><p>方法、函数、类、协议、类别的定义都需要注释，推荐采用Apple的标准注释风格，好处是可以在引用的地方alt+点击自动弹出注释，非常方便。</p>
<p>有很多可以自动生成注释格式的插件，推荐使用VVDocumenter。</p>
<h2 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a>头文件</h2><p>声明一个孤立的class或protocol</p>
<p>将声明放入单独的文件</p>
<p>使头文件名与声明的class/protocol相同</p>
<p>声明关联的class或protocol</p>
<p>将关联的声明（class/category/protocol）放入同一个头文件</p>
<p>头文件名与主要的class/category/protocol相同</p>
<h2 id="Framework头文件"><a href="#Framework头文件" class="headerlink" title="Framework头文件"></a>Framework头文件</h2><p>每个framework都应该有一个同名头文件</p>
<p>Include了框架内其他所有头文件</p>
<h2 id="声明属性和实例变量"><a href="#声明属性和实例变量" class="headerlink" title="声明属性和实例变量"></a>声明属性和实例变量</h2><p>如果property表⽰示为⼀个名词或动词,格式如下@property (…) 类型 名词/动词 ;<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">@<span class="keyword">property</span><span class="title"> </span>(strong) NSString *title; </div><div class="line"></div><div class="line">@<span class="keyword">property</span><span class="title"> </span>(assign) BOOL showsAlpha;</div></pre></td></tr></table></figure></p>
<p>如果property表⽰示为一个形容词 可省略 ”is” 前缀，但要指定getter⽅方法的惯⽤用名称<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">@property</span> (<span class="keyword">assign</span>, <span class="keyword">getter</span>=isEditable) <span class="built_in">BOOL</span> editable;</div></pre></td></tr></table></figure></p>
<h2 id="实例变量"><a href="#实例变量" class="headerlink" title="实例变量"></a>实例变量</h2><p>通常不应该直接访问实例变量 init、dealloc、accessor methods等⽅方法内部例外 实例变量以下划线 “_” 开始 确保实例变量描述了所存储的属性<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">MyClass</span> </span>&#123; </div><div class="line">   <span class="built_in">BOOL</span> _showsTitle;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>如果想要修改property的实例变量名,使用 @synthesize语句<br><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="variable">@implementation</span> MyClass </div><div class="line"></div><div class="line"><span class="variable">@synthesize</span> showsTitle=_showsTitle;</div></pre></td></tr></table></figure></p>
<p>为一个class添加实例变量时,有几点需要注意: </p>
<p>避免声明公有实例变量 开发者关注的应该是对象接口,⽽不是其数据细节 你可以通过使用property来避免声明实例变量 如果需要声明实例变量,指定关键字@private 或 @protected 如果你希望⼦子类可以直接访问某个实例变量,使⽤用 @protected 关键字 如果⼀个实例变量是某个类可访问的属性,确保写了accessor methods 如果有可能,还是使用property </p>
<h2 id="可变对象"><a href="#可变对象" class="headerlink" title="可变对象"></a>可变对象</h2><p>你应该同时避免暴露在公开的接口中可变的对象，因为这允许你的类的使用者改变类自己的内部表示并且破坏类的封装。你可以提供可以只读的属性来返回你对象的不可变的副本。<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* .h */</span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>) <span class="built_in">NSArray</span> *elements</div><div class="line"></div><div class="line"><span class="comment">/* .m */</span></div><div class="line">- (<span class="built_in">NSArray</span> *)elements &#123;</div><div class="line"><span class="keyword">return</span> [<span class="keyword">self</span>.mutableElements <span class="keyword">copy</span>];</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>##常量 </p>
<h3 id="Integer常量使⽤枚举"><a href="#Integer常量使⽤枚举" class="headerlink" title="Integer常量使⽤枚举"></a>Integer常量使⽤枚举</h3><p>使⽤枚举来关联一组integer常量 枚举常量和typedef遵循函数的命名规范,下⾯面的例⼦子是 NSMatrix.h<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">typedef <span class="class"><span class="keyword">enum</span> <span class="title">_NSMatrixMode</span> &#123; </span></div><div class="line">	NSRadioModeMatrix = <span class="number">0</span>,</div><div class="line">	NSHighlightModeMatrix = <span class="number">1</span>,</div><div class="line">	NSListModeMatrix = <span class="number">2</span>, </div><div class="line">	NSTrackModeMatrix = <span class="number">3</span> </div><div class="line">&#125; NSMatrixMode;</div></pre></td></tr></table></figure></p>
<p>Typedef 标记(在上述⽰示例中的 _NSMatrixMode)不是必要的。你可以为bit masks之类的东西创建⼀个匿名枚举<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">enum</span> &#123;</span></div><div class="line">	NSBorderlessWindowMask = <span class="number">0</span>,</div><div class="line">	NSTitledWindowMask = <span class="number">1</span> &lt;&lt; <span class="number">0</span>,</div><div class="line">	NSClosableWindowMask = <span class="number">1</span> &lt;&lt; <span class="number">1</span>,</div><div class="line">	NSMiniaturizableWindowMask = <span class="number">1</span> &lt;&lt; <span class="number">2</span>, </div><div class="line">	NSResizableWindowMask = <span class="number">1</span> &lt;&lt; <span class="number">3</span>, --&gt;</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<p>当使用enum时，推荐使用新的固定基本类型规格，因为它有更强的类型检查和代码补全。现在SDK有一个宏NS_ENUM()来帮助和鼓励你使用固定的基本类型。<br><figure class="highlight elm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">typedef <span class="type">NS_ENUM</span>(<span class="type">NSInteger</span>, <span class="type">RWTLeftMenuTopItemType</span>) &#123;  </div><div class="line">    <span class="type">RWTLeftMenuTopItemMain</span>,  </div><div class="line">    <span class="type">RWTLeftMenuTopItemShows</span>,  </div><div class="line">    <span class="type">RWTLeftMenuTopItemSchedule</span>  </div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<h3 id="float常量使用const修饰符"><a href="#float常量使用const修饰符" class="headerlink" title="float常量使用const修饰符"></a>float常量使用const修饰符</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">float</span> <span class="built_in">NSLightGray</span>;</div></pre></td></tr></table></figure>
<h3 id="其他类型的常量"><a href="#其他类型的常量" class="headerlink" title="其他类型的常量"></a>其他类型的常量</h3><p>通常不应使用 #define 预编译指令来创建常量；</p>
<p>对#define预编译指令,⼤写所有字母；</p>
<p>定义NSString常量来作为Notification和Key值，这样做可以有效防⽌止拼写错误。</p>
<p>应该<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">static</span> <span class="built_in">NSString</span> * <span class="keyword">const</span> RWTAboutViewControllerCompanyName = <span class="string">@"RayWenderlich.com"</span>;  </div><div class="line"><span class="keyword">static</span> <span class="built_in">CGFloat</span> <span class="keyword">const</span> RWTImageThumbnailHeight = <span class="number">50.0</span>;</div></pre></td></tr></table></figure></p>
<p>不应该<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">define</span> CompanyName @<span class="meta-string">"RayWenderlich.com"</span>  </span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> thumbnailHeight 2</span></div></pre></td></tr></table></figure></p>
<h3 id="通知"><a href="#通知" class="headerlink" title="通知"></a>通知</h3><p>Notification的格式 类/头⽂文件名+进⾏行状态+通知名称+Notification<br><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">[Name of associated class]</span> + <span class="string">[Did | Will]</span> + <span class="string">[UniquePartOfName]</span> + Notification</div></pre></td></tr></table></figure></p>
<p>如:<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">NSApplicationDidBecomeActiveNotification</span> </div><div class="line"><span class="built_in">NSWindowDidMiniaturizeNotification</span></div><div class="line"><span class="built_in">NSTextViewDidChangeSelectionNotification</span> </div><div class="line"><span class="built_in">NSColorPanelColorDidChangeNotification</span></div></pre></td></tr></table></figure></p>
<h3 id="方法大括号和其他大括号-if-else-switch-while-等-总是在同⼀行语句打开但在新⾏中关闭。"><a href="#方法大括号和其他大括号-if-else-switch-while-等-总是在同⼀行语句打开但在新⾏中关闭。" class="headerlink" title="方法大括号和其他大括号(if/else/switch/while 等.)总是在同⼀行语句打开但在新⾏中关闭。"></a>方法大括号和其他大括号(if/else/switch/while 等.)总是在同⼀行语句打开但在新⾏中关闭。</h3><p>应该<br><figure class="highlight ada"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (user.isHappy) &#123;</div><div class="line">    //<span class="keyword">Do</span> something</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    //<span class="keyword">Do</span> something <span class="keyword">else</span> </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>#如果⼀个方法有特别多的参数或者名称很长,应该将其按照 : 来对齐分行显⽰<br><figure class="highlight erlang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">-<span class="params">(id)</span>initWithModel:<span class="params">(IPCModle)</span>model</div><div class="line">     resolution   :<span class="params">(IPCResolution)</span>resolution</div><div class="line">     authName     :<span class="params">(NSString *)</span>authName</div><div class="line">     password     :<span class="params">(NSString *)</span>password</div></pre></td></tr></table></figure></p>
<h3 id="私有方法"><a href="#私有方法" class="headerlink" title="私有方法"></a>私有方法</h3><p>不要使用下划线作为私有方法的前缀，Apple保留这一使用方式。</p>
<p>因为若是你的私有方法名已被Apple使用，覆盖它将会产生极难追踪的BUG。</p>
<p>如果继承自大型Cocoa框架（如UIView），请确保子类的私有方法名与父类不一样。</p>
<p>可以为私有方法加一个前缀，如公司名或项目名：XX_，</p>
<p>例如你的项目叫做Byte Flogger，那么前缀可能是：BF_addObject。</p>
<p>总之，为子类的私有方法添加前缀是为了不覆盖其父类的私有方法</p>
<h3 id="语法糖"><a href="#语法糖" class="headerlink" title="语法糖"></a>语法糖</h3><p>如果构造代码写在⼀行,需要在括号两端留有⼀个空格,使得被构造的元素于与构造语法区分开来: </p>
<p>// 正确,在语法糖的 “[]” 或者 “{}” 两端留有空格<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">NSArray</span> *array = @[ [foo description], <span class="string">@"Another String"</span>, [bar description] ]; <span class="built_in">NSDictionary</span> *dict = @&#123; <span class="built_in">NSForegroundColorAttributeName</span> : [<span class="built_in">NSColor</span> redColor] &#125;;</div></pre></td></tr></table></figure></p>
<p>// 不正确，不留有空格降低了可读性<br><figure class="highlight smali"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">NSArray*<span class="built_in"> array </span>= @[[foo description], [bar description]];</div><div class="line">NSDictionary* dict = @&#123;NSForegroundColorAttributeName: [NSColor redColor]&#125;;</div></pre></td></tr></table></figure></p>
<p>如果构造代码不写在⼀行内,构造元素需要使⽤四个空格来进行缩进,右括号 ] 或者 } 写在新的⼀行,并且与调⽤语法糖那⾏代码的第一个非空字符对齐:<br><figure class="highlight ada"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">NSArray *<span class="keyword">array</span> = @[ </div><div class="line">    @<span class="string">"This"</span>,</div><div class="line">    @<span class="string">"is"</span>,</div><div class="line">    @<span class="string">"an"</span>, </div><div class="line">    @<span class="string">"array"</span></div><div class="line">];</div></pre></td></tr></table></figure></p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">NSDictionary *dictionary = @&#123;</div><div class="line">    <span class="string">NSFontAttributeName :</span> [NSFont <span class="string">fontWithName:</span>@<span class="string">"Helvetica-Bold"</span> <span class="string">size:</span><span class="number">12</span>], </div><div class="line">    <span class="string">NSForegroundColorAttributeName :</span> fontColor </div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>构造字典时,字典的 Key 和 Value 与中间的冒号 : 都要留有一个空格。</p>
<h2 id="代码组织和分类"><a href="#代码组织和分类" class="headerlink" title="代码组织和分类"></a>代码组织和分类</h2><p>在函数分组和protocol/delegate实现中使用#pragma mark - 来分类方法,一般要遵循以下结构: </p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#pragma</span> <span class="selector-tag">mark</span> - Lifecycle </div><div class="line"></div><div class="line">- (instancetype)init &#123;&#125; </div><div class="line"></div><div class="line">- (void)dealloc &#123;&#125;</div><div class="line"></div><div class="line">- (void)viewDidLoad &#123;&#125; </div><div class="line"></div><div class="line">- (void)viewWillAppear:(BOOL)animated &#123;&#125; </div><div class="line"></div><div class="line">- (void)didReceiveMemoryWarning &#123;&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#pragma</span> <span class="selector-tag">mark</span> - Custom Accessors</div><div class="line">- (void)setCustomProperty:(id)value &#123;&#125; </div><div class="line">- (id)customProperty &#123;&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#pragma</span> <span class="selector-tag">mark</span> - IBActions</div><div class="line">- (IBAction)submitData:(id)sender &#123;&#125; </div><div class="line"></div><div class="line"><span class="selector-id">#pragma</span> <span class="selector-tag">mark</span> - Public</div><div class="line">- (void)publicMethod &#123;&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#pragma</span> <span class="selector-tag">mark</span> - Private</div><div class="line">- (void)privateMethod &#123;&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#pragma</span> <span class="selector-tag">mark</span> - Protocol conformance </div><div class="line"></div><div class="line"><span class="selector-id">#pragma</span> <span class="selector-tag">mark</span> - UITextFieldDelegate </div><div class="line"></div><div class="line"><span class="selector-id">#pragma</span> <span class="selector-tag">mark</span> - UITableViewDataSource</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文章出处 &lt;a href=&quot;https://HawkingOuYang.github.io/&quot;&gt;https://HawkingOuYang.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/HawkingOuYang/&quot; t
    
    </summary>
    
      <category term="iOS" scheme="https://HawkingOuYang.github.io/categories/iOS/"/>
    
    
      <category term="iOS" scheme="https://HawkingOuYang.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>ObjC与JS交互的Native+WebView开发</title>
    <link href="https://HawkingOuYang.github.io/2016/08/10/6_ObjC-JS-and-Native-WebView/"/>
    <id>https://HawkingOuYang.github.io/2016/08/10/6_ObjC-JS-and-Native-WebView/</id>
    <published>2016-08-09T16:00:00.000Z</published>
    <updated>2019-01-17T03:35:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章出处，原创于 <a href="https://HawkingOuYang.github.io/">https://HawkingOuYang.github.io/</a></p>
<p><a href="https://github.com/HawkingOuYang/" target="_blank" rel="external">我的GitHub</a></p>
<hr>
<h3 id="Native-WebView"><a href="#Native-WebView" class="headerlink" title="Native + WebView"></a>Native + WebView</h3><ul>
<li>APICloud</li>
<li>微信、QQ、支付宝</li>
</ul>
<p>观点来源：<br><a href="http://blog.csdn.net/skymingst/article/details/44968143" target="_blank" rel="external">http://blog.csdn.net/skymingst/article/details/44968143</a></p>
<p>优点： </p>
<ul>
<li>最稳定的Hybrid App开发方式，交互层的效率上由Native的东西解决了，而且架构上基本就是在App内写网页，连App Store都是采用了该种方案； </li>
<li>开发时分工非常明确，底层的由iOS开发人员处理，上层的由Web前端开发人员处理； </li>
<li>有效的在线参数配置方式，以便于及时在线替换界面；</li>
</ul>
<p>缺点： </p>
<ul>
<li>团队至少需要三个工程师，一个是Web的，一个是iOS、Android的 </li>
<li>运行效率的权衡权衡，多少界面采用Web来渲染，毕竟WebView的效率会相对降低</li>
</ul>
<p>态度： </p>
<ul>
<li><a href="http://onevcat.com/2015/03/cross-platform/" target="_blank" rel="external">王巍：跨平台开发时代的 (再次) 到来？</a>    </li>
<li><a href="http://www.infoq.com/cn/articles/hybrid-app-development-combat" target="_blank" rel="external">李秉骏:Hybrid App开发实战</a></li>
</ul>
<p>另参考：</p>
<p>JS与iOS Native Code互调的优雅实现方案 (开源库的详细实现过程)<br><a href="http://blog.csdn.net/xunyn/article/details/8802584" target="_blank" rel="external">http://blog.csdn.net/xunyn/article/details/8802584</a><br>或者<br><a href="http://blog.csdn.net/yanghua_kobe/article/details/8209751" target="_blank" rel="external">http://blog.csdn.net/yanghua_kobe/article/details/8209751</a></p>
<hr>
<p>原材料：</p>
<p><a href="https://github.com/marcuswestin/WebViewJavascriptBridge" target="_blank" rel="external">WebViewJavascriptBridge</a> 桥接ObjC与JS间的通信</p>
<p><a href="https://github.com/ninjinkun/NJKWebViewProgress" target="_blank" rel="external">NJKWebViewProgress</a> 网页进度条</p>
<p><a href="https://github.com/marcuswestin/WebViewProxy" target="_blank" rel="external">WebViewProxy</a> 网页代理</p>
<hr>
<h4 id="第一部分：WebViewJavascriptBridge"><a href="#第一部分：WebViewJavascriptBridge" class="headerlink" title="第一部分：WebViewJavascriptBridge"></a>第一部分：WebViewJavascriptBridge</h4><p>GitHub上WebViewJavascriptBridge开源库的作者分别从ObjC和JS，来说怎么使用，即：Ta是分开来说。<br><a href="https://github.com/marcuswestin/WebViewJavascriptBridge" target="_blank" rel="external">https://github.com/marcuswestin/WebViewJavascriptBridge</a></p>
<p>我从ObjC与JS对应的相通点，来说怎么使用，即：我是一起来说。</p>
<p>WARNING: WKWebView still has <a href="https://github.com/ShingoFukuyama/WKWebViewTips/blob/master/README.md" target="_blank" rel="external">many bugs and missing network APIs</a>. It may not be a simple drop-in replacement.<br>WebViewJavascriptBridge supports <a href="http://nshipster.com/wkwebkit/" target="_blank" rel="external">WKWebView</a> for iOS 8 and OSX Yosemite. In order to use WKWebView you need to instantiate the WKWebViewJavascriptBridge. The rest of the WKWebViewJavascriptBridge<br> API is the same as WebViewJavascriptBridge. 对于WKWebView，为了安全起见，使用iOS自带的API。以下说明 UIWebView如何应用WebViewJavascriptBridge。</p>
<p>关键点：</p>
<h5 id="一-WebViewJavascriptBridge-js-txt-注入web-view-在JS那边创建bridge"><a href="#一-WebViewJavascriptBridge-js-txt-注入web-view-在JS那边创建bridge" class="headerlink" title="(一)  WebViewJavascriptBridge.js.txt 注入web-view, 在JS那边创建bridge."></a>(一)  WebViewJavascriptBridge.js.txt 注入web-view, 在JS那边创建bridge.</h5><p>这里，WebViewJavascriptBridge开源库已经帮我们实现了，所以我们不用关心。<br>说明：WebViewJavascriptBridge requires WebViewJavascriptBridge.js.txt file that is injected into web view to create a bridge on JS side. </p>
<h5 id="二-桥有两端，一端连接ObjC，另一端连接JS。怎么连接？"><a href="#二-桥有两端，一端连接ObjC，另一端连接JS。怎么连接？" class="headerlink" title="(二)  桥有两端，一端连接ObjC，另一端连接JS。怎么连接？"></a>(二)  桥有两端，一端连接ObjC，另一端连接JS。怎么连接？</h5><p>一端连接ObjC ——— 这里，在iOS端实现。<br><figure class="highlight scheme"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[<span class="name">WebViewJavascriptBridge</span> bridgeForWebView:webView webViewDelegate:self 	</div><div class="line">								  handler:^(<span class="name">id</span> data, WVJBResponseCallback responseCallback) &#123;</div><div class="line">    NSLog(<span class="name">@</span><span class="string">"Received message from javascript: %@"</span>, data)<span class="comment">;</span></div><div class="line">    responseCallback(<span class="name">@</span><span class="string">"Right back atcha"</span>)<span class="comment">;</span></div><div class="line">&#125;]<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p>说明：Optionally, pass in webViewDelegate:(UIWebViewDelegate*)webViewDelegate if you need to respond to the web view’s lifecycle events.<br>The WVJBResponseCallback will not be nil if the javascript expects a response.</p>
<p>另一端连接JS ——— 这里，在web端实现代码，或者 在iOS端 把这个脚本注入webview.<br>怎么注入脚本？</p>
<p>对于WKWebView使用<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[[<span class="built_in">WKUserScript</span> alloc] initWithSource: <span class="keyword">self</span>.jsString</div><div class="line">injectionTime: <span class="built_in">WKUserScriptInjectionTimeAtDocumentEnd</span></div><div class="line">forMainFrameOnly: <span class="literal">YES</span>];</div></pre></td></tr></table></figure></p>
<p>对于UIWebView使用<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="section">[webView stringByEvaluatingJavaScriptFromString: self.jsString]</span><span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p>说明：创建了一个 connectWebViewJavascriptBridge 方法，该方法名是固定的, (iOS7 UIWebView) －－－ 这里，要么 在web端代码实现，要么 在iOS端注入脚本到web-view，总之，二选一。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">connectWebViewJavascriptBridge</span>(<span class="params">callback</span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span> (<span class="built_in">window</span>.WebViewJavascriptBridge) &#123;</div><div class="line">        callback(WebViewJavascriptBridge)</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="built_in">document</span>.addEventListener(<span class="string">'WebViewJavascriptBridgeReady'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            callback(WebViewJavascriptBridge)</div><div class="line">        &#125;, <span class="literal">false</span>)</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">connectWebViewJavascriptBridge(<span class="function"><span class="keyword">function</span>(<span class="params">bridge</span>) </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">/* Init your app here */</span></div><div class="line"></div><div class="line">    bridge.init(<span class="function"><span class="keyword">function</span>(<span class="params">message, responseCallback</span>) </span>&#123;</div><div class="line">        alert(<span class="string">'Received message: '</span> + message)   </div><div class="line">        <span class="keyword">if</span> (responseCallback) &#123;</div><div class="line">            responseCallback(<span class="string">"Right back atcha"</span>)</div><div class="line">        &#125;</div><div class="line">    &#125;)</div><div class="line">    bridge.send(<span class="string">'Hello from the javascript'</span>)</div><div class="line">    bridge.send(<span class="string">'Please respond to this'</span>, <span class="function"><span class="keyword">function</span> <span class="title">responseCallback</span>(<span class="params">responseData</span>) </span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">"Javascript got its response"</span>, responseData)</div><div class="line">    &#125;)</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<h5 id="三-桥，建立起来之后。ObjC-与-JS-通信。"><a href="#三-桥，建立起来之后。ObjC-与-JS-通信。" class="headerlink" title="(三)  桥，建立起来之后。ObjC 与 JS 通信。"></a>(三)  桥，建立起来之后。ObjC 与 JS 通信。</h5><p>ObjC 发消息给 JS：<br><figure class="highlight clojure"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[bridge send:(<span class="name">id</span>)data]</div><div class="line">[bridge send:(<span class="name">id</span>)data responseCallback:(<span class="name">WVJBResponseCallback</span>)responseCallback]</div></pre></td></tr></table></figure></p>
<p>说明：Send a message to javascript. Optionally expect a response by giving a responseCallback block.</p>
<p>例如：<br><figure class="highlight clojure"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[self.bridge send:@<span class="string">"Hi"</span>]<span class="comment">;</span></div><div class="line">[self.bridge send:[NSDictionary dictionaryWithObject:@<span class="string">"Foo"</span> forKey:@<span class="string">"Bar"</span>]]<span class="comment">;</span></div><div class="line">[self.bridge send:@<span class="string">"I expect a response!"</span> responseCallback:^(<span class="name">id</span> responseData) &#123;</div><div class="line">    NSLog(@<span class="string">"Got response! %@"</span>, responseData)<span class="comment">;</span></div><div class="line">&#125;]<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p>JS 发消息给 ObjC：<br><figure class="highlight haskell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="title">bridge</span>.send(&#123; <span class="type">Foo</span>:<span class="string">"Bar"</span> &#125;)</div><div class="line"><span class="title">bridge</span>.send(<span class="class"><span class="keyword">data</span>, function responseCallback(<span class="title">responseData</span>) &#123; ... &#125;)</span></div></pre></td></tr></table></figure></p>
<p>说明：Send a message to ObjC. Optionally expect a response by giving a responseCallback function.</p>
<p>例如：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">bridge.send(<span class="string">"Hi there!"</span>)</div><div class="line">bridge.send(<span class="string">"Hi there!"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">responseData</span>) </span>&#123;</div><div class="line">    alert(<span class="string">"I got a response! "</span>+<span class="built_in">JSON</span>.stringify(responseData))</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<h5 id="四-桥，建立起来之后。ObjC-与-JS-调用对方代码。"><a href="#四-桥，建立起来之后。ObjC-与-JS-调用对方代码。" class="headerlink" title="(四)  桥，建立起来之后。ObjC 与 JS 调用对方代码。"></a>(四)  桥，建立起来之后。ObjC 与 JS 调用对方代码。</h5><p>ObjC调用 JS代码：<br>首先，JS准备好代码，怎么准备？如下：<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bridge.registerHandler(<span class="string">"handlerName"</span>, <span class="function"><span class="keyword">function</span><span class="params">(responseData)</span> </span>&#123; ... &#125;)</div></pre></td></tr></table></figure></p>
<p>说明：Register a handler called handlerName.</p>
<p>例如：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">bridge.registerHandler(<span class="string">"showAlert"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123; alert(data) &#125;)</div><div class="line">bridge.registerHandler(<span class="string">"getCurrentPageUrl"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data, responseCallback</span>) </span>&#123;</div><div class="line">    responseCallback(<span class="built_in">document</span>.location.toString())</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<p>然后，ObjC调用 JS代码，怎么调用？如下：<br><figure class="highlight clojure"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[bridge callHandler:(<span class="name">NSString*</span>)handlerName data:(<span class="name">id</span>)data]</div><div class="line">[bridge callHandler:(<span class="name">NSString*</span>)handlerName data:(<span class="name">id</span>)data responseCallback:(<span class="name">WVJBResponseCallback</span>)callback]</div></pre></td></tr></table></figure></p>
<p>说明：Call the javascript handler called handlerName. Optionally expect a response by giving a responseCallback block.</p>
<p>JS调用 ObjC代码：<br>首先，ObjC准备好代码，怎么准备？如下：<br><figure class="highlight clojure"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[bridge registerHandler:(<span class="name">NSString*</span>)handlerName handler:(<span class="name">WVJBHandler</span>)handler]</div></pre></td></tr></table></figure></p>
<p>说明：Register a handler called handlerName.<br>例如：<br><figure class="highlight clojure"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[self.bridge registerHandler:@<span class="string">"getScreenHeight"</span> handler:^(<span class="name">id</span> data, WVJBResponseCallback responseCallback) &#123;</div><div class="line">    responseCallback([NSNumber numberWithInt:[UIScreen mainScreen].bounds.size.height])<span class="comment">;</span></div><div class="line">&#125;]<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p>然后，JS调用 ObjC代码，怎么调用？如下：<br><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">WebViewJavascriptBridge<span class="selector-class">.callHandler</span>(<span class="string">"handlerName"</span>)</div></pre></td></tr></table></figure></p>
<hr>
<h5 id="五-Javascript-API-特别说明："><a href="#五-Javascript-API-特别说明：" class="headerlink" title="(五) Javascript API 特别说明："></a>(五) Javascript API 特别说明：</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.addEventListener(<span class="string">'WebViewJavascriptBridgeReady'</span>, <span class="function"><span class="keyword">function</span> <span class="title">onBridgeReady</span>(<span class="params">event</span>) </span>&#123; ... &#125;, <span class="literal">false</span>)</div></pre></td></tr></table></figure>
<p>说明：Always wait for the WebViewJavascriptBridgeReady DOM event.</p>
<p>例如：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.addEventListener(<span class="string">'WebViewJavascriptBridgeReady'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> bridge = event.bridge</div><div class="line">    <span class="comment">// Start using the bridge</span></div><div class="line">&#125;, <span class="literal">false</span>)</div><div class="line"></div><div class="line">bridge.init(<span class="function"><span class="keyword">function</span> <span class="title">messageHandler</span>(<span class="params">data, response</span>) </span>&#123; ... &#125;)</div></pre></td></tr></table></figure></p>
<p>说明：Initialize the bridge. This should be called inside of the ‘WebViewJavascriptBridgeReady’ event handler.</p>
<p>特别注意：The messageHandler function will receive all messages sent from ObjC via<br><figure class="highlight scheme"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[<span class="name">bridge</span> send:(<span class="name">id</span>)data] and [<span class="name">bridge</span> send:(<span class="name">id</span>)data responseCallback:(<span class="name">WVJBResponseCallback</span>)responseCallback]</div></pre></td></tr></table></figure></p>
<p>The response object will be defined if if ObjC sent the message with a WVJBResponseCallback block.<br>例如：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">bridge.init(<span class="function"><span class="keyword">function</span>(<span class="params">data, responseCallback</span>) </span>&#123;</div><div class="line">    alert(<span class="string">"Got data "</span> + <span class="built_in">JSON</span>.stringify(data))</div><div class="line">    <span class="keyword">if</span> (responseCallback) &#123;</div><div class="line">        responseCallback(<span class="string">"Right back atcha!"</span>)</div><div class="line">    &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<p>每次JS收到消息时，都会调用 messageHandler，<br>所以一般messageHandler不实现任何逻辑，基本就是打印消息。当然，特殊情况，另说。</p>
<p>同理，并且经过验证 可得出：ObjC 在实例化bridge时，即<br><figure class="highlight scheme"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[<span class="name">WebViewJavascriptBridge</span> bridgeForWebView:webView webViewDelegate:self handler:^(<span class="name">id</span> data, WVJBResponseCallback responseCallback) &#123;</div><div class="line">    NSLog(<span class="name">@</span><span class="string">"Received message from javascript: %@"</span>, data)<span class="comment">;</span></div><div class="line">    responseCallback(<span class="name">@</span><span class="string">"Right back atcha"</span>)<span class="comment">;</span></div><div class="line">&#125;]<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p>每次ObjC收到消息时， 都会调用handler，所以一般handler不实现任何逻辑，基本就是NSLog打印消息。当然，特殊情况，另说。</p>
<hr>
<h4 id="第二部分：NJKWebViewProgress"><a href="#第二部分：NJKWebViewProgress" class="headerlink" title="第二部分：NJKWebViewProgress"></a>第二部分：NJKWebViewProgress</h4><p>内置app浏览器(In-App browser)，效果和safari进度条一样，详见：<a href="https://github.com/ninjinkun/NJKWebViewProgress" target="_blank" rel="external">NJKWebViewProgress</a><br>NJKWebViewProgress is a progress interface library for UIWebView. Currently, UIWebView doesn’t have official progress interface. You can implement progress bar for your in-app browser using this module.<br>NJKWebViewProgress doesn’t use CocoaTouch’s private methods. It’s AppStore safe.</p>
<hr>
<h4 id="第三部分：参考资料"><a href="#第三部分：参考资料" class="headerlink" title="第三部分：参考资料"></a>第三部分：参考资料</h4><h5 id="参考资料JS："><a href="#参考资料JS：" class="headerlink" title="参考资料JS："></a>参考资料JS：</h5><p>(一)  JS事件监听<br><a href="http://www.w3schools.com/jsref/met_document_addeventlistener.asp" target="_blank" rel="external">http://www.w3schools.com/jsref/met_document_addeventlistener.asp</a></p>
<p>HTML DOM addEventListener() Method<br>Example<br>Attach a click event to the document. When the user clicks anywhere in the document, output “Hello World” in a </p><p> element with id=”demo”:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">document</span>.getElementById(<span class="string">"demo"</span>).innerHTML = <span class="string">"Hello World"</span>;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>Definition and Usage</p>
<p>The document.addEventListener() method attaches an event handler to the document.</p>
<p>Tip: Use the <a href="http://www.w3schools.com/jsref/met_document_removeeventlistener.asp" target="_blank" rel="external">document.removeEventListener()</a> method to remove an event handler that has been attached with the addEventListener() method.</p>
<p>Tip: Use the <a href="http://www.w3schools.com/jsref/met_element_addeventlistener.asp" target="_blank" rel="external">element.addEventListener()</a> method to attach an event handler to a specified element.</p>
<p>Syntax<br>document.addEventListener(event, function, useCapture)</p>
<p>Parameter Values<br>Parameter<br>Description<br>event<br>Required. A String that specifies the name of the event.</p>
<p>Note: Do not use the “on” prefix. For example, use “click” instead of “onclick”.</p>
<p>For a list of all HTML DOM events, look at our complete <a href="http://www.w3schools.com/jsref/dom_obj_event.asp" target="_blank" rel="external">HTML DOM Event Object Reference</a>.<br>function<br>Required. Specifies the function to run when the event occurs. </p>
<p>When the event occurs, an event object is passed to the function as the first parameter. The type of the event object depends on the specified event. For example, the “click” event belongs to the MouseEvent object.<br>useCapture<br>Optional. A Boolean value that specifies whether the event should be executed in the capturing or in the bubbling phase. </p>
<p>Possible values:<br>    •    true - The event handler is executed in the capturing phase<br>    •    false- Default. The event handler is executed in the bubbling phase</p>
<p>Technical Details<br>DOM Version:<br>DOM Level 2 Events<br>Return Value:<br>No return value<br>Changelog:<br>The useCapture parameter became optional in Firefox 6 and Opera 11.60 (has always been optional for Chrome, IE and Safari)</p>
<p>More Examples<br>Example<br>You can also refer to an external “named” function:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.addEventListener(<span class="string">"click"</span>, myFunction);</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">myFunction</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">document</span>.getElementById(<span class="string">"demo"</span>).innerHTML = <span class="string">"Hello World"</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h5 id="参考资料JS-OC-通过WKWebView和WebKit-JS与OC交互。"><a href="#参考资料JS-OC-通过WKWebView和WebKit-JS与OC交互。" class="headerlink" title="参考资料JS-OC: 通过WKWebView和WebKit, JS与OC交互。"></a>参考资料JS-OC: 通过WKWebView和WebKit, JS与OC交互。</h5><p>步骤1:<br>[JavaScript synchronous native communication to WKWebView]<br>(<a href="http://stackoverflow.com/questions/26851630/javascript-synchronous-native-communication-to-wkwebview" target="_blank" rel="external">http://stackoverflow.com/questions/26851630/javascript-synchronous-native-communication-to-wkwebview</a>)</p>
<p>步骤2:<br>[WKWebView evaluateJavascript return value]<br>(<a href="http://stackoverflow.com/questions/26778955/wkwebview-evaluatejavascript-return-value" target="_blank" rel="external">http://stackoverflow.com/questions/26778955/wkwebview-evaluatejavascript-return-value</a>)</p>
<p>步骤3:<br>[WKWebView: trying to query javascript synchronously from the main thread]<br>(<a href="http://stackoverflow.com/questions/28388197/wkwebview-trying-to-query-javascript-synchronously-from-the-main-thread" target="_blank" rel="external">http://stackoverflow.com/questions/28388197/wkwebview-trying-to-query-javascript-synchronously-from-the-main-thread</a>)</p>
<p>步骤4:<br>[How do I wait for an asynchronously dispatched block to finish?]<br>(<a href="http://stackoverflow.com/questions/4326350/how-do-i-wait-for-an-asynchronously-dispatched-block-to-finish/4326754#4326754" target="_blank" rel="external">http://stackoverflow.com/questions/4326350/how-do-i-wait-for-an-asynchronously-dispatched-block-to-finish/4326754#4326754</a>)</p>
<p>步骤5:<br>[How to dispatch on main queue synchronously without a deadlock?]<br>(<a href="http://stackoverflow.com/questions/10330679/how-to-dispatch-on-main-queue-synchronously-without-a-deadlock" target="_blank" rel="external">http://stackoverflow.com/questions/10330679/how-to-dispatch-on-main-queue-synchronously-without-a-deadlock</a>)</p>
<h5 id="参考资料-WKWebView"><a href="#参考资料-WKWebView" class="headerlink" title="参考资料: WKWebView"></a>参考资料: WKWebView</h5><p>[Suppress WKWebView from scaling content to render at same magnification as UIWebView does]<br>(<a href="http://stackoverflow.com/questions/26102908/suppress-wkwebview-from-scaling-content-to-render-at-same-magnification-as-uiweb" target="_blank" rel="external">http://stackoverflow.com/questions/26102908/suppress-wkwebview-from-scaling-content-to-render-at-same-magnification-as-uiweb</a>)</p>
<p>[How to determine the content size of a WKWebView?]<br>(<a href="http://stackoverflow.com/questions/27515236/how-to-determine-the-content-size-of-a-wkwebview" target="_blank" rel="external">http://stackoverflow.com/questions/27515236/how-to-determine-the-content-size-of-a-wkwebview</a>)</p>
<p>[A Look at the WebKit Framework in iOS 8]<br>(<a href="http://www.appcoda.com/webkit-framework-tutorial/" target="_blank" rel="external">http://www.appcoda.com/webkit-framework-tutorial/</a>)</p>
<p>[WKWebView的使用心得]<br>(<a href="http://blog.csdn.net/qiang522235670/article/details/44857159" target="_blank" rel="external">http://blog.csdn.net/qiang522235670/article/details/44857159</a>)</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文章出处，原创于 &lt;a href=&quot;https://HawkingOuYang.github.io/&quot;&gt;https://HawkingOuYang.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/HawkingOuYang
    
    </summary>
    
      <category term="iOS" scheme="https://HawkingOuYang.github.io/categories/iOS/"/>
    
    
      <category term="iOS" scheme="https://HawkingOuYang.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS公开课＋学习资料</title>
    <link href="https://HawkingOuYang.github.io/2016/07/12/9_iOS-Study-Lectures-Docs/"/>
    <id>https://HawkingOuYang.github.io/2016/07/12/9_iOS-Study-Lectures-Docs/</id>
    <published>2016-07-11T16:00:00.000Z</published>
    <updated>2019-01-17T03:35:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章出处，原创于 <a href="https://HawkingOuYang.github.io/">https://HawkingOuYang.github.io/</a></p>
<p><a href="https://github.com/HawkingOuYang/" target="_blank" rel="external">我的GitHub</a></p>
<hr>
<h4 id="Stanford公开课"><a href="#Stanford公开课" class="headerlink" title="Stanford公开课"></a>Stanford公开课</h4><p>iOS 开发－Stanford公开课，是美国斯坦福大学的公开课，涉及iOS4、iOS5、iOS6、iOS7、iOS8、iOS9 等</p>
<p>这里，只下载了 iOS7(Objective-C)、iOS8(Swift)、iOS9(Swift) 等相关课程。</p>
<p>下载方式：</p>
<p>方式一：iTunes U  (选择方式一，如果你英语很好)<br>    1、在Mac或者Window上，安装“iTunes U”软件<br>    2、在“iTunes U”中搜索“iOS”或者“Swift”，找到相关课程，然后进行下载</p>
<p>方式二：网易公开课  (选择方式二，如果你英语不太好，导致方式一，不可行)<br>    1、在Mac或者Window上，打开“浏览器”，然后进入 网易公开课首页 open.163.com<br>    2、貌似现在不能在网页端 下载网易的公开课，需要使用 “网易公开课”客户端<br>    3、那就 安装“网易公开课”客户端，之后 步骤与“iTunes U”相同</p>
<p>方式三：YouTube （如果方式一、方式二，都找不到资料，那么选择方式三）<br>    1、使用Chrome翻墙上YouTube<br>    2、在Chrome中安装插件“saveFromNet”<br>    3、在YouTube中搜索“iOS”或“Swift”，然后使用插件“saveFromNet”下载这些公开课</p>
<p>特别提醒：<br>    A、选择 iPad上面的“iTunes U”不仅可以听 “iOS或Swift”公开课，还可以“做笔记”，完成“作业” 等等，课程 笔记 作业，再也不用 分开了，么么哒！<br>    B、选择 iPad上面的“iBooks”可以下载苹果的官方文件，注意，使用美国区域的AppleID帐号，大陆的AppleID帐号 被墙了，fu*k ！<br>    C、下载 iPad上面的“Dash”可以查看各种语言的文档 ！</p>
<p>就酱，开干吧！</p>
<h4 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h4><p><a href="http://www.quora.com/What-are-the-best-resources-for-learning-iOS-development" target="_blank" rel="external">What are the best resources for learning iOS development?</a></p>
<p><a href="www.objc.io">www.objc.io</a></p>
<p><a href="http://rypress.com/tutorials/objective-c/index" target="_blank" rel="external">rypress.com</a></p>
<p><a href="https://www.facebook.com/notes/apple-procare/free-ios-development-books-from-apple/135266913209357" target="_blank" rel="external">Free iOS Development Books from Apple</a></p>
<p>Whether you are already an iOS developer or you’re looking to get started, you’re in luck. Apple is offering six free iOS development books to download through their iBooks app. The free development books are:</p>
<ul>
<li>iOS Human Interface Guidelines</li>
<li>iOS Technology Overview</li>
<li>Object Oriented Programming With Objective-C</li>
<li>iOS Application Programming Guide</li>
<li>Cocoa Fundamentals Guide</li>
<li>The Objective-C Programming Language</li>
</ul>
<p>To download your own copies, launch iBooks, tap on “Store” and search for “Apple Developer Publications” where they’ll all be listed.</p>
<p>Apple recommends grabbing the latest iBooks 1.2 update before downloading the free books. Due to the iBooks requirement, you’ll need either an iPhone, iPad, or iPod touch to download them for now, although I wouldn’t be too surprised to see iBooks come to the Mac when the Mac App Store is releasednext month.</p>
<p>Considering the high cost of iPhone app development, grabbing a few free books and learning on your own may be the best way to have an app idea come to fruition.</p>
<p><a href="http://www.openculture.com/2015/01/stanford-launches-free-course-on-developing-apps-with-ios-8.html" target="_blank" rel="external">Stanford Launches Free Course on Developing Apps with iOS 8</a></p>
<p><a href="http://virtuousgiant.com/7-ways-to-learn-ios-develoment/" target="_blank" rel="external">7 Great Ways to Learn iOS Development</a></p>
<p><a href="http://www.iphoneness.com/iphone-books/5-must-read-books-for-iphone-game-programmers/" target="_blank" rel="external">5 Must Read Books for iPhone Game Programmers</a></p>
<p><a href="http://sanziro.com/2014/02/top-5-best-resources-learn-ios-app-programming.html" target="_blank" rel="external">Top 5 best resources to learn iOS app programming</a></p>
<p><a href="http://stackoverflow.com/questions/783321/whats-the-best-way-of-learning-iphone-programming-when-coming-from-java" target="_blank" rel="external">What’s the best way of learning iPhone programming when coming from Java?</a></p>
<p><a href="http://www.appcoda.com/book/learn-ios7-programming-from-scratch.html" target="_blank" rel="external">Learn iOS Programming from Scratch</a></p>
<p><a href="http://www.infoq.com/news/2015/02/ios8-day-by-day-review" target="_blank" rel="external">iOS 8 Day by Day: Free Book on iOS 8 Programming</a></p>
<p><a href="https://designcode.io/" target="_blank" rel="external">designcode.io</a></p>
<p><a href="https://www.codefellows.org/blog/beginning-ios-development-books-stack-overflow-and-github" target="_blank" rel="external">Beginning iOS Development: Books, Stack Overflow and GitHub</a></p>
<p><a href="http://www.whatsoniphone.com/blog/10must-read-books-for-ios-app-developers/" target="_blank" rel="external">10 must read books for iOS App developers</a></p>
<p><a href="http://www.techrepublic.com/blog/software-engineer/five-books-that-every-apple-ios-developer-should-own/" target="_blank" rel="external">Five books that every Apple iOS developer should own</a></p>
<p><a href="http://www.appdesignvault.com/5-books-to-help-you-become-an-ios-app-developer/" target="_blank" rel="external">5 Books to Help You Become an iOS App Developer</a></p>
<p><a href="http://www.imooc.com/space/u/uid/481646" target="_blank" rel="external">慕课网iOS学习小组</a></p>
<h4 id="书籍"><a href="#书籍" class="headerlink" title="书籍"></a>书籍</h4><hr>
<p><a href="http://7xpc28.com1.z0.glb.clouddn.com/iOS-Study-Lectures-Docs-iTunesU.jpeg" target="_blank" rel="external">iOS开发－iTunesU</a><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-Study-Lectures-Docs-iTunesU.jpeg" alt="iOS开发－iTunesU"></p>
<p><a href="http://7xpc28.com1.z0.glb.clouddn.com/iOS-Study-Lectures-Docs-iBooks.jpeg" target="_blank" rel="external">iOS开发－iBooks</a><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-Study-Lectures-Docs-iBooks.jpeg" alt="iOS开发－iBooks"></p>
<p><a href="http://7xpc28.com1.z0.glb.clouddn.com/iOS-Study-Lectures-Docs-skill-route.JPG" target="_blank" rel="external">iOS开发－SkillRoute</a><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-Study-Lectures-Docs-skill-route.JPG" alt="iOS开发－SkillRoute"></p>
<p><a href="http://7xpc28.com1.z0.glb.clouddn.com/iOS-Study-Lectures-Docs-skill-tree.jpg" target="_blank" rel="external">iOS开发-SkillTree</a><br><img src="http://7xpc28.com1.z0.glb.clouddn.com/iOS-Study-Lectures-Docs-skill-tree.jpg" alt="iOS开发-SkillTree"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文章出处，原创于 &lt;a href=&quot;https://HawkingOuYang.github.io/&quot;&gt;https://HawkingOuYang.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/HawkingOuYang
    
    </summary>
    
      <category term="iOS" scheme="https://HawkingOuYang.github.io/categories/iOS/"/>
    
    
      <category term="iOS" scheme="https://HawkingOuYang.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>从 SVN 到 Git</title>
    <link href="https://HawkingOuYang.github.io/2016/07/10/5_SVN-to-Git/"/>
    <id>https://HawkingOuYang.github.io/2016/07/10/5_SVN-to-Git/</id>
    <published>2016-07-09T16:00:00.000Z</published>
    <updated>2019-01-17T03:35:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章出处，原创于 <a href="https://HawkingOuYang.github.io/">https://HawkingOuYang.github.io/</a></p>
<p><a href="https://github.com/HawkingOuYang/" target="_blank" rel="external">我的GitHub</a></p>
<hr>
<h4 id="GitFlow-Git代码版本控制与分支维护"><a href="#GitFlow-Git代码版本控制与分支维护" class="headerlink" title="GitFlow(Git代码版本控制与分支维护)"></a>GitFlow(Git代码版本控制与分支维护)</h4><p><a href="http://7xpc28.com1.z0.glb.clouddn.com/GitGuideHowToUse.pdf" target="_blank" rel="external">Git使用小指南.pdf  &rarr; 下载或在线预览</a></p>
<p><a href="https://www.sourcetreeapp.com/" target="_blank" rel="external">Git软件：SourceTree</a></p>
<p><a href="http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html" target="_blank" rel="external">Git命令：常用 Git 命令清单</a></p>
<p><a href="https://github.com/xirong/my-git/blob/master/git-workflow-tutorial.md" target="_blank" rel="external">代码的Git工作流</a><br> <img src="http://7xpc28.com1.z0.glb.clouddn.com/SVN-to-Git-GitFlow-branches_0.jpg" alt=""></p>
<p><a href="http://nvie.com/posts/a-successful-git-branching-model/" target="_blank" rel="external">Git分支维护</a><br> <img src="http://7xpc28.com1.z0.glb.clouddn.com/SVN-to-Git-GitFlow-branches_1.jpg" alt=""></p>
<p>####<br>//TODO: here !!</p>
<h4 id="Bitbucket-v-s-GitHub"><a href="#Bitbucket-v-s-GitHub" class="headerlink" title="Bitbucket v.s. GitHub"></a>Bitbucket v.s. GitHub</h4><p><a href="https://www.quora.com/What-are-the-differences-between-BitBucket-and-GitHub" target="_blank" rel="external">What are the differences between BitBucket and GitHub?</a></p>
<p>GitHub 开源仓库、Bitbucket 私有仓库、GitLab 自主服务器的仓库</p>
<p><a href="http://stackshare.io/stackups/github-vs-bitbucket-vs-gitlab" target="_blank" rel="external">GitHub、Bitbucket、GitLab 比较</a></p>
<h4 id="SVN-迁移到-Git"><a href="#SVN-迁移到-Git" class="headerlink" title="SVN 迁移到 Git"></a>SVN 迁移到 Git</h4><p><a href="http://stackoverflow.com/questions/79165/how-to-migrate-svn-repository-with-history-to-a-new-git-repository" target="_blank" rel="external">How to migrate SVN repository with history to a new Git repository?</a></p>
<p><a href="https://www.atlassian.com/git/tutorials/migrating-overview/" target="_blank" rel="external">Migrate to Git from SVN ——— 很详细</a></p>
<p><a href="http://www.drdobbs.com/architecture-and-design/migrating-from-subversion-to-git-and-the/240009175" target="_blank" rel="external">Migrating from Subversion to Git and the Lessons Learned</a></p>
<h4 id="SVN-技巧"><a href="#SVN-技巧" class="headerlink" title="SVN 技巧"></a>SVN 技巧</h4><p>&copy;KEVIN , note that KEVIN is my colleague, great thanks for KEVIN.</p>
<p>1、初始化项目<br>svn import /Users/cress/本地项目目录  <a href="https://server/项目目录" target="_blank" rel="external">https://server/项目目录</a> -m “Initial import”</p>
<p>2、下载项目<br>svn checkout <a href="https://server/项目目录" target="_blank" rel="external">https://server/项目目录</a></p>
<p>3、添加文件<br>svn add test.txt</p>
<p>4、提交添加的文件，或者本地做的修改提交到服务器端<br>svn commit -m “add test.txt by test”</p>
<p>5、删除项目中的相应内容<br>    svn delete <a href="https://server/项目目录/文件名称" target="_blank" rel="external">https://server/项目目录/文件名称</a> -m “delete test.txt for test”<br>    svn delete /Users/cress/本地项目目录 -m “delete test.txt for test”</p>
<p>6、更新最新版本<br>svn update<br>svn update -r 200 test.txt    (更新指定的版本)</p>
<p>7、查看本地修改的文件状态<br>svn status</p>
<p>8、单纯导出一个干净的项目内容（项目内容不带有svn隐藏记录信息）<br>svn export <a href="https://server/项目目录" target="_blank" rel="external">https://server/项目目录</a></p>
<p>9、加锁/解锁<br>svn lock /Users/cress/本地项目目录（或文件名）－m “批注”<br>svn unlock /Users/cress/本地项目目录（或文件名）</p>
<p>10、查看日志<br>svn log test.txt</p>
<p>11、比较差异<br>svn diff -r m:n test.txt  (对版本m和版本n比较差异)</p>
<p>12、合并两个版本<br>svn merge -r 12:14 text.txt  (把版本12和14之间的差异合并到当前的文件中)</p>
<p>13、svn帮助<br>svn help<br>svn help commit</p>
<p>14、冲突合并<br>svn resolve –accept working test.txt</p>
<p>14、恢复本地修改<br>svn revert [-R] something<br>something可以是（目录或文件的）相对路径也可以是绝对路径。<br>当something为单个文件时，直接svn revert something就行了；当something为目录时，需要加上参数-R(Recursive,递归)，否则只会将something这个目录的改动。</p>
<p>14.2 回滚到指定的版本<br>svn update -r 回滚到的版本号  如：svn update -r 2113<br>提交回滚<br>svn ci -m “注释”  如：svn ci -m “添加模块协调者之前的标签”</p>
<p>14.3 复制一个项目<br>svn copy 原地址 目标地址<br>如：svn copy <from_url> <to_url> -m “添加模块协调者的分支”</to_url></from_url></p>
<p>15、代码库URL变更<br>svn switch <branch_full_url>   (切换分支)<br>svn switch –relocate <from_url> <to_url> [path]  (切换资源库)</to_url></from_url></branch_full_url></p>
<p>switch用于在同一个版本库内不同分支之间的切换<br>relocate用于版本库访问地址变更时，重新定位版本库</p>
<p>比如，由于SVN服务器更换到另一台主机上，这是SVN服务器的地址改变了，那么各客户端就无法连接SVN服务器了，这时各客户端就需要执行relocate，将本地工作区的连接到新的服务器上去</p>
<p>而如果同一个版本库内，如果有多个分支，比如你现在正在trunk上开发，但需要切换到某个分支上开发，那么你可以用switch来进行这个切换操作，这时SVN会比较trunk和这个分支之间的差异，将差异部分传送到你的本地工作区，而不用将整个分支传送给你，从而避免巨量数据的传输。switch操作之后，你所进行的update、commit操作都变成了针对那个分支，当你在分支上的工作完成后，还可以再次switch回trunk。</p>
<p>switch还有另外一些用途，比如希望让分支中的某个文件夹保持和trunk同步，因为有人正在trunk的这个文件夹中进行开发，在分支中想用到开发的最新成果，那么就可以在分支的这个文件夹上设置swtich到trunk，这时update整个分支的话，就会把trunk上的这个文件夹取下来了。但是，当然你如果修改了这个文件夹的内容，commit后也是提交到了主干而不是提交到了分支。</p>
<p>16、打标签<br>每达到一个里程碑都应该给代码打个标签。<br>打基线—就是打标签，只是加上文档等资料<br>标签的特点?<br>       只读<br>如何打标签？<br>        Versions工具不能打标签，要打标签就要使用命令终端，通过命令来输入。<br>       打标签其实就是执行复制：svn copy。<br>       svn copy 命令不是真正复制真实的文件，而是只是对各个文件做版本记录，<br>       不占多大的服务器空间。<br>        svn copy 命令格式：<br>        svn copy 源URL  目的URL  -m “注释”</p>
<p>12、打分支<br>什么时候该打分支？<br>当主线项目需要添加一个新的功能，而这个功能需要开发比较长的时间。在新功能开发的这段时间内，主线的项目还需要继续修改Bug，发新版本。这种情况下，就需要另起个分支，用来开发新功能，而且不影响主线程的进度。<br>       分支开发注意的地方：<br>      1）主线尽量不要改变分支上要更改的文件<br>      2）分支尽量代码独立</p>
<p>如何打分支？<br>打分支和打标签是一样的，命令也是 svn copy，格式也是一样的。</p>
<p>14、合并代码<br>          在分支上开发代码完成后，就需要把分支的代码合并到主线程，有时特殊需要，也会把主线的代码合并到分支中。<br>         合并分支要注意的地方：<br>         1）要记录打分支时的版本号<br>         2）要记录每次合并代码的版本号<br>        如何合并代码？<br>例子：把分支的代码合并到主线中<br>        终端命令进入主线代码的跟目录，执行如下命令：<br>svn merge –r 打分支时版本号或者上次合并的版本号:HEAD 分支URL</p>
<h4 id="Git-的-gitignore-怎么配置-与-Git技巧"><a href="#Git-的-gitignore-怎么配置-与-Git技巧" class="headerlink" title="Git 的 .gitignore 怎么配置 与 Git技巧"></a>Git 的 .gitignore 怎么配置 与 Git技巧</h4><p>（一）Git 创建</p>
<p>How to fully delete a git repository created with init?</p>
<p><a href="http://stackoverflow.com/questions/1213430/how-to-fully-delete-a-git-repository-created-with-init" target="_blank" rel="external">stackoverflow</a></p>
<p>Is there a command to undo git init?</p>
<p><a href="http://stackoverflow.com/questions/3212459/is-there-a-command-to-undo-git-init" target="_blank" rel="external">stackoverflow</a></p>
<p>How to create .gitignore file</p>
<p><a href="http://stackoverflow.com/questions/10744305/how-to-create-gitignore-file" target="_blank" rel="external">stackoverflow</a></p>
<p>（二）.gitignore 语法</p>
<p>Configure git to track only one file extension</p>
<p><a href="http://stackoverflow.com/questions/12799855/configure-git-to-track-only-one-file-extension" target="_blank" rel="external">stackoverflow</a></p>
<p>How to include only selected files into git repository and exclude all the rest?</p>
<p><a href="http://stackoverflow.com/questions/6828121/how-to-include-only-selected-files-into-git-repository-and-exclude-all-the-rest" target="_blank" rel="external">stackoverflow</a></p>
<p>Using .gitignore to ignore everything but specific directories</p>
<p><a href="http://stackoverflow.com/questions/5241644/using-gitignore-to-ignore-everything-but-specific-directories" target="_blank" rel="external">stackoverflow</a></p>
<p>gitignore - only allow certain extensions and files</p>
<p><a href="http://stackoverflow.com/questions/11852558/gitignore-only-allow-certain-extensions-and-files/11853075#11853075" target="_blank" rel="external">stackoverflow</a></p>
<p>How to ignore all files in a folder with a git repository in SourceTree?</p>
<p><a href="http://stackoverflow.com/questions/9665399/how-to-ignore-all-files-
in-a-folder-with-a-git-repository-in-sourcetree" target="_blank" rel="external">stackoverflow</a></p>
<p>（三）Xcode 配置 .gitignore</p>
<p>Git ignore file for Xcode projects (重要)</p>
<p><a href="http://stackoverflow.com/questions/49478/git-ignore-file-for-xcode-projects" target="_blank" rel="external">stackoverflow</a></p>
<p>Xcode 7: ignore .xcscmblueprint in repository?</p>
<p><a href="http://stackoverflow.com/questions/31584297/xcode-7-ignore-xcscmblueprint-in-repository" target="_blank" rel="external">stackoverflow</a></p>
<p><a href="https://github.com/github/gitignore/blob/master/Objective-C.gitignore" target="_blank" rel="external">GitHub</a>   (对，这个)</p>
<p>(四) 删除Git历史 —— 不能乱用，想清楚！<br>Make the current commit the only (initial) commit in a Git repository? 不能乱用，想清楚 !</p>
<p><a href="http://stackoverflow.com/questions/9683279/make-the-current-commit-the-only-initial-commit-in-a-git-repository" target="_blank" rel="external">stackoverflow</a></p>
<p>(五) 压缩Git仓库、仓库维护、提交历史恢复</p>
<p>Reduce git repository size （压缩Git仓库——这个好）</p>
<p><a href="http://stackoverflow.com/questions/2116778/reduce-git-repository-size" target="_blank" rel="external">stackoverflow</a></p>
<p>How to Shrink a Git Repository</p>
<p><a href="http://stevelorek.com/how-to-shrink-a-git-repository.html" target="_blank" rel="external">stackoverflow</a></p>
<p>10.7 Git Internals - Maintenance and Data Recovery (先添加再删除“大文件” 移除提交记录——这个权威)<br><a href="https://git-scm.com/book/en/v2/Git-Internals-Maintenance-and-Data-Recovery" target="_blank" rel="external">git</a></p>
<h4 id="SourceTree：Git-or-SVN"><a href="#SourceTree：Git-or-SVN" class="headerlink" title="SourceTree：Git or SVN"></a>SourceTree：Git or SVN</h4><p><a href="http://johnwong.github.io/mobile/2015/04/30/using-git-with-svn.html" target="_blank" rel="external">用Git的方式使用SVN</a></p>
<p><a href="https://git-scm.com/book/zh/v1/Git-与其他系统-Git-与-Subversion" target="_blank" rel="external">8.1 Git 与其他系统 - Git 与 Subversion</a></p>
<p><a href="https://answers.atlassian.com/questions/33855/can-sourcetree-connect-to-hosted-svn-repos-through-ssh" target="_blank" rel="external">Can SourceTree connect to hosted SVN repos through SSH?</a></p>
<p><a href="https://confluence.atlassian.com/sourcetreekb/git-svn-problems-on-mountain-lion-296913129.html" target="_blank" rel="external">git-svn problems on Mountain Lion</a></p>
<p><a href="http://www.third-helix.com/2013/09/08/using-sourcetree-with-subversion-hint-dont.html" target="_blank" rel="external">USING SOURCETREE WITH SUBVERSION (HINT: DON’T)</a></p>
<p><a href="http://www.jianshu.com/p/38d92385e0f6" target="_blank" rel="external">mac 下 sourcetree 下载 使用 安装svn</a></p>
<p><a href="http://kenlai.logdown.com/posts/52372--git-dropbox-sourcetree-source-code-management" target="_blank" rel="external">使用 Git + Dropbox + SourceTree 做 Source Code Management ( 这个很强大！)</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文章出处，原创于 &lt;a href=&quot;https://HawkingOuYang.github.io/&quot;&gt;https://HawkingOuYang.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/HawkingOuYang
    
    </summary>
    
      <category term="iOS" scheme="https://HawkingOuYang.github.io/categories/iOS/"/>
    
    
      <category term="iOS" scheme="https://HawkingOuYang.github.io/tags/iOS/"/>
    
  </entry>
  
</feed>
